{"version":3,"sources":["redux/actions/articles.ts","redux/actions/category.ts","redux/state.ts","redux/reducers/category.ts","redux/reducers/articles.ts","redux/actions/copy-link-snackbar.ts","redux/reducers/copy-link-snackbar.ts","redux/actions/search-keyword.ts","redux/reducers/search-keyword.ts","redux/reducers/root-reducers.ts","redux/configureStore.ts","theme.tsx","tools/use-debounce.ts","tools/use-sticky.ts","components/utility-components/sticky-component.tsx","components/header/header-search.tsx","containers/header-search-container.tsx","components/header/header.tsx","tools/copy-to-clipboard.ts","tools/use-swipeable.ts","components/utility-components/swipeable.tsx","components/articles/articles.tsx","tools/use-lazy-load.ts","tools/get-publish-time.ts","containers/articles-container.tsx","components/attribution.tsx","components/copy-link-snackbar.tsx","containers/copy-link-snackbar-container.tsx","components/articles/searched-articles/status.tsx","components/articles/searched-articles/sort/sort-types.ts","components/articles/searched-articles/request-search-news.ts","components/articles/searched-articles/use-search-news.tsx","components/articles/searched-articles/message-components/result-count-message.tsx","components/articles/searched-articles/message-components/loading-message.tsx","components/articles/searched-articles/message-components/load-more-message.tsx","components/articles/searched-articles/sort/sort-panel.tsx","components/articles/searched-articles/message-components/generic-message.tsx","components/articles/searched-articles/highlighted-content.tsx","components/articles/searched-articles/searched-article-card.tsx","components/articles/searched-articles/scroll-to-top-button.tsx","components/articles/searched-articles/keyword-frequency.tsx","components/articles/searched-articles/searched-articles.tsx","containers/searched-articles-container.tsx","inner-app.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["ArticleActionsTypes","Category","fetchArticles","category","QUERY","dispatch","type","REQUEST_ARTICLES","fetch","encodeURIComponent","then","res","json","errors","IS_ERROR","articles","RECEIVE_ARTICLES","slice","receiveArticles","data","getNews","CategoryActionsType","categories","setCategoryAndFetchArticles","SET_CATEGORY","setCategory","initState","HEADLINE","isError","isFetching","copyLinkSnackBar","isActive","searchKeyword","state","action","CopyLinkSnackbarActionsTypes","actions","Object","assign","copyLinkSnackbar","SearchKeywordTypes","CLOSE_SNACKBAR","OPEN_SNACKBAR","SET_KEYWORD","keyword","rootReducers","combineReducers","preloadedState","theme","createMuiTheme","palette","primary","main","contrastText","secondary","responsiveFontSizes","typography","h1","fontFamily","join","fontWeight","fontSize","breakpoints","up","useDebounce","Style","debounceInterval","lastExecuted","Date","now","getStyle","styleName","FIXED","position","top","left","width","RELATIVE","useSticky","fixedStartHeight","useState","style","setStyle","isFixed","setIsFixed","shouldBeExecuted","scrollHandler","scrolled","window","scrollY","useEffect","document","addEventListener","removeEventListener","StickyComponent","props","childrenRef","useRef","createElement","visibility","children","zIndex","ref","useStyles","makeStyles","dialog","minWidth","HeaderSearch","search","open","setOpen","input","setInput","isEmpty","setIsEmpty","handleClose","Tooltip","title","TransitionComponent","Zoom","IconButton","aria-label","color","onClick","Dialog","onClose","fullWidth","maxWidth","onSubmit","e","preventDefault","length","DialogTitle","DialogContent","TextField","error","autoFocus","margin","label","value","onChange","target","helperText","DialogActions","Button","HeaderSearchContainer","connect","setSearchKeyword","SEARCH","tab","flexShrink","flexGrow","heading","textTransform","height","display","flexDirection","alignItems","justifyContent","appBarNoBoxShadow","boxShadow","appBarBottomBoxShadow","trendIcon","Header","classes","dispatcher","useDispatch","appBarRef","clickHandler","getState","setCategoryIfNeeded","AppBar","className","Toolbar","Grid","container","item","xs","md","Typography","align","variant","component","justify","current","offsetTop","offsetHeight","Tabs","headers","indexOf","indicatorColor","textColor","scrollButtons","map","_","i","Tab","key","copyToClipboard","UseSwipeableDirections","UserAction","string","el","setAttribute","body","appendChild","select","execCommand","removeChild","DEBOUNCER","useSwipeable","threshholdPx","x1","setX1","y1","setY1","NULL","userAction","setUserAction","direction","setDirection","dragDistance","setDragDistance","touchStartHandler","changedTouches","clientX","clientY","touchMoveHandler","currentX","currentY","cancelable","Math","abs","SWIPE","SCROLL","touchEndHandler","RIGHT","LEFT","currentElement","resetSwipeStatus","SwipeableContainer","goPrevious","currentCategory","currentIndex","goNext","isLast","containerRef","transform","createStyles","wrapper","down","calcHeight","lines","lineHeight","ellipsis","root","content","bottom","right","backgroundImage","overFlowHidden","overflow","usePrimaryCardStyles","media","skeleton","source","articleContent","buttons","useSecondaryCardStyles","Buttons","CardActions","Link","href","url","rel","underline","size","openCopyLinkSnackBar","Article","isVisible","setIsVisible","scrollHandlerLastCalledAt","checkIsVisible","calledAt","rect","getBoundingClientRect","isBefore","isAfter","innerHeight","useLazyLoad","isMounted","setIsMounted","isTransitionAnimationNeeded","useMediaQuery","useTheme","isPrimaryCard","id","cardPrimaryClasses","cardSecondaryClasses","cardClasses","setTimeout","Card","raised","urlToImage","CardMedia","alt","image","Skeleton","CardContent","gutterBottom","Box","author","date","timePast","getTime","minutes","floor","hours","days","months","years","getPublishTime","publishedAt","replace","in","LoadedArticles","article","ArticlesContainer","scrollTo","minHeight","Array","from","alignContent","spacing","Attribution","mt","mb","mx","Chip","avatar","Avatar","clickable","successSnackBar","backgroundColor","green","CopyLinkSnackbar","closeHandlder","closeCopyLinkSnackBar","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","SnackbarContent","message","Status","CopyLinkSnackBarContainer","SortTypes","baseUrl","requestSearchNews","skip","setStatus","setData","setTotalCount","setFrequencyData","LOADING","status","ERROR","totalCount","prevData","frequency","bin","LOADED_NORMAL","LOADED_EMPTY","catch","console","log","useSearchNews","RELEVANCE","sortType","setSortType","frequencyData","sortByDate","sort","a","b","dateA","DATE","sortByRelevance","score","ResultsCountMessage","count","currentLength","LoadingMessage","animation","LoadMoreMessage","disableElevation","capitalizeString","lowercase","toLowerCase","charAt","toUpperCase","SortPanel","FormControl","InputLabel","htmlFor","Select","newType","inputProps","name","MenuItem","GenericMessage","divider","Divider","highlight","light","HighlightedContent","re","RegExp","contentArray","split","cardRoot","cardActionArea","textDecoration","cursor","cardMedia","cardContent","SearchedArticleCard","cardHeight","setCardHeight","heightRef","useGetHeight","CardActionArea","toDateString","transition","transitions","create","ScrollToTopButton","setIsActive","handleScroll","useActivateByScrollY","Fade","KeywordFrequency","wrapperRef","lightColor","darkColor","dark","primaryColor","binDateStringArray","useMemo","obj","ms","getFullYear","getMonth","getDate","delayArray","array","delay","push","maxFrequency","max","apply","binLength","svgWidth","svgHeight","min","round","m","chartWidth","chartHeight","chartX","chartY","xScale","d3","domain","toString","range","yScale","barWidth","bandwidth","barHeight","d","barX","svg","append","bars","selectAll","enter","hoverDetectionBars","attr","duration","ease","yAxisScale","yAxis","yLegends","tickFormat","tickValues","xAxisScale","xLegends","xAxis","grid","gridLine","tickSizeInner","tickSizeOuter","tickPadding","hoverDateText","hoverDateTextAxis","hoverFreqText","hoverFreqTextAxis","tickSize","on","remove","filter","index","widthWrapper","padding","SearchedArticles","resultsFound","hasMoreData","endOfResult","_id","SearchedArticlesContainer","overflowX","paddingBottom","InnerAppContainer","isSearching","fetchArticlesAfterMount","store","createStore","applyMiddleware","thunkMiddleware","App","ThemeProvider","CssBaseline","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.02861e7b.chunk.js","sourcesContent":["import {Action, ActionCreator, AnyAction} from \"redux\";\nimport { Category } from './category';\nimport {State} from \"../state\";\nimport {ThunkDispatch} from \"redux-thunk\";\n\nexport interface Article {\n    source: string,\n    author: string,\n    title: string,\n    description: string,\n    url: string,\n    urlToImage: string,\n    publishedAt: string,\n    content: string\n}\n\n\nexport enum ArticleActionsTypes {\n    IS_ERROR = 'IS_ERROR',\n    REQUEST_ARTICLES = 'REQUEST_ARTICLES',\n    RECEIVE_ARTICLES = 'RECEIVE_ARTICLES'\n}\n\nexport interface ArticlesRequestFailedAction {\n    type: ArticleActionsTypes.IS_ERROR\n}\n\nconst requestArticlesFailed: ActionCreator<ArticlesRequestFailedAction> = () => {\n    return {\n        type: ArticleActionsTypes.IS_ERROR\n    }\n};\n\nexport interface ArticlesRequestAction {\n    type: ArticleActionsTypes.REQUEST_ARTICLES\n}\n\nconst requestArticles: ActionCreator<ArticlesRequestAction> = () => {\n    return {\n        type: ArticleActionsTypes.REQUEST_ARTICLES\n    }\n};\n\nexport interface ArticlesReceiveAction {\n    type: ArticleActionsTypes.RECEIVE_ARTICLES,\n    articles: Array<Article>\n}\n\nconst receiveArticles: ActionCreator<ArticlesReceiveAction> = (articles: Array<Article>) => {\n    return {\n        type: ArticleActionsTypes.RECEIVE_ARTICLES,\n        articles: articles.slice()\n    }\n};\n\nconst NEWS_API = 'https://www.xiaoxihome.com/api/news?query=';\n\nexport const fetchArticles = (category: Category) => {\n    const QUERY = `\n        {\n            getNews(category: ${category}) {\n                source,\n                author,\n                title,\n                description,\n                url,\n                urlToImage,\n                publishedAt,\n                content\n            }\n        }\n    `;\n\n    return (dispatch: ThunkDispatch<State, null, AnyAction>) => {\n        dispatch(requestArticles());\n        return fetch(NEWS_API + encodeURIComponent(QUERY))\n            .then(res => res.json())\n            .then(json => {\n                if (json.errors) {\n                    dispatch(requestArticlesFailed())\n                } else {\n                    dispatch(receiveArticles(json.data.getNews))\n                }\n            })\n    }\n};\n\nexport type ArticlesActions =  ArticlesRequestAction | ArticlesRequestFailedAction | ArticlesReceiveAction;","import {fetchArticles} from \"./articles\";\nimport {ActionCreator, AnyAction} from \"redux\";\nimport {ThunkDispatch} from \"redux-thunk\";\nimport {State} from \"../state\";\n\nexport enum Category {\n    HEADLINE= `HEADLINE`,\n    BUSINESS= `BUSINESS`,\n    ENTERTAINMENT= `ENTERTAINMENT`,\n    HEALTH= `HEALTH`,\n    SCIENCE= `SCIENCE`,\n    SPORTS= `SPORTS`,\n    TECHNOLOGY= `TECHNOLOGY`,\n    SEARCH=`SEARCH`\n}\n\nexport type Categories = Array<keyof typeof Category>;\n\nexport const categories: Categories = [\n    `HEADLINE`, `BUSINESS`, `ENTERTAINMENT`, `HEALTH`, `SCIENCE`, `SPORTS`, `TECHNOLOGY`\n];\n\nexport enum CategoryActionsType {\n    SET_CATEGORY = 'SET_CATEGORY'\n}\n\nexport interface CategoryActions {\n    type: CategoryActionsType,\n    category: Category\n}\n\nconst setCategory: ActionCreator<CategoryActions> = (category: Category) => {\n    return {\n        type: CategoryActionsType.SET_CATEGORY,\n        category\n    }\n};\n\nexport function goToSearchPanel() {\n    return {\n        type: CategoryActionsType.SET_CATEGORY,\n        category: Category.SEARCH\n    }\n}\n\nconst setCategoryAndFetchArticles = (category: Category) => {\n    return (dispatch: ThunkDispatch<State, null, AnyAction>) => {\n        dispatch(setCategory(category));\n        dispatch(fetchArticles(category));\n    };\n};\n\nexport function setNextCategory() {\n    return (dispatch: ThunkDispatch<State, null, AnyAction>, getState: () => State) => {\n        const currentCategory = getState().category;\n        const currentIndex = categories.indexOf(currentCategory);\n        const isLast = currentIndex === categories.length - 1;\n        if (isLast) {\n            dispatch(setCategoryAndFetchArticles(Category[categories[0]]));\n        } else {\n            dispatch(setCategoryAndFetchArticles(Category[categories[currentIndex + 1]]));\n        }\n    };\n}\n\nexport function setPreviousCategory() {\n    return (dispatch: ThunkDispatch<State, null, AnyAction>, getState: () => State) => {\n        const currentCategory = getState().category;\n        const currentIndex = categories.indexOf(currentCategory);\n        const isFirst = currentIndex === 0;\n        if (isFirst) {\n            dispatch(setCategoryAndFetchArticles(Category[categories[categories.length - 1]]));\n        } else {\n            dispatch(setCategoryAndFetchArticles(Category[categories[currentIndex - 1]]));\n        }\n    };\n}\n\nexport function setCategoryIfNeeded(category: Category) {\n    return (dispatch: ThunkDispatch<State, null, AnyAction>, getState: () => State) => {\n        if (getState().category === category) return;\n        dispatch(setCategoryAndFetchArticles(category));\n    };\n}\n","import {Category} from \"./actions/category\";\nimport {Article} from \"./actions/articles\";\n\nexport interface State {\n    category: Category,\n    articles: {\n        isError: boolean,\n        isFetching: boolean,\n        articles: Array<Article>\n    },\n    copyLinkSnackBar: {\n        isActive: boolean\n    },\n    searchKeyword: string\n}\n\nexport const initState: State = {\n    category: Category.HEADLINE,\n    articles: {\n        isError: false,\n        isFetching: true,\n        articles: []\n    },\n    copyLinkSnackBar: {\n        isActive: false\n    },\n    searchKeyword: ''\n};","import {initState, State} from \"../state\";\nimport {Category, CategoryActions, CategoryActionsType} from \"../actions/category\";\n\nfunction category(state = initState.category, action: CategoryActions): State['category'] {\n    switch (action.type) {\n        case CategoryActionsType.SET_CATEGORY:\n            return Category[action.category];\n        default:\n            return state\n    }\n}\n\nexport default category;","import {initState, State} from \"../state\";\nimport {ArticleActionsTypes, ArticlesActions} from \"../actions/articles\";\n\nfunction articles(state = initState.articles, actions: ArticlesActions): State['articles'] {\n    switch(actions.type) {\n        case ArticleActionsTypes.IS_ERROR:\n            return Object.assign({}, state, {isError: true});\n        case ArticleActionsTypes.REQUEST_ARTICLES:\n            return Object.assign({}, state, {\n                isError: false,\n                isFetching: true\n            });\n        case ArticleActionsTypes.RECEIVE_ARTICLES:\n            return Object.assign({}, {\n                isError: false,\n                isFetching: false,\n                articles: actions.articles.slice()\n            });\n        default:\n            return state\n    }\n}\n\nexport default articles;","export enum CopyLinkSnackbarActionsTypes {\n    CLOSE_SNACKBAR = 'CLOSE_SNACKBAR',\n    OPEN_SNACKBAR = 'OPEN_SNACKBAR'\n}\n\nexport interface CopyLinkSnackBarActions {\n    type: CopyLinkSnackbarActionsTypes\n}\n\nexport function closeCopyLinkSnackBar() {\n    return {\n        type: CopyLinkSnackbarActionsTypes.CLOSE_SNACKBAR\n    }\n}\n\nexport function openCopyLinkSnackBar() {\n    return {\n        type: CopyLinkSnackbarActionsTypes.OPEN_SNACKBAR\n    }\n}","import {CopyLinkSnackBarActions, CopyLinkSnackbarActionsTypes} from \"../actions/copy-link-snackbar\";\nimport {State, initState} from \"../state\";\n\nfunction copyLinkSnackbar(state = initState.copyLinkSnackBar, actions: CopyLinkSnackBarActions): State['copyLinkSnackBar'] {\n    switch(actions.type) {\n        case CopyLinkSnackbarActionsTypes.CLOSE_SNACKBAR:\n            return {\n                isActive: false\n            };\n        case CopyLinkSnackbarActionsTypes.OPEN_SNACKBAR:\n            return {\n                isActive: true\n            };\n        default:\n            return state\n    }\n}\n\nexport default copyLinkSnackbar","export enum SearchKeywordTypes {\n    SET_KEYWORD = 'SET_KEYWORD'\n}\n\nexport interface SearchKeywordActions {\n    type: SearchKeywordTypes,\n    keyword: string\n}\n\nexport function setSearchKeyword(keyword: string) {\n    return {\n        type: SearchKeywordTypes.SET_KEYWORD,\n        keyword\n    }\n}","import {CopyLinkSnackBarActions, CopyLinkSnackbarActionsTypes} from \"../actions/copy-link-snackbar\";\nimport {State, initState} from \"../state\";\nimport {SearchKeywordActions, SearchKeywordTypes} from \"../actions/search-keyword\";\n\nfunction searchKeyword(state = initState.searchKeyword, actions: SearchKeywordActions): State['searchKeyword'] {\n    switch(actions.type) {\n        case SearchKeywordTypes.SET_KEYWORD:\n            return actions.keyword;\n        default:\n            return state\n    }\n}\n\nexport default searchKeyword","import {combineReducers} from \"redux\";\nimport category from \"./category\";\nimport articles from \"./articles\";\nimport copyLinkSnackBar from \"./copy-link-snackbar\";\nimport searchKeyword from \"./search-keyword\";\n\nconst rootReducers = combineReducers({\n    category,\n    articles,\n    copyLinkSnackBar,\n    searchKeyword\n});\n\nexport default rootReducers;","import { createStore, applyMiddleware } from 'redux'\nimport thunkMiddleware from 'redux-thunk'\nimport {initState} from \"./state\";\nimport rootReducers from \"./reducers/root-reducers\";\n\n// import { createLogger } from 'redux-logger'\n// const loggerMiddleware = createLogger();\n\nconst preloadedState = initState;\nexport default function configureStore() {\n    return createStore(\n        rootReducers,\n        preloadedState,\n        applyMiddleware(thunkMiddleware)\n        // applyMiddleware(thunkMiddleware, loggerMiddleware)\n    )\n}","import {createMuiTheme, responsiveFontSizes} from \"@material-ui/core/styles\";\n\nlet theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: '#333333',\n            contrastText: '#fff',\n        },\n        secondary: {\n            main: '#1EB980',\n            contrastText: '#fff',\n        },\n    },\n});\ntheme = responsiveFontSizes(theme);\ntheme.typography.h1 = {\n    fontFamily: [\n        'Anton',\n        'sans-serif',\n    ].join(','),\n    fontWeight: 400,\n    fontSize: '2rem',\n    [theme.breakpoints.up('md')]: {\n        fontSize: '2.5rem',\n    },\n    fontStyle: \"normal\",\n    color: \"inherit\"\n};\n\nexport default theme;","function useDebounce(debounceInterval: number) {\n    let lastExecuted = Date.now();\n\n    function shouldBeExecuted() {\n        const now = Date.now();\n        if (now - lastExecuted > debounceInterval) {\n            lastExecuted = now;\n            return true\n        } else {\n            return false\n        }\n    }\n\n    return shouldBeExecuted;\n}\n\nexport default useDebounce;","import {useState, CSSProperties, useEffect} from \"react\";\nimport useDebounce from \"./use-debounce\";\n\n\nenum Style {\n    FIXED = 'FIXED',\n    RELATIVE = 'RELATIVE'\n}\n\nconst getStyle = (styleName: Style) => {\n    const style = {\n        FIXED: {\n            position: \"fixed\",\n            top: 0,\n            left: 0,\n            width: \"100%\"\n        } as CSSProperties,\n        RELATIVE: {\n            position: \"relative\",\n            width: \"100%\"\n        } as CSSProperties,\n    };\n\n    return {...style[styleName]};\n};\n\nfunction useSticky(fixedStartHeight: number) {\n    const [style, setStyle] = useState(Style.RELATIVE);\n    const [isFixed, setIsFixed] = useState(false);\n    const shouldBeExecuted = useDebounce(10);\n\n    function scrollHandler() {\n        const scrolled = window.scrollY;\n        if (scrolled === 0 && style !== Style.RELATIVE) {\n            // don't debounce when fast scrolling to top\n            setStyle(Style.RELATIVE);\n            setIsFixed(false);\n            return;\n        }\n\n        if (!shouldBeExecuted()) return;\n        if (scrolled >= fixedStartHeight && style !== Style.FIXED) {\n            setStyle(Style.FIXED);\n            setIsFixed(true);\n        } else if (scrolled < fixedStartHeight && style !== Style.RELATIVE) {\n            setStyle(Style.RELATIVE);\n            setIsFixed(false);\n        }\n    }\n\n    useEffect(() => {\n        document.addEventListener('scroll', scrollHandler);\n\n        return () => {\n            document.removeEventListener('scroll', scrollHandler);\n        }\n    }, [style]);\n\n    return {\n        style: getStyle(style),\n        isFixed\n    };\n}\n\nexport default useSticky;","import React, {useRef} from \"react\";\nimport useSticky from \"../../tools/use-sticky\";\n\ninterface StickyComponentProps {\n    fixedStartHeight: number,\n    zIndex?: number,\n}\n\nconst StickyComponent: React.FC<StickyComponentProps> = (props) => {\n    const {\n        style,\n        isFixed\n    } = useSticky(props.fixedStartHeight);\n    const childrenRef = useRef(document.createElement('div'));\n\n    return (\n        <>\n            { isFixed &&\n            <div style={{visibility: 'hidden'}}>\n                { props.children }\n            </div> }\n            <div style={{...style, zIndex: props.zIndex ? props.zIndex : 'auto'}} ref={childrenRef}>\n                { props.children }\n            </div>\n        </>\n    )\n};\n\nexport default StickyComponent;","import React, {FormEvent, useEffect, useState} from \"react\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Button from '@material-ui/core/Button';\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport {Tooltip} from \"@material-ui/core\";\nimport Zoom from \"@material-ui/core/Zoom\";\n\nconst useStyles = makeStyles(theme => ({\n    dialog: {\n        minWidth: '50vw'\n    }\n}));\n\ninterface HeaderSearchProps {\n    search: (keyword: string) => void\n}\n\nconst HeaderSearch: React.FC<HeaderSearchProps> = ({search}) => {\n\n    const classes = useStyles();\n\n    const [open, setOpen] = useState(false);\n    const [input, setInput] = useState('');\n    const [isEmpty, setIsEmpty] = useState(false);\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setInput('');\n        setOpen(false);\n    };\n\n    const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        if (isEmpty) setIsEmpty(false);\n        setInput(e.target.value)\n    };\n\n    const handleSubmit = (e: FormEvent) => {\n        e.preventDefault();\n        if (!input.length) {\n            setIsEmpty(true);\n        } else {\n            search(input);\n            handleClose();\n        }\n    };\n\n    return (\n        <div>\n            <Tooltip title=\"Search\" TransitionComponent={Zoom}>\n                <IconButton aria-label=\"search\" color={\"inherit\"} onClick={handleClickOpen}>\n                    <SearchIcon/>\n                </IconButton>\n            </Tooltip>\n            <Dialog open={open} onClose={handleClose} fullWidth maxWidth='sm'>\n                <form action='/' onSubmit={handleSubmit}>\n                    <DialogTitle>Search from archived news</DialogTitle>\n                    <DialogContent>\n                        <TextField\n                            error={isEmpty}\n                            autoFocus\n                            margin=\"dense\"\n                            label=\"Keywords\"\n                            type=\"news keyword\"\n                            fullWidth\n                            value={input}\n                            onChange={handleInputChange}\n                            helperText={isEmpty ? 'Keyword cannot be empty.' : ' '}\n                        />\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={handleClose} color=\"primary\" aria-label='cancel'>\n                            Cancel\n                        </Button>\n                        <Button type=\"submit\" color=\"primary\" aria-label='submit search'>\n                            Search\n                        </Button>\n                    </DialogActions>\n                </form>\n            </Dialog>\n        </div>\n    )\n};\n\nexport default HeaderSearch","import {connect} from \"react-redux\";\nimport HeaderSearch from \"../components/header/header-search\";\nimport {Dispatch} from \"redux\";\nimport {goToSearchPanel} from \"../redux/actions/category\";\nimport {setSearchKeyword} from \"../redux/actions/search-keyword\";\n\nfunction mapDispatchToProps(dispatch: Dispatch) {\n    return {\n        search: (keyword: string) => {\n            dispatch(setSearchKeyword(keyword));\n            dispatch(goToSearchPanel())\n        }\n    }\n}\n\nconst HeaderSearchContainer = connect(\n    null,\n    mapDispatchToProps\n)(HeaderSearch);\n\nexport default HeaderSearchContainer;","import React, {useRef} from \"react\";\nimport {AppBar, Grid, Tab, Tabs, Theme, Toolbar, Tooltip, Typography,} from \"@material-ui/core\";\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport {Categories, Category, setCategoryIfNeeded} from \"../../redux/actions/category\";\nimport {useDispatch} from \"react-redux\";\nimport StickyComponent from \"../utility-components/sticky-component\";\nimport IconButton from '@material-ui/core/IconButton';\nimport AssessmentIcon from '@material-ui/icons/Assessment';\nimport HeaderSearchContainer from \"../../containers/header-search-container\";\nimport Zoom from \"@material-ui/core/Zoom\";\n\n\nconst useStyles = makeStyles((theme: Theme) => ({\n    tab: {\n        flexShrink: 0,\n        flexGrow: 1,\n        color: theme.palette.primary.contrastText\n    },\n    heading: {\n        textTransform: 'uppercase',\n        height: '100%',\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'center'\n    },\n    appBarNoBoxShadow: {\n        boxShadow: 'none'\n    },\n    appBarBottomBoxShadow: {\n        boxShadow: '0px 4px 4px -1px rgba(0,0,0,0.2), 0px 5px 5px 0px rgba(0,0,0,0.14), 0px 10px 10px 0px rgba(0,0,0,0.12)'\n    },\n    trendIcon: {\n        color: '#FFF'\n    }\n}));\n\ninterface HeaderProps {\n    headers: Categories\n    category: Category\n}\n\nfunction Header(props: HeaderProps) {\n    const classes = useStyles();\n    const dispatcher = useDispatch();\n    const appBarRef = useRef(document.createElement('div'));\n\n    const clickHandler = (category: Category) => {\n        dispatcher(setCategoryIfNeeded(category));\n    };\n\n\n    return (\n        <>\n        <AppBar color=\"primary\" position={'static'} ref={appBarRef} className={classes.appBarNoBoxShadow}>\n            <Toolbar>\n                <Grid container>\n                    <Grid item xs={1} md={3}>\n\n                    </Grid>\n                    <Grid item xs={7} md={6}>\n                        <Typography align={\"center\"} className={classes.heading} variant={\"h1\"} component={'h1'}>\n                            News Canada\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={4} md={3}>\n                        <Grid container alignItems={'center'} justify={\"flex-end\"}>\n                            <Grid item>\n                                <HeaderSearchContainer/>\n                            </Grid>\n                            <Grid item>\n                                <Tooltip title=\"Analytics\" TransitionComponent={Zoom}>\n                                    <IconButton aria-label=\"news trend\" color={\"inherit\"}>\n                                        <AssessmentIcon/>\n                                    </IconButton>\n                                </Tooltip>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Toolbar>\n        </AppBar>\n        <StickyComponent\n            fixedStartHeight={appBarRef !== null ? appBarRef.current.offsetTop + appBarRef.current.offsetHeight : 50}\n            zIndex={1100}>\n            <AppBar color=\"primary\" position={'static'} className={classes.appBarBottomBoxShadow}>\n                <Tabs\n                    value={props.headers.indexOf(props.category) === -1 ? false : props.headers.indexOf(props.category)}\n                    indicatorColor=\"secondary\"\n                    textColor=\"secondary\"\n                    variant=\"scrollable\"\n                    scrollButtons=\"auto\"\n                >\n                    {\n                        props.headers.map((_, i) => <Tab label={_} key={i} className={classes.tab} onClick={() => clickHandler(Category[_])}/>)\n                    }\n                </Tabs>\n            </AppBar>\n        </StickyComponent>\n        </>\n    )\n}\n\nexport default Header;","function copyToClipboard(string: string) {\n    const el = document.createElement('textarea');\n    el.value = string;\n    el.setAttribute('readonly', '');\n    el.style.position = 'absolute';\n    el.style.left = '-9999px';\n    document.body.appendChild(el);\n    el.select();\n    document.execCommand('copy');\n    document.body.removeChild(el);\n}\n\nexport default copyToClipboard;","import {RefObject, useEffect, useState} from \"react\";\nimport useDebounce from \"./use-debounce\";\n\nexport enum UseSwipeableDirections {\n    NULL= 'NULL',\n    LEFT = 'LEFT',\n    RIGHT = 'RIGHT'\n}\n\nenum UserAction {\n    NULL = 'NULL',\n    SWIPE = 'SWIPE',\n    SCROLL = 'SCROLL'\n}\n\nconst DEBOUNCER = 10;\n\nfunction useSwipeable(ref: RefObject<HTMLInputElement>, threshholdPx: number) {\n    const [x1, setX1] = useState(0);\n    const [y1, setY1] = useState(0);\n    const [userAction, setUserAction] = useState(UserAction.NULL);\n    const [direction, setDirection] = useState(UseSwipeableDirections.NULL);\n    const [dragDistance, setDragDistance] = useState(0);\n    const shouldBeExecuted = useDebounce(DEBOUNCER);\n\n    function touchStartHandler(e: TouchEvent) {\n        setX1(e.changedTouches[0].clientX);\n        setY1(e.changedTouches[0].clientY)\n    }\n\n    function touchMoveHandler(e: TouchEvent) {\n        if (!shouldBeExecuted()) return;\n        const currentX = e.changedTouches[0].clientX;\n        const currentY = e.changedTouches[0].clientY;\n\n        if (userAction === 'SWIPE') {\n            if (e.cancelable) e.preventDefault();\n            setDragDistance(e.changedTouches[0].clientX - x1);\n        } else if (userAction === 'NULL' && Math.abs(currentX - x1) > Math.abs(currentY - y1)) {\n            setUserAction(UserAction.SWIPE)\n        } else if (userAction === 'NULL' && Math.abs(currentX - x1) <= Math.abs(currentY - y1)) {\n            setUserAction(UserAction.SCROLL)\n        }\n\n    }\n\n    function touchEndHandler(e: TouchEvent) {\n        const currentX = e.changedTouches[0].clientX;\n        const currentY = e.changedTouches[0].clientY;\n        if (\n            Math.abs(currentX - x1) > Math.abs(currentY - y1) &&\n            Math.abs(currentX - x1) > threshholdPx &&\n            userAction === UserAction.SWIPE\n        ) {\n            setDirection(currentX > x1 ? UseSwipeableDirections.RIGHT : UseSwipeableDirections.LEFT);\n        }\n        setDragDistance(0);\n        setUserAction(UserAction.NULL)\n    }\n\n    function resetSwipeStatus() {\n        setDirection(UseSwipeableDirections.NULL);\n    }\n\n    useEffect(() => {\n        const currentElement = ref.current;\n        if (!currentElement) return;\n        currentElement.addEventListener('touchstart', touchStartHandler);\n\n        return () => {\n            currentElement.removeEventListener('touchstart', touchStartHandler);\n        }\n    }, [ref]);\n\n    useEffect(() => {\n        const currentElement = ref.current;\n        if (!currentElement) return;\n        currentElement.addEventListener('touchmove', touchMoveHandler);\n\n        return () => {\n            currentElement.removeEventListener('touchmove', touchMoveHandler);\n        }\n    }, [y1, userAction, ref]);\n\n    useEffect(() => {\n        const currentElement = ref.current;\n        if (!currentElement) return;\n        currentElement.addEventListener('touchend', touchEndHandler);\n\n        return () => {\n            currentElement.removeEventListener('touchend', touchEndHandler);\n        }\n    }, [y1, userAction, ref]);\n\n    return {\n        direction,\n        dragDistance,\n        resetSwipeStatus\n    }\n}\n\nexport default useSwipeable","import React, {useEffect, useRef} from \"react\";\nimport useSwipeable, {UseSwipeableDirections} from \"../../tools/use-swipeable\";\nimport {connect} from \"react-redux\";\nimport {setNextCategory, setPreviousCategory} from \"../../redux/actions/category\";\n\ninterface SwipeableProps {\n    goPrevious: () => void,\n    goNext: () => void,\n}\n\nconst Swipeable: React.FC<SwipeableProps> = (props) => {\n    const containerRef = useRef(null);\n    const {\n        direction,\n        dragDistance,\n        resetSwipeStatus\n    } = useSwipeable(containerRef, 50);\n\n    useEffect(() => {\n        if (direction === UseSwipeableDirections.RIGHT) {\n            props.goPrevious()\n        } else if (direction === UseSwipeableDirections.LEFT) {\n            props.goNext()\n        }\n        return () => {\n            resetSwipeStatus();\n        }\n    }, [direction]);\n\n    return (\n        <div\n            style={{\n                width: '100%',\n                transform: `translateX(${dragDistance}px)`,\n                // it affects snackbar fixed behavior\n                // left: `${dragDistance}px`,\n                // position: 'relative'\n            }}\n            ref={containerRef}\n        >\n            { props.children }\n        </div>\n    )\n};\n\nfunction mapDispatchToProps(dispatch: any) {\n    return {\n        goPrevious: () => dispatch(setPreviousCategory()),\n        goNext: () => dispatch(setNextCategory())\n    }\n}\n\nconst SwipeableContainer = connect(\n    null,\n    mapDispatchToProps\n)(Swipeable);\n\nexport default SwipeableContainer","import React, {CSSProperties, useEffect, useRef, useState} from \"react\";\nimport {\n    Box,\n    Button,\n    Card,\n    CardActions,\n    CardContent,\n    CardMedia,\n    createStyles,\n    Grid,\n    Link,\n    makeStyles,\n    Theme,\n    Typography,\n    useMediaQuery,\n    useTheme,\n    Zoom,\n} from \"@material-ui/core\";\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport useLazyLoad from \"../../tools/use-lazy-load\";\nimport getPublishTime from \"../../tools/get-publish-time\";\nimport copyToClipboard from \"../../tools/copy-to-clipboard\";\nimport {ThemeStyle} from \"@material-ui/core/styles/createTypography\";\nimport Swipeable from '../utility-components/swipeable';\nimport { Article as ArticleType} from \"../../redux/actions/articles\";\nimport {State} from \"../../redux/state\";\n\nconst useStyles = makeStyles((theme) => createStyles({\n    wrapper: {\n        width: 'calc(100% - 40px)',\n        margin: '20px',\n    },\n    [theme.breakpoints.down(\"sm\")]: {\n        wrapper: {\n            width: 'calc(100% - 16px)',\n            margin: '8px'\n        },\n    },\n}));\n\nfunction calcHeight(lines: number, variant: ThemeStyle, theme: Theme): CSSProperties['height'] {\n    return `calc(${lines} * ${theme.typography[variant].fontSize} * ${theme.typography[variant].lineHeight})`;\n}\n\nfunction ellipsis(variant: ThemeStyle, theme: Theme) {\n    return createStyles({\n        root: {\n            position: 'relative',\n            '&:after': {\n                content: \"''\",\n                position: 'absolute',\n                bottom: 0,\n                right: 0,\n                width: '20%',\n                height: calcHeight(1, variant, theme),\n                backgroundImage: 'linear-gradient(to right, rgba(255, 255, 255, 0) , rgba(255, 255, 255, 1))',\n                zIndex: 10\n            },\n        }\n    })\n}\n\nconst overFlowHidden: CSSProperties = {\n    width: '100%',\n    overflow: 'hidden',\n    position: 'relative'\n};\n\nconst usePrimaryCardStyles = makeStyles((theme) => createStyles({\n    media: {\n        height: '550px',\n        ...overFlowHidden,\n    },\n    skeleton: {\n        height: '550px',\n        ...overFlowHidden,\n    },\n    title: {\n        height: calcHeight(1, 'body1', theme),\n        ...ellipsis('body1', theme).root,\n        ...overFlowHidden,\n    },\n    source: {\n        height: calcHeight(1, 'body2', theme),\n        ...overFlowHidden,\n    },\n    articleContent: {\n        height: calcHeight(2, 'body2', theme),\n        ...ellipsis('body2', theme).root,\n        ...overFlowHidden,\n    },\n    buttons: {\n        ...overFlowHidden,\n    },\n    [theme.breakpoints.down(\"sm\")]: {\n        media: {\n            height: '200px',\n        },\n        skeleton: {\n            height: '200px',\n        },\n    }\n}));\n\n\n\nconst useSecondaryCardStyles = makeStyles((theme) => createStyles({\n    media: {\n        height: '200px',\n        ...overFlowHidden,\n    },\n    skeleton: {\n        height: '200px',\n        ...overFlowHidden,\n    },\n    title: {\n        height: calcHeight(2, 'body1', theme),\n        ...ellipsis('body1', theme).root,\n        ...overFlowHidden,\n    },\n    source: {\n        height: calcHeight(1, 'body2', theme),\n        ...overFlowHidden,\n    },\n    articleContent: {\n        height: calcHeight(3, 'body2', theme),\n        ...ellipsis('body2', theme).root,\n        ...overFlowHidden,\n    },\n    buttons: {\n        ...overFlowHidden,\n    },\n    [theme.breakpoints.down(\"sm\")]: {\n\n    }\n}));\n\ninterface ButtonsProps {\n    url: string,\n    className: string,\n    openCopyLinkSnackBar: () => void\n}\n\n\nfunction Buttons(props: ButtonsProps) {\n\n    function copyLinkHandler() {\n        copyToClipboard(props.url);\n        props.openCopyLinkSnackBar();\n    }\n\n    return (\n        <CardActions className={props.className}>\n            <Link href={props.url} target={'_blank'} rel=\"noopener\" underline={\"none\"}>\n                <Button size=\"small\" color=\"primary\">\n                    Learn more\n                </Button>\n            </Link>\n            <Button size=\"small\" color=\"primary\" onClick={copyLinkHandler}>Share</Button>\n        </CardActions>\n    )\n}\n\ninterface ArticleProps extends ArticleType {\n    id: number,\n    openCopyLinkSnackBar: () => void\n}\n\nfunction Article(props: ArticleProps) {\n    const ref = useRef(null);\n    const isVisible = useLazyLoad(ref);\n    const [isMounted, setIsMounted] = useState(false);\n    const isTransitionAnimationNeeded = !useMediaQuery(useTheme().breakpoints.down('sm'));\n\n    const isPrimaryCard = props.id === 0 || props.id === 1;\n    const cardPrimaryClasses = usePrimaryCardStyles();\n    const cardSecondaryClasses = useSecondaryCardStyles();\n    const cardClasses = isPrimaryCard ? cardPrimaryClasses : cardSecondaryClasses;\n\n    useEffect(() => {\n        if (isTransitionAnimationNeeded) {\n            setTimeout(() =>setIsMounted(true), 225)\n            // Zoom transition 225ms\n        }\n    }, []);\n\n    const content = (\n        <Grid\n            item\n            xs={12}\n            md={isPrimaryCard ? 6 : 3}\n            ref={ref}\n        >\n            <Card raised>\n                {\n                    isVisible && props.urlToImage?\n                        <CardMedia\n                            component=\"img\"\n                            alt={props.title}\n                            className={cardClasses.media}\n                            image={props.urlToImage}\n                            title={props.title}\n                        /> :\n                        <Skeleton variant={\"rect\"} className={cardClasses.skeleton} />\n                }\n\n                <CardContent>\n                    <Typography gutterBottom variant=\"body1\" component=\"h2\" className={cardClasses.title}>\n                        <Box fontWeight={700}>\n                            { props.title }\n                        </Box>\n                    </Typography>\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" className={cardClasses.source}>\n                        <Box component={'span'} fontWeight={700}>\n                            { props.source ? props.source + ' - ' : props.author ? props.author + ' - ' : '' }\n                            { getPublishTime(new Date(props.publishedAt)) }\n                        </Box>\n                    </Typography>\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" className={cardClasses.articleContent}>\n                        { props.content && props.content.replace(/\\[\\+[0-9]+\\schars\\]/ig, '') }\n                    </Typography>\n                </CardContent>\n                <Buttons url={props.url} className={cardClasses.buttons} openCopyLinkSnackBar={props.openCopyLinkSnackBar} />\n            </Card>\n        </Grid>\n    );\n\n    return isTransitionAnimationNeeded ? (\n        <Zoom in={!isMounted ? true : isVisible}>\n            { content }\n        </Zoom>\n    ) : content;\n}\n\ninterface LoadedArticlesProps {\n    articles: Array<ArticleType>,\n    openCopyLinkSnackBar: () => void\n}\n\nfunction LoadedArticles(props: LoadedArticlesProps) {\n    return (\n        <>\n            {\n                props.articles.map((article, i) => {\n                    return (\n                        <Article {...article} key={i} id={i} openCopyLinkSnackBar={props.openCopyLinkSnackBar}/>\n                    )\n                })\n            }\n        </>\n    )\n}\n\ninterface ArticlesProps extends Pick<State, 'articles'> {\n    openCopyLinkSnackBar: () => void\n}\n\nfunction Articles(props: ArticlesProps) {\n    const classes = useStyles();\n\n    // scroll to top after is category changed\n    useEffect(() => {\n        window.scrollTo(0, 0);\n    });\n\n    let content;\n    if (props.articles.isError) {\n        content = (\n            <div style={{\n                width: '100%',\n                minHeight: '100vh'\n            }}>\n                error\n            </div>\n        )\n    } else if (props.articles.isFetching) {\n        content = (\n            <>\n                {\n                    Array.from(Array(10), (_, i) => {\n                        return (\n                            <Grid item key={i}>\n                                <Box width={500} height={300} maxWidth={'100%'}>\n                                    <Skeleton variant={\"rect\"} width={500} height={200}/>\n                                    <Skeleton width={500}/>\n                                    <Skeleton width={500}/>\n                                </Box>\n                            </Grid>\n                        )\n                    })\n                }\n            </>\n        )\n    } else {\n        content = <LoadedArticles articles={props.articles.articles} openCopyLinkSnackBar={props.openCopyLinkSnackBar}/>\n    }\n\n    return (\n        <Swipeable>\n            <Box className={classes.wrapper}>\n                <Grid container direction={\"row\"} alignContent={\"center\"} justify={\"center\"} spacing={2}>\n                    { content }\n                </Grid>\n            </Box>\n        </Swipeable>\n    )\n}\n\nexport {Article, Articles as default}","import React, {useEffect, useState} from \"react\";\n\nexport default function useLazyLoad(ref: React.RefObject<HTMLInputElement>) {\n    const [isVisible, setIsVisible] = useState(false);\n    let scrollHandlerLastCalledAt = Date.now() - 1000;\n\n    function checkIsVisible() {\n        const calledAt = Date.now();\n        if (calledAt - scrollHandlerLastCalledAt < 20) {\n            return\n        } else {\n            scrollHandlerLastCalledAt = calledAt\n        }\n        if (!ref.current) return;\n\n        const rect = ref.current.getBoundingClientRect();\n        const isBefore = rect.top + rect.height < 0;\n        const isAfter = rect.top > window.innerHeight;\n        if (!isBefore && !isAfter) setIsVisible(true);\n    }\n\n    useEffect(() => {\n        if (isVisible) return;\n        checkIsVisible();\n        document.addEventListener('scroll', checkIsVisible);\n        return () => {\n            document.removeEventListener('scroll', checkIsVisible);\n        }\n    });\n\n    return isVisible\n}","export default function getPublishTime(date: Date): string{\n    const timePast = Date.now() - date.getTime();\n    if (timePast < 0) {\n        return 'now'\n    }\n    const minutes = Math.floor(timePast / (60 * 1000));\n    if (minutes <= 59) {\n        return `${minutes} ${minutes === 1 ? 'minute' : 'minutes'} ago`\n    }\n    const hours = Math.floor(timePast / (60 * 60 * 1000));\n    if (hours <= 23) {\n        return `${hours} ${hours === 1 ? 'hour' : 'hours'} ago`\n    }\n    const days = Math.floor(timePast / (24 * 60 * 60 * 1000));\n    if (days <= 30) {\n        return `${days} ${days === 1 ? 'day' : 'days'} ago`\n    }\n    const months = Math.floor(timePast / (30 * 24 * 60 * 60 * 1000));\n    if (months <= 12) {\n        return `${months} ${months === 1 ? 'month' : 'months'} ago`\n    }\n    const years = Math.floor(timePast / (365 * 24 * 60 * 60 * 1000));\n    return `${years} ${years === 1 ? 'year' : 'years'} ago`\n}","import {openCopyLinkSnackBar} from \"../redux/actions/copy-link-snackbar\";\nimport {connect} from \"react-redux\";\nimport Articles from \"../components/articles/articles\";\nimport {Dispatch} from \"redux\";\n\nfunction mapDispatchToProps(dispatch: Dispatch) {\n    return {\n        openCopyLinkSnackBar: () => dispatch(openCopyLinkSnackBar())\n    }\n}\n\nconst ArticlesContainer = connect(\n    null,\n    mapDispatchToProps\n)(Articles);\n\nexport default ArticlesContainer;\n","import React from \"react\";\nimport {Avatar, Box, Chip, Grid, Link} from \"@material-ui/core\";\n\nfunction Attribution() {\n    return (\n        <Box mt={10} mb={2} mx={2}>\n            <Grid container direction={'row'} spacing={2}>\n                <Grid item>\n                    <Link href={'https://www.xiaoxihome.com/'} target={'_blank'} rel=\"noopener\" underline={\"none\"}>\n                        <Chip\n                            avatar={<Avatar>X</Avatar>}\n                            label=\"🔧 with ❤️ by XiaoxiHome\"\n                            color=\"primary\"\n                            clickable\n                        />\n                    </Link>\n                </Grid>\n                <Grid item>\n                    <Link href={'https://newsapi.org/'} target={'_blank'} rel=\"noopener\" underline={\"none\"}>\n                        <Chip\n                            avatar={<Avatar>N</Avatar>}\n                            label=\"News data courtesy of NewsAPI.org\"\n                            color=\"secondary\"\n                            clickable\n                        />\n                    </Link>\n                </Grid>\n            </Grid>\n        </Box>\n    )\n}\n\nexport default Attribution;","import React from \"react\";\nimport {\n    createStyles,\n    IconButton,\n    Snackbar,\n    SnackbarContent,\n} from \"@material-ui/core\";\nimport Close from '@material-ui/icons/Close';\nimport {green} from '@material-ui/core/colors';\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\n\nconst useStyles = makeStyles(() => createStyles({\n    successSnackBar: {\n        backgroundColor: green[600]\n    },\n}));\n\ninterface CopyLinkSnackbarProps {\n    isActive: boolean,\n    closeCopyLinkSnackBar: () => void\n}\n\nfunction CopyLinkSnackbar(props: CopyLinkSnackbarProps) {\n    const classes = useStyles();\n\n    function closeHandlder() {\n        props.closeCopyLinkSnackBar()\n    }\n\n    return (\n        <Snackbar\n            anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'center',\n            }}\n            open={props.isActive}\n            autoHideDuration={3000}\n            onClose={closeHandlder}\n        >\n            <SnackbarContent\n                className={classes.successSnackBar}\n                message={\n                    <span id=\"client-snackbar\">\n                        Link copied to clipboard\n                    </span>\n                }\n                action={[\n                        <IconButton key=\"close\" aria-label=\"close\" color=\"inherit\" onClick={closeHandlder}>\n                    <Close/>\n                    </IconButton>,\n            ]}\n            />\n    </Snackbar>\n    )\n}\n\nexport default CopyLinkSnackbar;","import {State} from \"../redux/state\";\nimport {closeCopyLinkSnackBar} from \"../redux/actions/copy-link-snackbar\";\nimport {connect} from \"react-redux\";\nimport CopyLinkSnackbar from \"../components/copy-link-snackbar\";\nimport {Dispatch} from \"redux\";\n\nfunction mapDispatchToProps(dispatch: Dispatch) {\n    return {\n        closeCopyLinkSnackBar: () => dispatch(closeCopyLinkSnackBar())\n    }\n}\n\nfunction mapStateToProps(state: State) {\n    return {\n        isActive: state.copyLinkSnackBar.isActive\n    }\n}\n\nconst CopyLinkSnackBarContainer = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(CopyLinkSnackbar);\n\nexport default CopyLinkSnackBarContainer;","enum Status {\n    LOADING='LOADING',\n    LOADED_NORMAL='LOADED_NORMAL',\n    LOADED_EMPTY='LOADED_EMPTY',\n    LOADED_NO_MORE='LOADED_NO_MORE',\n    ERROR='ERROR',\n}\n\nexport default Status","enum SortTypes {\n    RELEVANCE='RELEVANCE',\n    DATE='DATE'\n}\n\nexport default SortTypes","import {Dispatch, SetStateAction} from \"react\";\nimport Status from \"./status\";\n\nconst baseUrl = 'https://www.xiaoxihome.com/api/search-news';\n\nconst requestSearchNews = (\n    keyword: string,\n    skip: number,\n    setStatus: Dispatch<SetStateAction<Status>>,\n    setData: Dispatch<SetStateAction<any>>,\n    data: any,\n    setTotalCount: any,\n    setFrequencyData?: any\n) => {\n    setStatus(Status.LOADING);\n\n    const url = skip === 0 ?\n        `${baseUrl}?keyword=${keyword}&frequency=true` :\n        `${baseUrl}?keyword=${keyword}&skip=${skip}`;\n\n    fetch(url)\n        .then(res => res.json())\n        .then(json => {\n            if (json.status === 'error') {\n                setStatus(Status.ERROR)\n            } else {\n                if (!json.totalCount) {\n                    setTotalCount(0);\n                    setStatus(Status.LOADED_EMPTY);\n                } else {\n                    setTotalCount(json.totalCount);\n                    setData((prevData: any) => [...prevData, ...json.data]);\n                    // set frequency data if available\n                    if (json.frequency && setFrequencyData) {\n                        setFrequencyData(Object.assign({}, {\n                            bin: json.frequency.bin,\n                            frequency: json.frequency.frequency\n                        }))\n                    }\n                    //\n                    setStatus(Status.LOADED_NORMAL);\n                }\n            }\n        })\n        .catch(e => {\n            console.log(e);\n            setStatus(Status.ERROR)\n        })\n};\n\nexport default requestSearchNews","import {useEffect, useState} from \"react\";\nimport requestSearchNews from \"./request-search-news\";\nimport Status from \"./status\";\nimport SortTypes from \"./sort/sort-types\";\n\nconst useSearchNews = (keyword: string) => {\n\n    const [status, setStatus] = useState(Status.LOADING);\n    const [data, setData] = useState<any>([]);\n    const [sortType, setSortType] = useState(SortTypes.RELEVANCE);\n    const [totalCount, setTotalCount] = useState(0);\n    const [frequencyData, setFrequencyData] = useState<any>(null);\n\n    const sortByDate = () => {\n        setData((prevData: any) => {\n            return prevData.sort((a: any, b: any) => {\n                const dateA = new Date(a.publishedAt).getTime();\n                const dateB = new Date(b.publishedAt).getTime();\n                return dateB - dateA\n            })\n        });\n        setSortType(SortTypes.DATE)\n    };\n\n    const sortByRelevance = () => {\n        setData((prevData: any) => {\n            return prevData.sort((a: any, b: any) => b.score - a.score)\n        });\n        setSortType(SortTypes.RELEVANCE)\n    };\n\n    useEffect(() => {\n        // Called upon new keyword received\n        // Reset data\n        setData([]);\n        setFrequencyData(null);\n        setTotalCount(0);\n        setSortType(SortTypes.RELEVANCE);\n        requestSearchNews(keyword, 0, setStatus, setData, [], setTotalCount, setFrequencyData)\n    }, [keyword]);\n\n    return {\n        status,\n        setStatus,\n        data,\n        setData,\n        sortType,\n        sortByDate,\n        sortByRelevance,\n        totalCount,\n        setTotalCount,\n        frequencyData\n    };\n};\n\nexport default useSearchNews","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {Box} from \"@material-ui/core\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        margin: theme.spacing(2, 0)\n    }\n}));\n\ninterface ResultsCountMessageProps {\n    count: number,\n    keyword: string,\n    currentLength: number\n}\n\nconst ResultsCountMessage: React.FC<ResultsCountMessageProps> = ({count, keyword, currentLength}) => {\n    const article = count === 1 ? 'article' : 'articles';\n    const classes = useStyles();\n\n    return (\n        <Typography variant=\"body1\" component=\"div\" className={classes.root}>\n            <Box fontWeight={700}>\n                {`${count} news ${article} found related to \"${keyword}\", displaying 1 - ${currentLength}`}\n            </Box>\n        </Typography>\n    )\n};\n\nexport default ResultsCountMessage","import React from \"react\";\nimport Skeleton from '@material-ui/lab/Skeleton';\n\ninterface LoadingMessageProps {\n\n}\n\nconst LoadingMessage: React.FC<LoadingMessageProps> = () => {\n    return (\n        <Skeleton variant=\"rect\" width={'100%'} height={200} animation=\"wave\"/>\n    )\n};\n\nexport default LoadingMessage","import Typography from \"@material-ui/core/Typography\";\nimport {Box} from \"@material-ui/core\";\nimport React from \"react\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport Button from \"@material-ui/core/Button\";\n\ninterface LoadMoreMessageProps {\n    onClick: () => void\n}\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        margin: theme.spacing(5, 0),\n        width: 300\n    }\n}));\n\nconst LoadMoreMessage: React.FC<LoadMoreMessageProps> = ({onClick}) => {\n    const classes = useStyles();\n\n    return (\n        <Button variant=\"contained\" disableElevation color=\"secondary\" onClick={onClick} className={classes.root}>\n            Load more\n        </Button>\n    )\n};\n\nexport default LoadMoreMessage","import React, {useState} from \"react\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport SortTypes from \"./sort-types\";\nimport {MenuItem} from \"@material-ui/core\";\n\nconst capitalizeString = (string: string) => {\n    const lowercase = string.toLowerCase();\n    return lowercase.charAt(0).toUpperCase() + lowercase.slice(1);\n\n};\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        margin: theme.spacing(2, 0),\n        minWidth: 200\n    }\n}));\n\ninterface SortPanelProps{\n    sortByDate: () => void,\n    sortByRelevance: () => void,\n    sortType: SortTypes\n}\n\nconst SortPanel: React.FC<SortPanelProps> = ({sortByDate, sortByRelevance, sortType}) => {\n    const classes = useStyles();\n\n    const handleChange = (e: any) => {\n        const newType = e.target.value;\n        if (newType === sortType) return;\n\n        switch (newType) {\n            case SortTypes.RELEVANCE:\n                sortByRelevance();\n                break;\n            case SortTypes.DATE:\n                sortByDate();\n                break;\n            default:\n                sortByRelevance();\n        }\n    };\n\n    return (\n        <FormControl className={classes.root} color={\"secondary\"}>\n            <InputLabel htmlFor=\"searched-article-sort\">Sort By</InputLabel>\n            <Select\n                value={sortType}\n                onChange={handleChange}\n                inputProps={{\n                    name: 'sort',\n                    id: 'searched-article-sort',\n                }}\n            >\n                <MenuItem value={SortTypes.RELEVANCE}>{capitalizeString(SortTypes.RELEVANCE)}</MenuItem>\n                <MenuItem value={SortTypes.DATE}>{capitalizeString(SortTypes.DATE)}</MenuItem>\n            </Select>\n        </FormControl>\n    )\n};\n\nexport default SortPanel","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {Box} from \"@material-ui/core\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport Divider from \"@material-ui/core/Divider\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        margin: theme.spacing(2, 0)\n    }\n}));\n\ninterface GenericMessageProps {\n    message: string,\n    divider?: boolean\n}\n\nconst GenericMessage: React.FC<GenericMessageProps> = ({message, divider}) => {\n    const classes = useStyles();\n\n    return (\n        <>\n            <Typography variant=\"body1\" component=\"div\" className={classes.root}>\n                <Box fontWeight={700}>\n                    {message}\n                </Box>\n            </Typography>\n            { divider && <Divider style={{width: '100%'}}/> }\n        </>\n    )\n};\n\nexport default GenericMessage","import React from \"react\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport {createStyles} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => createStyles({\n    highlight: {\n        backgroundColor: theme.palette.secondary.light,\n    }\n}));\n\ninterface HighlightedContentProps {\n    content: string,\n    keyword: string\n}\n\nconst HighlightedContent: React.FC<HighlightedContentProps> = ({content, keyword}) => {\n    const re= new RegExp('('+keyword+')', 'gi');\n    const contentArray = content.split(re);\n\n    const classes = useStyles();\n\n    return (\n        <>\n            {contentArray.map((content, i) => {\n                const isKeyword = i % 2 === 1;\n                return isKeyword ?\n                    <span className={classes.highlight} key={i}>{ content }</span> :\n                    <span key={i}>{ content }</span>\n            })}\n        </>\n    )\n};\n\nexport default HighlightedContent","import React, {RefObject, useEffect, useRef, useState} from \"react\";\nimport {Box, makeStyles} from \"@material-ui/core\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport HighlightedContent from \"./highlighted-content\";\nimport {Skeleton} from \"@material-ui/lab\";\n\nconst useGetHeight = () => {\n    const [cardHeight, setCardHeight] = useState(0);\n    const heightRef = useRef<HTMLDivElement>(null);\n\n    useEffect(() => {\n        if (heightRef.current) {\n            const cardHeight = heightRef.current.getBoundingClientRect().height;\n            setCardHeight(cardHeight)\n        }\n    }, [heightRef]);\n\n    return {\n        cardHeight,\n        heightRef\n    }\n};\n\nconst useStyles = makeStyles((theme) => ({\n    cardRoot: {\n        width: '100%',\n        margin: theme.spacing(2, 0),\n    },\n    cardActionArea: {\n        width: '100%',\n        height: '100%',\n        '& a': {\n            width: '100%',\n            height: '100%',\n            display: 'flex',\n            flexDirection: 'row',\n            alignItems: 'center',\n            justifyContent: 'center',\n            '&:visited, &:link': {\n                textDecoration: 'inherit',\n                color: 'inherit',\n                cursor: 'pointer'\n            }\n        }\n    },\n    cardMedia: {\n        width: '20%',\n        height: '100%'\n    },\n    cardContent: {\n        width: '80%',\n        height: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n    }\n}));\n\ninterface SearchedArticleCardProps {\n    article: any,\n    keyword: string\n}\n\nconst SearchedArticleCard: React.FC<SearchedArticleCardProps> = ({article, keyword}) => {\n    const classes = useStyles();\n    \n    const {cardHeight, heightRef} = useGetHeight();\n    \n    return (\n        <Card className={classes.cardRoot} style={{height: cardHeight ? `${cardHeight}px` : 'auto'}}>\n            <CardActionArea className={classes.cardActionArea}>\n                <a href={article.url} target='_blank' rel=\"noopener noreferrer\">\n                    {\n                        article.urlToImage ?\n                            <CardMedia\n                                component=\"img\"\n                                alt={article.title}\n                                className={classes.cardMedia}\n                                image={article.urlToImage}\n                                title={article.title}\n                            /> :\n                            <Skeleton variant=\"rect\" className={classes.cardMedia}/>\n                    }\n                    <CardContent className={classes.cardContent} ref={heightRef}>\n                        <Typography variant=\"body1\" component=\"h2\">\n                            <Box fontWeight={700}>\n                                <HighlightedContent content={article.title} keyword={keyword}/>\n                            </Box>\n                        </Typography>\n                        <Typography variant=\"body2\" component=\"div\" color=\"textSecondary\">\n                            <Box fontWeight={700}>\n                                {\n                                    new Date(article.publishedAt).toDateString()\n                                }\n                            </Box>\n                        </Typography>\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                            <HighlightedContent content={article.content.replace(/\\[\\+[0-9]+\\schars\\]/ig, '')} keyword={keyword}/>\n                        </Typography>\n                    </CardContent>\n                </a>\n            </CardActionArea>\n        </Card>\n    )\n};\n\nexport default SearchedArticleCard","import React, {useEffect, useState} from \"react\";\nimport {IconButton} from \"@material-ui/core\";\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Fade from \"@material-ui/core/Fade\";\n\nconst useActivateByScrollY = () => {\n    const [isActive, setIsActive] = useState(false);\n\n    const handleScroll = () => {\n        if (window.scrollY > window.innerHeight && !isActive) {\n            setIsActive(true);\n        } else if (window.scrollY < window.innerHeight && isActive) {\n            setIsActive(false);\n        }\n    };\n\n    useEffect(() => {\n        document.addEventListener('scroll', handleScroll);\n\n        return () => {\n            document.removeEventListener('scroll', handleScroll);\n        }\n    }, [isActive]);\n\n    return isActive\n};\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        position: 'fixed',\n        bottom: '50px',\n        right: '50px',\n        backgroundColor: theme.palette.secondary.main,\n        color: '#FFF',\n        transition: theme.transitions.create('background-color opacity'),\n        transform: 'rotate(-90deg)',\n        '&:hover': {\n            backgroundColor: theme.palette.secondary.light,\n        },\n        [theme.breakpoints.down('md')]: {\n            bottom: '15px',\n            right: '15px',\n        }\n    }\n}));\n\ninterface ScrollToTopButtonProps {\n\n}\n\nconst ScrollToTopButton: React.FC<ScrollToTopButtonProps> = () => {\n\n    const classes = useStyles();\n\n    const isActive = useActivateByScrollY();\n\n    const scrollToTop = () => {\n        window.scrollTo(0, 0);\n    };\n\n    return (\n        <Fade in={isActive}>\n            <Tooltip title=\"Scroll to Top\" className={classes.root}>\n                <IconButton aria-label=\"Scroll to Top\" onClick={scrollToTop}>\n                    <PlayArrowIcon />\n                </IconButton>\n            </Tooltip>\n        </Fade>\n    )\n};\n\nexport default ScrollToTopButton","import React, {useEffect, useMemo, useRef} from \"react\";\nimport * as d3 from \"d3\";\nimport {makeStyles} from \"@material-ui/core\";\nimport { useTheme } from '@material-ui/core/styles';\n\nconst id = 'keyword-frequency-chart';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        width: '100%'\n    }\n}));\n\ninterface KeywordFrequencyProps {\n    bin: any[],\n    frequency: number[],\n}\n\nconst KeywordFrequency: React.FC<KeywordFrequencyProps> = ({bin, frequency}) => {\n    const wrapperRef = useRef<HTMLDivElement>(null);\n    const classes = useStyles();\n    const theme = useTheme();\n    const lightColor = theme.palette.secondary.light;\n    const darkColor = theme.palette.secondary.dark;\n    const primaryColor = theme.palette.primary.light;\n    const backgroundColor = '#EEE';\n    const TRANSITION_DELAY = 500;\n    const BAR_TRANSITION_DURATION = 2000;\n\n    const binDateStringArray = useMemo(() => {\n        return bin.map((obj) => {\n            const date = new Date(obj.ms);\n            return `${date.getFullYear()}/${date.getMonth() + 1}/${date.getDate()}`\n        })\n    }, [bin]);\n\n    console.log(binDateStringArray);\n\n    const delayArray = useMemo(() => {\n        const array = [];\n        let delay = TRANSITION_DELAY;\n        let step = 20;\n        for (let i=0; i<frequency.length; i++) {\n            if (frequency[i] === 0) {\n                array.push(delay)\n            } else {\n                array.push(delay+=step);\n            }\n        }\n        return array\n    }, [frequency]);\n\n    useEffect(() => {\n        if (!wrapperRef.current) return;\n        console.log(bin, frequency);\n\n        const maxFrequency = Math.max.apply(Math, frequency);\n        const binLength = bin.length;\n\n        const svgWidth = wrapperRef.current.getBoundingClientRect().width;\n        const svgHeight = Math.min(Math.round(svgWidth / 3), 200);\n        const m = {t: 10, r: 30, b: 30, l: 30}; // margin\n        const chartWidth = svgWidth - m.l - m.r;\n        const chartHeight = svgHeight - m.t - m.b;\n        const chartX = m.l;\n        const chartY = m.t;\n\n        const xScale = d3.scaleBand()\n            .domain(frequency.map((_, i) => i.toString()))\n            .range([0, chartWidth]);\n\n        const yScale = d3.scaleLinear()\n            .domain([0, maxFrequency])\n            .range([0, chartHeight]);\n\n        const barWidth = xScale.bandwidth();\n        const barHeight = (d: number) => yScale(d);\n        const barX = (d: any, i: number) => chartX + (xScale(i.toString()) || 0);\n        const barY = (d: any) => chartY + chartHeight - barHeight(d);\n\n        const svg = d3.select(`#${id}`).append('svg');\n        const bars = svg.append('g')\n            .selectAll('rect').data(frequency)\n            .enter().append('rect');\n        const hoverDetectionBars = svg\n            .append('g')\n            .selectAll('rect').data(frequency)\n            .enter().append('rect');\n\n        svg.attr('width', svgWidth)\n            .attr('height', svgHeight)\n            .style('background', backgroundColor);\n\n        bars.style('fill', lightColor)\n            .style('opacity', 0.8)\n            .attr('width', barWidth)\n            .attr('height', 0)\n            .attr('x', barX)\n            .attr('y', chartY + chartHeight);\n\n        bars.transition()\n            .attr('height', barHeight)\n            .attr('y', barY)\n            .delay((d, i) => delayArray[i])\n            .duration(BAR_TRANSITION_DURATION)\n            .ease(d3.easeElastic);\n\n        hoverDetectionBars\n            .style('fill', lightColor)\n            .style('opacity', 0)\n            .attr('width', barWidth)\n            .attr('height', chartHeight)\n            .attr('x', barX)\n            .attr('y', chartY);\n\n\n        // Axes\n        const yAxisScale = d3.scaleLinear()\n            .domain([0, maxFrequency])\n            .range([chartHeight, 0]);\n        const yAxis = d3.axisLeft(yAxisScale);\n        const yLegends = svg.append('g');\n        yAxis\n            .tickFormat(d3.format(\"d\"))\n            .tickValues([0, Math.floor(maxFrequency * 0.5), maxFrequency]);\n        yLegends\n            .style('transform', `translate(${chartX}px, ${svgHeight}px)`)\n            .style('opacity', 0)\n            .style('color', darkColor);\n\n        const xAxisScale = d3.scaleLinear()\n            .domain([0, binDateStringArray.length - 1])\n            .range([0, chartWidth]);\n        const xLegends = svg.append('g');\n        const xAxis = d3.axisBottom(xAxisScale);\n        // @ts-ignore\n        xAxis.tickFormat((d, i) => binDateStringArray[d])\n            .tickValues([0, Math.floor(binLength * 0.25), Math.floor(binLength * 0.5), Math.floor(binLength * 0.75), binLength - 1]);\n        xLegends\n            .style('transform', `translate(${-0.5*svgWidth}px, ${chartHeight + chartY}px)`)\n            .style('opacity', 0)\n            .style('color', darkColor);\n\n        yLegends.transition()\n            .style('opacity', 1)\n            .style('transform', `translate(${chartX}px, ${chartY}px)`)\n            .delay(TRANSITION_DELAY)\n            .duration(1000)\n            .ease(d3.easeElastic);\n        xLegends.transition()\n            .style('opacity', 1)\n            .style('transform', `translate(${chartX}px, ${chartHeight + chartY}px)`)\n            .delay(TRANSITION_DELAY)\n            .duration(1000)\n            .ease(d3.easeElastic);\n\n        yAxis(yLegends);\n        xAxis(xLegends);\n\n        // Grid\n        let grid = svg.append('g');\n        const gridLine = d3.axisLeft(yAxisScale);\n        grid.style('opacity', 0)\n            .style('transform', `translate(${chartX}px, ${chartY}px)`);\n        gridLine\n            .tickFormat(d3.format(\"d\"))\n            .tickSizeInner(-chartWidth-6)\n            .tickSizeOuter(0)\n            .tickPadding(9);\n\n        // Hover Date Text\n        let hoverDateText = svg.append('g');\n        const hoverDateTextAxis = d3.axisBottom(xAxisScale);\n        hoverDateText.style('opacity', 0)\n            .style('transform', `translate(${chartX}px, ${chartHeight + chartY}px)`);\n        hoverDateTextAxis\n            // @ts-ignore\n            .tickFormat((d) => binDateStringArray[d]);\n\n        // Hover Frequency Text\n        let hoverFreqText = svg.append('g');\n        const hoverFreqTextAxis = d3.axisBottom(xAxisScale);\n        hoverFreqText.style('opacity', 0);\n        hoverFreqTextAxis\n            // @ts-ignore\n            .tickFormat((d) => frequency[d])\n            .tickSize(0)\n            .tickPadding(-9);\n\n        hoverDetectionBars\n            .on('mouseover', function(d, i) {\n                gridLine\n                    .tickValues([d]);\n                gridLine(grid);\n                grid.selectAll(\".tick line\")\n                    .style('transform', `translate(-6px, 0)`)\n                    .style('color', primaryColor);\n                grid.selectAll(\".domain\").remove();\n                grid.style('opacity', 1);\n\n                hoverDateTextAxis\n                    .tickValues([i]);\n                hoverDateTextAxis(hoverDateText);\n                hoverDateText.selectAll(\".domain\").remove();\n                hoverDateText.style('opacity', 1);\n\n                hoverFreqTextAxis\n                    .tickValues([i]);\n                hoverFreqTextAxis(hoverFreqText);\n                hoverFreqText.selectAll(\".domain\").remove();\n                hoverFreqText\n                    .style('transform', `translate(${chartX}px, ${yAxisScale(d) + chartY}px)`)\n                    .style('opacity', 1);\n\n                const bar = bars.filter((d, index) => index === i);\n                bar.style('fill', primaryColor);\n        })\n            .on('mouseout', function(data, i) {\n                grid.style('opacity', 0);\n                hoverDateText.style('opacity', 0);\n\n                bars.filter((d, index) => index === i)\n                    .style('fill', lightColor);\n\n            });\n\n\n    }, [wrapperRef]);\n\n\n    return (\n        <div ref={wrapperRef} className={classes.root} id={id}>\n\n        </div>\n    )\n};\n\nexport default KeywordFrequency","import React, {RefObject, useEffect, useRef, useState} from \"react\";\nimport {Box, makeStyles} from \"@material-ui/core\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport useSearchNews from \"./use-search-news\";\nimport requestSearchNews from \"./request-search-news\";\nimport Status from \"./status\";\nimport ResultsCountMessage from \"./message-components/result-count-message\";\nimport LoadingMessage from \"./message-components/loading-message\";\nimport LoadMoreMessage from \"./message-components/load-more-message\";\nimport HighlightedContent from \"./highlighted-content\";\nimport SortPanel from \"./sort/sort-panel\";\nimport GenericMessage from \"./message-components/generic-message\";\nimport SearchedArticleCard from \"./searched-article-card\";\nimport ScrollToTopButton from \"./scroll-to-top-button\";\nimport KeywordFrequency from \"./keyword-frequency\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        minHeight: '100vh',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'flex-start',\n    },\n    widthWrapper: {\n        width: '1000px',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'flex-start',\n        padding: theme.spacing(2),\n        [theme.breakpoints.down('md')]: {\n            width: '100%'\n        }\n    },\n    cardRoot: {\n        width: '100%',\n        margin: theme.spacing(2, 0),\n    },\n    cardActionArea: {\n        width: '100%',\n        height: '100%',\n        '& a': {\n            width: '100%',\n            height: '100%',\n            display: 'flex',\n            flexDirection: 'row',\n            alignItems: 'center',\n            justifyContent: 'center',\n            '&:visited, &:link': {\n                textDecoration: 'inherit',\n                color: 'inherit',\n                cursor: 'pointer'\n            }\n        }\n    },\n    cardMedia: {\n        width: '20%',\n        height: '100%'\n    },\n    cardContent: {\n        width: '80%',\n        height: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n    }\n}));\n\ninterface SearchedArticlesProps {\n    keyword: string\n}\n\nconst SearchedArticles: React.FC<SearchedArticlesProps> = ({keyword}) => {\n\n    const {status, data, setStatus, setData, sortType, sortByRelevance, sortByDate, setTotalCount, totalCount, frequencyData} = useSearchNews(keyword);\n    const classes = useStyles();\n\n    const loadMoreNews = () => {\n        requestSearchNews(keyword, data.length, setStatus, setData, data, setTotalCount);\n    };\n\n    const resultsFound = data.length > 0;\n    const hasMoreData = data.length < totalCount;\n    const endOfResult = data.length === totalCount;\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.widthWrapper}>\n                { resultsFound && <ResultsCountMessage count={totalCount} keyword={keyword} currentLength={data.length}/> }\n                { frequencyData && resultsFound && <KeywordFrequency bin={frequencyData.bin} frequency={frequencyData.frequency}/>}\n                { resultsFound && <SortPanel sortType={sortType} sortByRelevance={sortByRelevance} sortByDate={sortByDate} /> }\n                { status === Status.LOADED_EMPTY && <GenericMessage message={`No news article related to \"${keyword}\" was found`}/>}\n                { status === Status.ERROR && <GenericMessage message={'Server error please try later'}/>}\n                {\n                    resultsFound &&\n                        data.map((article: any) =>\n                            <SearchedArticleCard article={article} keyword={keyword} key={article._id}/>\n                        )\n                }\n                { status === Status.LOADING && <LoadingMessage/> }\n                { status === Status.LOADED_NORMAL && hasMoreData && totalCount > 0 && <LoadMoreMessage onClick={loadMoreNews}/> }\n                { endOfResult && totalCount > 0 && <GenericMessage message={'End of results'} divider/>}\n            </div>\n\n            <ScrollToTopButton />\n        </div>\n    )\n};\n\nexport default SearchedArticles","import {connect} from \"react-redux\";\nimport SearchedArticles from \"../components/articles/searched-articles/searched-articles\";\nimport {State} from \"../redux/state\";\n\nfunction mapStateToProps(state: State) {\n    return {\n        keyword: state.searchKeyword\n    }\n}\n\nconst SearchedArticlesContainer = connect(\n    mapStateToProps,\n)(SearchedArticles);\n\nexport default SearchedArticlesContainer;","import {State} from \"./redux/state\";\nimport React, {useEffect} from \"react\";\nimport {Box, makeStyles} from \"@material-ui/core\";\nimport Header from \"./components/header/header\";\nimport {categories, Category} from \"./redux/actions/category\";\nimport ArticlesContainer from \"./containers/articles-container\";\nimport Attribution from \"./components/attribution\";\nimport CopyLinkSnackBarContainer from \"./containers/copy-link-snackbar-container\";\nimport {fetchArticles} from \"./redux/actions/articles\";\nimport {connect} from \"react-redux\";\nimport SearchedArticlesContainer from \"./containers/searched-articles-container\";\n\nconst useStyles = makeStyles(() => ({\n    root: {\n        width: '100vw',\n        maxWidth: '100%',\n        minHeight: '100vh',\n        overflowX: 'hidden',\n        paddingBottom: '10px',\n        // overflowX is causing y-axis scroll problem, pb do the hack\n    }\n}));\n\ninterface InnerAppProps extends Pick<State, 'category' | 'articles'> {\n    fetchArticlesAfterMount: () => void,\n    isSearching: boolean\n}\n\nfunction InnerApp(props: InnerAppProps) {\n    const classes = useStyles();\n    useEffect(() => {\n        props.fetchArticlesAfterMount()\n    }, []);\n\n    return (\n        <Box className={classes.root}>\n            <Header headers={categories} category={props.category} />\n            {\n                props.isSearching ? <SearchedArticlesContainer/> : <ArticlesContainer articles={props.articles} />\n            }\n            <Attribution />\n            <CopyLinkSnackBarContainer />\n        </Box>\n    )\n}\nfunction mapStateToProps(state: State) {\n    const isSearching = state.category === Category.SEARCH;\n\n    return {\n        category: state.category,\n        articles: state.articles,\n        isSearching\n    }\n}\nfunction mapDispatchToProps(dispatch: any) {\n    return {\n        fetchArticlesAfterMount: () => dispatch(fetchArticles(Category.HEADLINE))\n    }\n}\nconst InnerAppContainer = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(InnerApp);\n\nexport default InnerAppContainer;","import React from 'react';\nimport { Provider } from 'react-redux';\nimport configureStore from \"./redux/configureStore\";\nimport { CssBaseline } from \"@material-ui/core\";\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport theme from './theme';\nimport InnerAppContainer from \"./inner-app\";\n\n\nconst store = configureStore();\n\nfunction App() {\n    return (\n        <Provider store={store}>\n            <ThemeProvider theme={theme}>\n                <CssBaseline />\n                <InnerAppContainer />\n            </ThemeProvider>\n        </Provider>\n    )\n}\n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}