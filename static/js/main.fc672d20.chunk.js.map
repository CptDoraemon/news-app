{"version":3,"sources":["redux/actions/articles.ts","redux/actions/category.ts","redux/state.ts","redux/reducers/category.ts","redux/reducers/articles.ts","redux/actions/copy-link-snackbar.ts","redux/reducers/copy-link-snackbar.ts","redux/actions/search-keyword.ts","redux/reducers/search-keyword.ts","redux/reducers/root-reducers.ts","redux/configureStore.ts","theme.tsx","tools/use-lazy-load.ts","tools/copy-to-clipboard.ts","tools/use-debounce.ts","tools/use-swipeable.ts","components/utility-components/swipeable.tsx","components/articles/articles.tsx","tools/get-publish-time.ts","containers/articles-container.tsx","components/attribution.tsx","components/copy-link-snackbar.tsx","containers/copy-link-snackbar-container.tsx","components/analytics/utilitis/use-get-analytics.tsx","components/analytics/utilitis/animation-slide-in.tsx","components/analytics/utilitis/section-wrapper.tsx","d3-charts/pie-chart-d3.ts","components/analytics/styles/analytics-styles.tsx","components/analytics/utilitis/title.tsx","components/analytics/utilitis/content.tsx","components/analytics/documents-by-category-bar-chart.tsx","d3-charts/heat-map-d3.ts","components/analytics/documents-heat-map.tsx","components/analytics/documents-text-summary.tsx","tools/use-sticky.ts","d3-charts/word-cloud-d3.ts","components/analytics/documents-word-cloud.tsx","components/analytics/utilitis/animation-fixed.tsx","d3-charts/stacked-line-chart-d3.tsx","components/analytics/documents-count-stacked-line-chart.tsx","components/analytics/analytics.tsx","components/utility-components/sticky-component.tsx","components/header/header-search.tsx","components/header/header.tsx","containers/header-container.tsx","components/articles/searched-articles/filters/sort-types.ts","d3-charts/world-map-d3.ts","components/topic/topic-covid19-map.tsx","components/topic/topic.tsx","components/articles/searched-articles/utilities/status.tsx","components/articles/searched-articles/requests/request-search-news.ts","components/articles/searched-articles/requests/use-search-news.tsx","components/articles/searched-articles/utilities/get-date-string.tsx","components/articles/searched-articles/message-components/result-count-message.tsx","components/articles/searched-articles/message-components/loading-message.tsx","components/articles/searched-articles/message-components/load-more-message.tsx","components/articles/searched-articles/message-components/generic-message.tsx","components/articles/searched-articles/highlighted-content.tsx","components/articles/searched-articles/searched-article-card.tsx","components/articles/searched-articles/utilities/scroll-to-top-button.tsx","d3-charts/frequency-chart-d3.ts","components/articles/searched-articles/frequency-chart/keyword-frequency.tsx","components/articles/searched-articles/filters/sort-panel.tsx","components/articles/searched-articles/filters/filter-by-date.tsx","components/articles/searched-articles/filters/filters.tsx","styles/styles.ts","components/articles/searched-articles/searched-articles.tsx","inner-app.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["ArticleActionsTypes","Category","fetchArticles","category","QUERY","dispatch","type","REQUEST_ARTICLES","fetch","encodeURIComponent","then","res","json","errors","IS_ERROR","articles","RECEIVE_ARTICLES","slice","receiveArticles","data","getNews","CategoryActionsType","categories","HEADLINE","BUSINESS","ENTERTAINMENT","HEALTH","SCIENCE","SPORTS","TECHNOLOGY","setCategoryAndFetchArticles","SET_CATEGORY","setCategory","initState","isError","isFetching","copyLinkSnackBar","isActive","searchKeyword","state","action","CopyLinkSnackbarActionsTypes","actions","Object","assign","copyLinkSnackbar","SearchKeywordTypes","CLOSE_SNACKBAR","OPEN_SNACKBAR","SET_KEYWORD","keyword","rootReducers","combineReducers","preloadedState","theme","createMuiTheme","palette","primary","main","contrastText","secondary","responsiveFontSizes","typography","h1","fontFamily","join","fontWeight","fontSize","breakpoints","up","useLazyLoad","ref","triggerPoint","useState","isVisible","setIsVisible","scrollHandlerLastCalledAt","Date","now","checkIsVisible","calledAt","current","rect","getBoundingClientRect","isBefore","top","height","isAfter","window","innerHeight","useEffect","document","addEventListener","removeEventListener","copyToClipboard","string","el","createElement","value","setAttribute","style","position","left","body","appendChild","select","execCommand","removeChild","useDebounce","UseSwipeableDirections","UserAction","debounceInterval","lastExecuted","DEBOUNCER","useSwipeable","threshholdPx","x1","setX1","y1","setY1","NULL","userAction","setUserAction","direction","setDirection","dragDistance","setDragDistance","shouldBeExecuted","touchStartHandler","e","changedTouches","clientX","clientY","touchMoveHandler","currentX","currentY","cancelable","preventDefault","Math","abs","SWIPE","SCROLL","touchEndHandler","RIGHT","LEFT","currentElement","resetSwipeStatus","SwipeableContainer","connect","goPrevious","getState","currentCategory","currentIndex","indexOf","length","goNext","isLast","props","containerRef","useRef","width","transform","children","useStyles","makeStyles","createStyles","wrapper","padding","down","calcHeight","lines","variant","lineHeight","ellipsis","root","content","bottom","right","backgroundImage","zIndex","overFlowHidden","overflow","usePrimaryCardStyles","media","skeleton","title","source","articleContent","buttons","useSecondaryCardStyles","Buttons","CardActions","className","Link","href","url","target","rel","underline","Button","size","color","onClick","openCopyLinkSnackBar","Article","isMounted","setIsMounted","isTransitionAnimationNeeded","useMediaQuery","useTheme","isPrimaryCard","id","cardPrimaryClasses","cardSecondaryClasses","cardClasses","setTimeout","Grid","item","xs","md","Card","raised","urlToImage","CardMedia","component","alt","image","Skeleton","CardContent","Typography","gutterBottom","Box","author","date","timePast","getTime","minutes","floor","hours","days","months","years","getPublishTime","publishedAt","replace","Zoom","in","LoadedArticles","map","article","i","key","ArticlesContainer","classes","scrollTo","Array","from","_","maxWidth","container","alignContent","justify","spacing","Attribution","m","Chip","avatar","Avatar","label","clickable","successSnackBar","backgroundColor","green","CopyLinkSnackbar","closeHandler","closeCopyLinkSnackBar","Snackbar","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","SnackbarContent","message","IconButton","aria-label","AnalyticsPageStatus","CopyLinkSnackBarContainer","AnimationSlideInDirection","useGetAnalytics","loading","status","setStatus","summaryStatisticsData","setSummaryStatisticsData","console","log","error","totalDocuments","summaryStatistics","earliestDocumentDate","latestDocumentDate","documentsCountByCategory","documentsCountByDay","time","bin","ms","count","frequency","wordCloud","documentsCountByDayAndCategory","loaded","catch","display","flexDirection","alignItems","justifyContent","SectionWrapper","fullHeight","minHeight","PieChartD3","getColor","index","colors","hasAnimated","params","svg","references","this","getParams","d3","append","pieZero","getPieData","pie","totalValue","reduce","a","b","createReferences","startAngle","PI","endAngle","rx","ry","h","ir","d","sort","innerSlice","selectAll","enter","topSlice","outerSlice","text","text1","text2","x","y","attr","darker","toString","pieInner","filter","obj","pieTop","pieOuter","toUpperCase","toFixed","initData","targetData","thisClass","iRaise","textTweenX","t","cos","transition","duration","delay","attrTween","sin","sx","sy","ex","ey","ret","push","_startAngle","_endAngle","pieTransition","styleSvg","drawPie","bigNumber","margin","header","textAlign","textTransform","bigNumberTitle","Title","split","str","Content","DocumentsByCategoryPieChart","isLoaded","animate","pieChart","setPieChart","barChart","HeatMapD3","dayOfWeekStrings","monthStrings","targetRectSize","rectPadding","scales","axis","getData","getScales","getAxis","r","l","xBands","xScaleDomain","maxRectSize","rectSize","min","chart","domain","range","yScaleDomain","maxCount","tickFormat","xScaleGuide","getUTCMonth","thisOne","tickSize","tickPadding","parseInt","tickValues","_data","compensation","getUTCDay","unshift","timeArray","computedX","getX","computedY","firstDataDay","getY","max","apply","xAxis","yAxis","rects","tooltipGroup","tooltipBackground","tooltip","tooltipText1","tooltipText2","remove","bandwidth","on","getAttribute","getUTCDate","getUTCFullYear","bBox","node","getBBox","textWidth","textHeight","tooltipWidth","tooltipHeight","toolTipX","toolTipY","borderX0","borderX1","borderY0","borderY1","styleAxisX","styleAxisY","styleRects","styleTooltip","addMouseEventToRects","prepareForAnimation","DocumentsHeatMap","heatMap","setHeatMap","section","number","DocumentsTextSummary","React","forwardRef","forwardedRef","total","useCountUp","start","end","earliest","latest","dateObj","countUp","Style","willChange","placeholder","AnimationSlideIn","childrenRef","placeholderRef","dimension","setDimension","setTarget","xMax","translate","setTranslate","scrollHandler","scrollY","prevTranslate","percentage","WordCloudD3","scale","getScale","bind","counts","words","word","d3Cloud","timeInterval","rotate","random","font","draw","WordCloud","setWordCloud","fixedWrapper","childrenSize","AnimationFixed","fixedWrapperRef","isSet","isFrozen","setIsFrozen","offset","fixedWrapperStyle","StackedLineChartD3","dimensions","axes","shapes","getDimension","getAxes","axisX","axisY","paths","getShapes","convertToPercentage","maxQuantity","quantity","arr","sum","num","maxS","stackData","forEach","svgWidth","svgHeight","chartWidth","chartHeight","series","isoString","getDate","getMonth","getFullYear","keys","order","stack","getArea","y0","ease","initSvg","initLineChart","DocumentsCountStackedLineChart","stackedBarChart","setStackedBarChart","overflowX","paddingBottom","widthWrapper","Analytics","wrapperRef","bgColorChangeRef","bgBlack","setBgBlack","changeBgColor","CircularProgress","Fade","timeout","documentCount","getStyle","styleName","FIXED","RELATIVE","useSticky","anchorRef","setStyle","scrolled","fixedStartHeight","offsetTop","offsetHeight","isFixed","StickyComponent","elementRef","offsetWidth","dialog","minWidth","HeaderSearch","goToSearch","setOpen","input","setInput","isEmpty","setIsEmpty","handleClose","Tooltip","TransitionComponent","Dialog","fullWidth","onSubmit","DialogTitle","DialogContent","TextField","autoFocus","onChange","helperText","DialogActions","tab","flexShrink","flexGrow","heading","whiteSpace","appBarNoBoxShadow","boxShadow","appBarBottomBoxShadow","trendIcon","Header","headers","goToAnalytics","goToTopic","appBarRef","AppBar","Toolbar","align","appBar","Tabs","indicatorColor","textColor","scrollButtons","Tab","SortTypes","HeaderContainer","setSearchKeyword","SEARCH","ANALYTICS","TOPIC","setCategoryIfNeeded","WorldMapD3","themeColor","caseData","red","transparent","getMapColor","grey","mapStrokeNormal","mapStrokeHoverHighlight","case","death","recovered","timeBarHighlight","timeBarNormal","timeBarLight","getStrokeWidth","animations","zoomIn","changeMapColor","timeLapse","timeLapseGap","aggregate","caseMax","pathHighlightGroup","pathHighlight","timeControl","timeBarXScale","timeMax","tooltipData","inputX","inputXSecondary","inputY","inputYSecondary","country","undefined","timeoutID","mapX","mapY","mapWidth","mapHeight","module","mapData","default","features","properties","countries","name","cases","bg","tspanCountry","tspanDate","tspanCaseAccumulative","tspanCaseNew","tspanDeathAccumulative","tspanDeathNew","tspanRecoveredAccumulative","tspanRecoveredNew","caseLineChart","deathLineChart","recoveredLineChart","stackBarChartGroup","stackBarChartCase","stackBarChartDeath","stackBarChartRecovered","updateTooltip","getNew","currentT","dateText","deaths","textX","tooltipX","lineChartHeight","xBg","xBgFloored","toolTipStartY","p","lineChartStartY","stackBarChartY","updateLineCharts","dataArray","reference","yMax","scaleX","scaleY","datum","defined","chartX","lineChartYMax","nullData","currentCase","currentDeath","currentRecovered","deathWidth","recoveredWidth","projection","fitExtent","timeControlStartY","timeControlStartX","timeBarStartY","buttonStartY","dateArray","group","selection","timeBarBg","timeBar","buttonGroup","buttonHeight","playButton","startOverButton","caseMaxLog","emptyColor","currentCases","updateMap","updateTimeControl","xSecondary","ySecondary","newCase","isWaitFirstTick","tick","setTimeState","stopTimeLapse","clearTimeout","startTimeLapse","removeHighlightAndMoveTooltip","setToolTipDataState","clonedNode","clone","movedClonedNode","initMap","initTimeControl","initTooltip","mapZoomIn","appendMapPathMouseEvent","appendTimeBarMouseEvent","appendTimeControlButtonEvent","TopicCovid19Map","dataFile","Topic","mx","Status","requestSearchNews","skip","Promise","resolve","reject","dateComponent","relevance","useSearchNews","LOADING","setData","sortType","setSortType","totalCount","setTotalCount","frequencyData","setFrequencyData","pendingDateFilter","_setPendingDateFilter","dateFilter","_setDateFilter","setLoadedStatus","updatedDataLength","LOADED_NO_MORE","LOADED_EMPTY","LOADED_NORMAL","async","ERROR","newSearch","toggleSort","loadMore","prevData","setPendingDateFilter","setDateFilter","getDateString","ResultsCountMessage","currentLength","dateFilterMessage","LoadingMessage","animation","LoadMoreMessage","disableElevation","GenericMessage","divider","Divider","highlight","light","HighlightedContent","re","RegExp","contentArray","cardRoot","cardActionArea","textDecoration","cursor","cardMedia","cardContent","SearchedArticleCard","cardHeight","setCardHeight","heightRef","useGetHeight","CardActionArea","toDateString","smoothscroll","polyfill","modal","transitions","create","ScrollToTopButton","setIsActive","handleScroll","useActivateByScrollY","scroll","behavior","FrequencyChartD3","selector","auxArray","binDate","getBinDateArray","barTransitionDelay","getBarTransitionDelayArray","lightColor","darkColor","dark","primaryColor","TRANSITION_DELAY","BAR_TRANSITION_DURATION","maxFrequency","binLength","argWidth","getDimensions","bars","axisXHoverDate","axisXHoverFrequency","axisYHover","hoverDetection","xHoverDate","xHoverFrequency","yHover","setHoverDetectionEventHandlers","binArray","transitionDelay","frequencyDataArray","array","round","chartY","barWidth","barHeight","tickSizeOuter","tickSizeInner","gridTextBox","insert","hoverDateTextBox","setDate","setSvg","setBars","setAxisX","setAxisY","setAxisXHoverDate","setAxisXHoverFrequency","setAxisYHover","setHoverDetection","KeywordFrequency","bindSetDate","capitalizeString","lowercase","toLowerCase","charAt","resetFontSize","SortPanel","FormControl","InputLabel","htmlFor","Select","newType","inputProps","MenuItem","borderRadius","cancelIcon","FilterByDate","chip","onDelete","deleteIcon","disabled","shrink","itemWrapper","Filters","pageRoot","page1000WidthWrapper","SearchedArticles","hasData","notFoundMessage","showChartAndFilters","foundDataOnKeyword","setFoundDataOnKeyword","useShowChartAndFilters","_id","attribution","InnerAppContainer","fetchArticlesAfterMount","store","createStore","applyMiddleware","thunkMiddleware","App","ThemeProvider","CssBaseline","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fc672d20.chunk.js","sourcesContent":["import {Action, ActionCreator, AnyAction} from \"redux\";\nimport { Category } from './category';\nimport {State} from \"../state\";\nimport {ThunkDispatch} from \"redux-thunk\";\n\nexport interface Article {\n    source: string,\n    author: string,\n    title: string,\n    description: string,\n    url: string,\n    urlToImage: string,\n    publishedAt: string,\n    content: string\n}\n\n\nexport enum ArticleActionsTypes {\n    IS_ERROR = 'IS_ERROR',\n    REQUEST_ARTICLES = 'REQUEST_ARTICLES',\n    RECEIVE_ARTICLES = 'RECEIVE_ARTICLES'\n}\n\nexport interface ArticlesRequestFailedAction {\n    type: ArticleActionsTypes.IS_ERROR\n}\n\nconst requestArticlesFailed: ActionCreator<ArticlesRequestFailedAction> = () => {\n    return {\n        type: ArticleActionsTypes.IS_ERROR\n    }\n};\n\nexport interface ArticlesRequestAction {\n    type: ArticleActionsTypes.REQUEST_ARTICLES\n}\n\nconst requestArticles: ActionCreator<ArticlesRequestAction> = () => {\n    return {\n        type: ArticleActionsTypes.REQUEST_ARTICLES\n    }\n};\n\nexport interface ArticlesReceiveAction {\n    type: ArticleActionsTypes.RECEIVE_ARTICLES,\n    articles: Array<Article>\n}\n\nconst receiveArticles: ActionCreator<ArticlesReceiveAction> = (articles: Array<Article>) => {\n    return {\n        type: ArticleActionsTypes.RECEIVE_ARTICLES,\n        articles: articles.slice()\n    }\n};\n\nconst NEWS_API = 'https://www.xiaoxihome.com/api/news?query=';\n\nexport const fetchArticles = (category: Category) => {\n    const QUERY = `\n        {\n            getNews(category: ${category}) {\n                source,\n                author,\n                title,\n                description,\n                url,\n                urlToImage,\n                publishedAt,\n                content\n            }\n        }\n    `;\n\n    return (dispatch: ThunkDispatch<State, null, AnyAction>) => {\n        dispatch(requestArticles());\n        return fetch(NEWS_API + encodeURIComponent(QUERY))\n            .then(res => res.json())\n            .then(json => {\n                if (json.errors) {\n                    dispatch(requestArticlesFailed())\n                } else {\n                    dispatch(receiveArticles(json.data.getNews))\n                }\n            })\n    }\n};\n\nexport type ArticlesActions =  ArticlesRequestAction | ArticlesRequestFailedAction | ArticlesReceiveAction;","import {fetchArticles} from \"./articles\";\nimport {ActionCreator, AnyAction} from \"redux\";\nimport {ThunkDispatch} from \"redux-thunk\";\nimport {State} from \"../state\";\n\nexport enum Category {\n    HEADLINE= `HEADLINE`,\n    BUSINESS= `BUSINESS`,\n    ENTERTAINMENT= `ENTERTAINMENT`,\n    HEALTH= `HEALTH`,\n    SCIENCE= `SCIENCE`,\n    SPORTS= `SPORTS`,\n    TECHNOLOGY= `TECHNOLOGY`,\n    SEARCH=`SEARCH`,\n    ANALYTICS='ANALYTICS',\n    TOPIC='TOPIC'\n}\n\nexport type Categories = Array<Category>;\n\nexport const categories: Categories = [\n    Category.HEADLINE, Category.BUSINESS, Category.ENTERTAINMENT, Category.HEALTH, Category.SCIENCE, Category.SPORTS, Category.TECHNOLOGY\n];\n\nexport enum CategoryActionsType {\n    SET_CATEGORY = 'SET_CATEGORY'\n}\n\nexport interface CategoryActions {\n    type: CategoryActionsType,\n    category: Category\n}\n\nconst setCategory: ActionCreator<CategoryActions> = (category: Category) => {\n    return {\n        type: CategoryActionsType.SET_CATEGORY,\n        category\n    }\n};\n\nexport function goToSearchPanel() {\n    return {\n        type: CategoryActionsType.SET_CATEGORY,\n        category: Category.SEARCH\n    }\n}\n\nexport function goToAnalyticsPanel() {\n    return {\n        type: CategoryActionsType.SET_CATEGORY,\n        category: Category.ANALYTICS\n    }\n}\n\nexport function goToTopicPanel() {\n    return {\n        type: CategoryActionsType.SET_CATEGORY,\n        category: Category.TOPIC\n    }\n}\n\nconst setCategoryAndFetchArticles = (category: Category) => {\n    return (dispatch: ThunkDispatch<State, null, AnyAction>) => {\n        dispatch(setCategory(category));\n        dispatch(fetchArticles(category));\n    };\n};\n\nexport function setNextCategory() {\n    return (dispatch: ThunkDispatch<State, null, AnyAction>, getState: () => State) => {\n        const currentCategory = getState().category;\n        const currentIndex = categories.indexOf(currentCategory);\n        const isLast = currentIndex === categories.length - 1;\n        if (isLast) {\n            dispatch(setCategoryAndFetchArticles(Category[categories[0]]));\n        } else {\n            dispatch(setCategoryAndFetchArticles(Category[categories[currentIndex + 1]]));\n        }\n    };\n}\n\nexport function setPreviousCategory() {\n    return (dispatch: ThunkDispatch<State, null, AnyAction>, getState: () => State) => {\n        const currentCategory = getState().category;\n        const currentIndex = categories.indexOf(currentCategory);\n        const isFirst = currentIndex === 0;\n        if (isFirst) {\n            dispatch(setCategoryAndFetchArticles(Category[categories[categories.length - 1]]));\n        } else {\n            dispatch(setCategoryAndFetchArticles(Category[categories[currentIndex - 1]]));\n        }\n    };\n}\n\nexport function setCategoryIfNeeded(category: Category) {\n    return (dispatch: ThunkDispatch<State, null, AnyAction>, getState: () => State) => {\n        if (getState().category === category) return;\n        dispatch(setCategoryAndFetchArticles(category));\n    };\n}\n","import {Category} from \"./actions/category\";\nimport {Article} from \"./actions/articles\";\n\nexport interface State {\n    category: Category,\n    articles: {\n        isError: boolean,\n        isFetching: boolean,\n        articles: Array<Article>\n    },\n    copyLinkSnackBar: {\n        isActive: boolean\n    },\n    searchKeyword: string\n}\n\nexport const initState: State = {\n    category: Category.HEADLINE,\n    articles: {\n        isError: false,\n        isFetching: true,\n        articles: []\n    },\n    copyLinkSnackBar: {\n        isActive: false\n    },\n    searchKeyword: ''\n};","import {initState, State} from \"../state\";\nimport {Category, CategoryActions, CategoryActionsType} from \"../actions/category\";\n\nfunction category(state = initState.category, action: CategoryActions): State['category'] {\n    switch (action.type) {\n        case CategoryActionsType.SET_CATEGORY:\n            return Category[action.category];\n        default:\n            return state\n    }\n}\n\nexport default category;","import {initState, State} from \"../state\";\nimport {ArticleActionsTypes, ArticlesActions} from \"../actions/articles\";\n\nfunction articles(state = initState.articles, actions: ArticlesActions): State['articles'] {\n    switch(actions.type) {\n        case ArticleActionsTypes.IS_ERROR:\n            return Object.assign({}, state, {isError: true});\n        case ArticleActionsTypes.REQUEST_ARTICLES:\n            return Object.assign({}, state, {\n                isError: false,\n                isFetching: true\n            });\n        case ArticleActionsTypes.RECEIVE_ARTICLES:\n            return Object.assign({}, {\n                isError: false,\n                isFetching: false,\n                articles: actions.articles.slice()\n            });\n        default:\n            return state\n    }\n}\n\nexport default articles;","export enum CopyLinkSnackbarActionsTypes {\n    CLOSE_SNACKBAR = 'CLOSE_SNACKBAR',\n    OPEN_SNACKBAR = 'OPEN_SNACKBAR'\n}\n\nexport interface CopyLinkSnackBarActions {\n    type: CopyLinkSnackbarActionsTypes\n}\n\nexport function closeCopyLinkSnackBar() {\n    return {\n        type: CopyLinkSnackbarActionsTypes.CLOSE_SNACKBAR\n    }\n}\n\nexport function openCopyLinkSnackBar() {\n    return {\n        type: CopyLinkSnackbarActionsTypes.OPEN_SNACKBAR\n    }\n}","import {CopyLinkSnackBarActions, CopyLinkSnackbarActionsTypes} from \"../actions/copy-link-snackbar\";\nimport {State, initState} from \"../state\";\n\nfunction copyLinkSnackbar(state = initState.copyLinkSnackBar, actions: CopyLinkSnackBarActions): State['copyLinkSnackBar'] {\n    switch(actions.type) {\n        case CopyLinkSnackbarActionsTypes.CLOSE_SNACKBAR:\n            return {\n                isActive: false\n            };\n        case CopyLinkSnackbarActionsTypes.OPEN_SNACKBAR:\n            return {\n                isActive: true\n            };\n        default:\n            return state\n    }\n}\n\nexport default copyLinkSnackbar","export enum SearchKeywordTypes {\n    SET_KEYWORD = 'SET_KEYWORD'\n}\n\nexport interface SearchKeywordActions {\n    type: SearchKeywordTypes,\n    keyword: string\n}\n\nexport function setSearchKeyword(keyword: string) {\n    return {\n        type: SearchKeywordTypes.SET_KEYWORD,\n        keyword\n    }\n}","import {CopyLinkSnackBarActions, CopyLinkSnackbarActionsTypes} from \"../actions/copy-link-snackbar\";\nimport {State, initState} from \"../state\";\nimport {SearchKeywordActions, SearchKeywordTypes} from \"../actions/search-keyword\";\n\nfunction searchKeyword(state = initState.searchKeyword, actions: SearchKeywordActions): State['searchKeyword'] {\n    switch(actions.type) {\n        case SearchKeywordTypes.SET_KEYWORD:\n            return actions.keyword;\n        default:\n            return state\n    }\n}\n\nexport default searchKeyword","import {combineReducers} from \"redux\";\nimport category from \"./category\";\nimport articles from \"./articles\";\nimport copyLinkSnackBar from \"./copy-link-snackbar\";\nimport searchKeyword from \"./search-keyword\";\n\nconst rootReducers = combineReducers({\n    category,\n    articles,\n    copyLinkSnackBar,\n    searchKeyword\n});\n\nexport default rootReducers;","import { createStore, applyMiddleware } from 'redux'\nimport thunkMiddleware from 'redux-thunk'\nimport {initState} from \"./state\";\nimport rootReducers from \"./reducers/root-reducers\";\n\n// import { createLogger } from 'redux-logger'\n// const loggerMiddleware = createLogger();\n\nconst preloadedState = initState;\nexport default function configureStore() {\n    return createStore(\n        rootReducers,\n        preloadedState,\n        applyMiddleware(thunkMiddleware)\n        // applyMiddleware(thunkMiddleware, loggerMiddleware)\n    )\n}","import {createMuiTheme, responsiveFontSizes} from \"@material-ui/core/styles\";\n\nlet theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: '#333333',\n            contrastText: '#fff',\n        },\n        secondary: {\n            main: '#1EB980',\n            contrastText: '#fff',\n        },\n    },\n});\ntheme = responsiveFontSizes(theme);\ntheme.typography.h1 = {\n    fontFamily: [\n        'Anton',\n        'sans-serif',\n    ].join(','),\n    fontWeight: 400,\n    fontSize: '2rem',\n    [theme.breakpoints.up('md')]: {\n        fontSize: '2.5rem',\n    },\n    fontStyle: \"normal\",\n    color: \"inherit\"\n};\n\nexport default theme;","import React, {useEffect, useState} from \"react\";\n\n// @param triggerPoint in range (0, 1)\nexport default function useLazyLoad(ref: React.RefObject<HTMLDivElement>, triggerPoint?: number) {\n    const [isVisible, setIsVisible] = useState(false);\n    let scrollHandlerLastCalledAt = Date.now() - 1000;\n\n    function checkIsVisible() {\n        const calledAt = Date.now();\n        if (calledAt - scrollHandlerLastCalledAt < 20) {\n            return\n        } else {\n            scrollHandlerLastCalledAt = calledAt\n        }\n        if (!ref.current) return;\n\n        const rect = ref.current.getBoundingClientRect();\n        const isBefore = rect.top + rect.height < 0;\n        const isAfter = triggerPoint ?\n            rect.top > window.innerHeight * triggerPoint :\n            rect.top > window.innerHeight;\n        if (!isBefore && !isAfter) setIsVisible(true);\n    }\n\n    useEffect(() => {\n        if (isVisible) return;\n        checkIsVisible();\n        document.addEventListener('scroll', checkIsVisible);\n        return () => {\n            document.removeEventListener('scroll', checkIsVisible);\n        }\n    }, [isVisible, ref]);\n\n    return isVisible\n}","function copyToClipboard(string: string) {\n    const el = document.createElement('textarea');\n    el.value = string;\n    el.setAttribute('readonly', '');\n    el.style.position = 'absolute';\n    el.style.left = '-9999px';\n    document.body.appendChild(el);\n    el.select();\n    document.execCommand('copy');\n    document.body.removeChild(el);\n}\n\nexport default copyToClipboard;","function useDebounce(debounceInterval: number) {\n    let lastExecuted = Date.now();\n\n    function shouldBeExecuted() {\n        const now = Date.now();\n        if (now - lastExecuted > debounceInterval) {\n            lastExecuted = now;\n            return true\n        } else {\n            return false\n        }\n    }\n\n    return shouldBeExecuted;\n}\n\nexport default useDebounce;","import {RefObject, useEffect, useState} from \"react\";\nimport useDebounce from \"./use-debounce\";\n\nexport enum UseSwipeableDirections {\n    NULL= 'NULL',\n    LEFT = 'LEFT',\n    RIGHT = 'RIGHT'\n}\n\nenum UserAction {\n    NULL = 'NULL',\n    SWIPE = 'SWIPE',\n    SCROLL = 'SCROLL'\n}\n\nconst DEBOUNCER = 10;\n\nfunction useSwipeable(ref: RefObject<HTMLInputElement>, threshholdPx: number) {\n    const [x1, setX1] = useState(0);\n    const [y1, setY1] = useState(0);\n    const [userAction, setUserAction] = useState(UserAction.NULL);\n    const [direction, setDirection] = useState(UseSwipeableDirections.NULL);\n    const [dragDistance, setDragDistance] = useState(0);\n    const shouldBeExecuted = useDebounce(DEBOUNCER);\n\n    function touchStartHandler(e: TouchEvent) {\n        setX1(e.changedTouches[0].clientX);\n        setY1(e.changedTouches[0].clientY)\n    }\n\n    function touchMoveHandler(e: TouchEvent) {\n        if (!shouldBeExecuted()) return;\n        const currentX = e.changedTouches[0].clientX;\n        const currentY = e.changedTouches[0].clientY;\n\n        if (userAction === 'SWIPE') {\n            if (e.cancelable) e.preventDefault();\n            setDragDistance(e.changedTouches[0].clientX - x1);\n        } else if (userAction === 'NULL' && Math.abs(currentX - x1) > Math.abs(currentY - y1)) {\n            setUserAction(UserAction.SWIPE)\n        } else if (userAction === 'NULL' && Math.abs(currentX - x1) <= Math.abs(currentY - y1)) {\n            setUserAction(UserAction.SCROLL)\n        }\n\n    }\n\n    function touchEndHandler(e: TouchEvent) {\n        const currentX = e.changedTouches[0].clientX;\n        const currentY = e.changedTouches[0].clientY;\n        if (\n            Math.abs(currentX - x1) > Math.abs(currentY - y1) &&\n            Math.abs(currentX - x1) > threshholdPx &&\n            userAction === UserAction.SWIPE\n        ) {\n            setDirection(currentX > x1 ? UseSwipeableDirections.RIGHT : UseSwipeableDirections.LEFT);\n        }\n        setDragDistance(0);\n        setUserAction(UserAction.NULL)\n    }\n\n    function resetSwipeStatus() {\n        setDirection(UseSwipeableDirections.NULL);\n    }\n\n    useEffect(() => {\n        const currentElement = ref.current;\n        if (!currentElement) return;\n        currentElement.addEventListener('touchstart', touchStartHandler);\n\n        return () => {\n            currentElement.removeEventListener('touchstart', touchStartHandler);\n        }\n    }, [ref]);\n\n    useEffect(() => {\n        const currentElement = ref.current;\n        if (!currentElement) return;\n        currentElement.addEventListener('touchmove', touchMoveHandler);\n\n        return () => {\n            currentElement.removeEventListener('touchmove', touchMoveHandler);\n        }\n    }, [y1, userAction, ref]);\n\n    useEffect(() => {\n        const currentElement = ref.current;\n        if (!currentElement) return;\n        currentElement.addEventListener('touchend', touchEndHandler);\n\n        return () => {\n            currentElement.removeEventListener('touchend', touchEndHandler);\n        }\n    }, [y1, userAction, ref]);\n\n    return {\n        direction,\n        dragDistance,\n        resetSwipeStatus\n    }\n}\n\nexport default useSwipeable","import React, {useEffect, useRef} from \"react\";\nimport useSwipeable, {UseSwipeableDirections} from \"../../tools/use-swipeable\";\nimport {connect} from \"react-redux\";\nimport {setNextCategory, setPreviousCategory} from \"../../redux/actions/category\";\n\ninterface SwipeableProps {\n    goPrevious: () => void,\n    goNext: () => void,\n}\n\nconst Swipeable: React.FC<SwipeableProps> = (props) => {\n    const containerRef = useRef(null);\n    const {\n        direction,\n        dragDistance,\n        resetSwipeStatus\n    } = useSwipeable(containerRef, 50);\n\n    useEffect(() => {\n        if (direction === UseSwipeableDirections.RIGHT) {\n            props.goPrevious()\n        } else if (direction === UseSwipeableDirections.LEFT) {\n            props.goNext()\n        }\n        return () => {\n            resetSwipeStatus();\n        }\n    }, [direction]);\n\n    return (\n        <div\n            style={{\n                width: '100%',\n                transform: `translateX(${dragDistance}px)`,\n                // it affects snackbar fixed behavior\n                // left: `${dragDistance}px`,\n                // position: 'relative'\n            }}\n            ref={containerRef}\n        >\n            { props.children }\n        </div>\n    )\n};\n\nfunction mapDispatchToProps(dispatch: any) {\n    return {\n        goPrevious: () => dispatch(setPreviousCategory()),\n        goNext: () => dispatch(setNextCategory())\n    }\n}\n\nconst SwipeableContainer = connect(\n    null,\n    mapDispatchToProps\n)(Swipeable);\n\nexport default SwipeableContainer","import React, {CSSProperties, useEffect, useRef, useState} from \"react\";\nimport {\n    Box,\n    Button,\n    Card,\n    CardActions,\n    CardContent,\n    CardMedia,\n    createStyles,\n    Grid,\n    Link,\n    makeStyles,\n    Theme,\n    Typography,\n    useMediaQuery,\n    useTheme,\n    Zoom,\n} from \"@material-ui/core\";\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport useLazyLoad from \"../../tools/use-lazy-load\";\nimport getPublishTime from \"../../tools/get-publish-time\";\nimport copyToClipboard from \"../../tools/copy-to-clipboard\";\nimport {ThemeStyle} from \"@material-ui/core/styles/createTypography\";\nimport Swipeable from '../utility-components/swipeable';\nimport { Article as ArticleType} from \"../../redux/actions/articles\";\nimport {State} from \"../../redux/state\";\n\nconst useStyles = makeStyles((theme) => createStyles({\n    wrapper: {\n        width: '100%',\n        padding: '20px 20px 150px 20px',\n    },\n    [theme.breakpoints.down(\"sm\")]: {\n        wrapper: {\n            padding: '8px 8px 150px 8px'\n        },\n    },\n}));\n\nfunction calcHeight(lines: number, variant: ThemeStyle, theme: Theme): CSSProperties['height'] {\n    return `calc(${lines} * ${theme.typography[variant].fontSize} * ${theme.typography[variant].lineHeight})`;\n}\n\nfunction ellipsis(variant: ThemeStyle, theme: Theme) {\n    return createStyles({\n        root: {\n            position: 'relative',\n            '&:after': {\n                content: \"''\",\n                position: 'absolute',\n                bottom: 0,\n                right: 0,\n                width: '20%',\n                height: calcHeight(1, variant, theme),\n                backgroundImage: 'linear-gradient(to right, rgba(255, 255, 255, 0) , rgba(255, 255, 255, 1))',\n                zIndex: 10\n            },\n        }\n    })\n}\n\nconst overFlowHidden: CSSProperties = {\n    width: '100%',\n    overflow: 'hidden',\n    position: 'relative'\n};\n\nconst usePrimaryCardStyles = makeStyles((theme) => createStyles({\n    media: {\n        height: '550px',\n        ...overFlowHidden,\n    },\n    skeleton: {\n        height: '550px',\n        ...overFlowHidden,\n    },\n    title: {\n        height: calcHeight(1, 'body1', theme),\n        ...ellipsis('body1', theme).root,\n        ...overFlowHidden,\n    },\n    source: {\n        height: calcHeight(1, 'body2', theme),\n        ...overFlowHidden,\n    },\n    articleContent: {\n        height: calcHeight(2, 'body2', theme),\n        ...ellipsis('body2', theme).root,\n        ...overFlowHidden,\n    },\n    buttons: {\n        ...overFlowHidden,\n    },\n    [theme.breakpoints.down(\"sm\")]: {\n        media: {\n            height: '200px',\n        },\n        skeleton: {\n            height: '200px',\n        },\n    }\n}));\n\n\n\nconst useSecondaryCardStyles = makeStyles((theme) => createStyles({\n    media: {\n        height: '200px',\n        ...overFlowHidden,\n    },\n    skeleton: {\n        height: '200px',\n        ...overFlowHidden,\n    },\n    title: {\n        height: calcHeight(2, 'body1', theme),\n        ...ellipsis('body1', theme).root,\n        ...overFlowHidden,\n    },\n    source: {\n        height: calcHeight(1, 'body2', theme),\n        ...overFlowHidden,\n    },\n    articleContent: {\n        height: calcHeight(3, 'body2', theme),\n        ...ellipsis('body2', theme).root,\n        ...overFlowHidden,\n    },\n    buttons: {\n        ...overFlowHidden,\n    },\n    [theme.breakpoints.down(\"sm\")]: {\n\n    }\n}));\n\ninterface ButtonsProps {\n    url: string,\n    className: string,\n    openCopyLinkSnackBar: () => void\n}\n\n\nfunction Buttons(props: ButtonsProps) {\n\n    function copyLinkHandler() {\n        copyToClipboard(props.url);\n        props.openCopyLinkSnackBar();\n    }\n\n    return (\n        <CardActions className={props.className}>\n            <Link href={props.url} target={'_blank'} rel=\"noopener\" underline={\"none\"}>\n                <Button size=\"small\" color=\"primary\">\n                    Learn more\n                </Button>\n            </Link>\n            <Button size=\"small\" color=\"primary\" onClick={copyLinkHandler}>Share</Button>\n        </CardActions>\n    )\n}\n\ninterface ArticleProps extends ArticleType {\n    id: number,\n    openCopyLinkSnackBar: () => void\n}\n\nfunction Article(props: ArticleProps) {\n    const ref = useRef(null);\n    const isVisible = useLazyLoad(ref);\n    const [isMounted, setIsMounted] = useState(false);\n    const isTransitionAnimationNeeded = !useMediaQuery(useTheme().breakpoints.down('sm'));\n\n    const isPrimaryCard = props.id === 0 || props.id === 1;\n    const cardPrimaryClasses = usePrimaryCardStyles();\n    const cardSecondaryClasses = useSecondaryCardStyles();\n    const cardClasses = isPrimaryCard ? cardPrimaryClasses : cardSecondaryClasses;\n\n    useEffect(() => {\n        if (isTransitionAnimationNeeded) {\n            setTimeout(() =>setIsMounted(true), 225)\n            // Zoom transition 225ms\n        }\n    }, []);\n\n    const content = (\n        <Grid\n            item\n            xs={12}\n            md={isPrimaryCard ? 6 : 3}\n            ref={ref}\n        >\n            <Card raised>\n                {\n                    isVisible && props.urlToImage?\n                        <CardMedia\n                            component=\"img\"\n                            alt={props.title}\n                            className={cardClasses.media}\n                            image={props.urlToImage}\n                            title={props.title}\n                        /> :\n                        <Skeleton variant={\"rect\"} className={cardClasses.skeleton} />\n                }\n\n                <CardContent>\n                    <Typography gutterBottom variant=\"body1\" component=\"h2\" className={cardClasses.title}>\n                        <Box fontWeight={700}>\n                            { props.title }\n                        </Box>\n                    </Typography>\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" className={cardClasses.source}>\n                        <Box component={'span'} fontWeight={700}>\n                            { props.source ? props.source + ' - ' : props.author ? props.author + ' - ' : '' }\n                            { getPublishTime(new Date(props.publishedAt)) }\n                        </Box>\n                    </Typography>\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" className={cardClasses.articleContent}>\n                        { props.content && props.content.replace(/\\[\\+[0-9]+\\schars\\]/ig, '') }\n                    </Typography>\n                </CardContent>\n                <Buttons url={props.url} className={cardClasses.buttons} openCopyLinkSnackBar={props.openCopyLinkSnackBar} />\n            </Card>\n        </Grid>\n    );\n\n    return isTransitionAnimationNeeded ? (\n        <Zoom in={!isMounted ? true : isVisible}>\n            { content }\n        </Zoom>\n    ) : content;\n}\n\ninterface LoadedArticlesProps {\n    articles: Array<ArticleType>,\n    openCopyLinkSnackBar: () => void\n}\n\nfunction LoadedArticles(props: LoadedArticlesProps) {\n    return (\n        <>\n            {\n                props.articles.map((article, i) => {\n                    return (\n                        <Article {...article} key={i} id={i} openCopyLinkSnackBar={props.openCopyLinkSnackBar}/>\n                    )\n                })\n            }\n        </>\n    )\n}\n\ninterface ArticlesProps extends Pick<State, 'articles'> {\n    openCopyLinkSnackBar: () => void\n}\n\nfunction Articles(props: ArticlesProps) {\n    const classes = useStyles();\n\n    // scroll to top after is category changed\n    useEffect(() => {\n        window.scrollTo(0, 0);\n    });\n\n    let content;\n    if (props.articles.isError) {\n        content = (\n            <div style={{\n                width: '100%'\n            }}>\n                error\n            </div>\n        )\n    } else if (props.articles.isFetching) {\n        content = (\n            <>\n                {\n                    Array.from(Array(10), (_, i) => {\n                        return (\n                            <Grid item key={i}>\n                                <Box width={500} height={300} maxWidth={'100%'}>\n                                    <Skeleton variant={\"rect\"} width={500} height={200}/>\n                                    <Skeleton width={500}/>\n                                    <Skeleton width={500}/>\n                                </Box>\n                            </Grid>\n                        )\n                    })\n                }\n            </>\n        )\n    } else {\n        content = <LoadedArticles articles={props.articles.articles} openCopyLinkSnackBar={props.openCopyLinkSnackBar}/>\n    }\n\n    return (\n        <Swipeable>\n            <Box className={classes.wrapper}>\n                <Grid container direction={\"row\"} alignContent={\"center\"} justify={\"center\"} spacing={2}>\n                    { content }\n                </Grid>\n            </Box>\n        </Swipeable>\n    )\n}\n\nexport {Article, Articles as default}","export default function getPublishTime(date: Date): string{\n    const timePast = Date.now() - date.getTime();\n    if (timePast < 0) {\n        return 'now'\n    }\n    const minutes = Math.floor(timePast / (60 * 1000));\n    if (minutes <= 59) {\n        return `${minutes} ${minutes === 1 ? 'minute' : 'minutes'} ago`\n    }\n    const hours = Math.floor(timePast / (60 * 60 * 1000));\n    if (hours <= 23) {\n        return `${hours} ${hours === 1 ? 'hour' : 'hours'} ago`\n    }\n    const days = Math.floor(timePast / (24 * 60 * 60 * 1000));\n    if (days <= 30) {\n        return `${days} ${days === 1 ? 'day' : 'days'} ago`\n    }\n    const months = Math.floor(timePast / (30 * 24 * 60 * 60 * 1000));\n    if (months <= 12) {\n        return `${months} ${months === 1 ? 'month' : 'months'} ago`\n    }\n    const years = Math.floor(timePast / (365 * 24 * 60 * 60 * 1000));\n    return `${years} ${years === 1 ? 'year' : 'years'} ago`\n}","import {openCopyLinkSnackBar} from \"../redux/actions/copy-link-snackbar\";\nimport {connect} from \"react-redux\";\nimport Articles from \"../components/articles/articles\";\nimport {Dispatch} from \"redux\";\n\nfunction mapDispatchToProps(dispatch: Dispatch) {\n    return {\n        openCopyLinkSnackBar: () => dispatch(openCopyLinkSnackBar())\n    }\n}\n\nconst ArticlesContainer = connect(\n    null,\n    mapDispatchToProps\n)(Articles);\n\nexport default ArticlesContainer;\n","import React from \"react\";\nimport {Avatar, Box, Chip, Grid, Link} from \"@material-ui/core\";\n\nfunction Attribution() {\n    return (\n        <Box m={2}>\n            <Grid container direction={'row'} spacing={2}>\n                <Grid item>\n                    <Link href={'https://www.xiaoxihome.com/'} target={'_blank'} rel=\"noopener\" underline={\"none\"}>\n                        <Chip\n                            avatar={<Avatar>X</Avatar>}\n                            label=\"🔧 with ❤️ by XiaoxiHome\"\n                            color=\"primary\"\n                            clickable\n                        />\n                    </Link>\n                </Grid>\n                <Grid item>\n                    <Link href={'https://newsapi.org/'} target={'_blank'} rel=\"noopener\" underline={\"none\"}>\n                        <Chip\n                            avatar={<Avatar>N</Avatar>}\n                            label=\"News data courtesy of NewsAPI.org\"\n                            color=\"secondary\"\n                            clickable\n                        />\n                    </Link>\n                </Grid>\n            </Grid>\n        </Box>\n    )\n}\n\nexport default Attribution;","import React from \"react\";\nimport {\n    createStyles,\n    IconButton,\n    Snackbar,\n    SnackbarContent,\n} from \"@material-ui/core\";\nimport Close from '@material-ui/icons/Close';\nimport {green} from '@material-ui/core/colors';\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\n\nconst useStyles = makeStyles(() => createStyles({\n    successSnackBar: {\n        backgroundColor: green[600]\n    },\n}));\n\ninterface CopyLinkSnackbarProps {\n    isActive: boolean,\n    closeCopyLinkSnackBar: () => void\n}\n\nfunction CopyLinkSnackbar(props: CopyLinkSnackbarProps) {\n    const classes = useStyles();\n\n    function closeHandler() {\n        props.closeCopyLinkSnackBar()\n    }\n\n    return (\n        <Snackbar\n            anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'center',\n            }}\n            open={props.isActive}\n            autoHideDuration={3000}\n            onClose={closeHandler}\n        >\n            <SnackbarContent\n                className={classes.successSnackBar}\n                message={\n                    <span id=\"client-snackbar\">\n                        Link copied to clipboard\n                    </span>\n                }\n                action={[\n                        <IconButton key=\"close\" aria-label=\"close\" color=\"inherit\" onClick={closeHandler}>\n                    <Close/>\n                    </IconButton>,\n            ]}\n            />\n    </Snackbar>\n    )\n}\n\nexport default CopyLinkSnackbar;","import {State} from \"../redux/state\";\nimport {closeCopyLinkSnackBar} from \"../redux/actions/copy-link-snackbar\";\nimport {connect} from \"react-redux\";\nimport CopyLinkSnackbar from \"../components/copy-link-snackbar\";\nimport {Dispatch} from \"redux\";\n\nfunction mapDispatchToProps(dispatch: Dispatch) {\n    return {\n        closeCopyLinkSnackBar: () => dispatch(closeCopyLinkSnackBar())\n    }\n}\n\nfunction mapStateToProps(state: State) {\n    return {\n        isActive: state.copyLinkSnackBar.isActive\n    }\n}\n\nconst CopyLinkSnackBarContainer = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(CopyLinkSnackbar);\n\nexport default CopyLinkSnackBarContainer;","import React, {useEffect, useState} from \"react\";\n\nexport enum AnalyticsPageStatus {\n    loading='loading',\n    loaded='loaded',\n    error='error'\n}\n\nexport interface SummaryStatisticsData {\n    totalDocuments: number,\n    earliestDocumentDate: number,\n    latestDocumentDate: number,\n    documentsCountByCategory: Array<{\n        count: number,\n        category: string\n    }>,\n    documentsCountByDay: {\n        count: number[],\n        time: number[]\n    },\n    wordCloud: Array<{\n        count: number,\n        word: string\n    }>,\n    documentsCountByDayAndCategory: {\n        documentCount: number[][],\n        series: string[],\n        category: string[]\n    }\n}\n\nconst useGetAnalytics = () => {\n    const [status, setStatus] = useState(AnalyticsPageStatus.loading);\n    const [summaryStatisticsData, setSummaryStatisticsData] = useState<SummaryStatisticsData | null>(null);\n\n    useEffect(() => {\n        fetch('https://www.xiaoxihome.com/api/news-analytics')\n            .then(res => res.json())\n            .then(json => {\n                if (json.status !== 'ok') {\n                    console.log(json);\n                    setStatus(AnalyticsPageStatus.error)\n                } else {\n                    setSummaryStatisticsData({\n                        totalDocuments: json.summaryStatistics.totalDocuments,\n                        earliestDocumentDate: json.summaryStatistics.earliestDocumentDate,\n                        latestDocumentDate: json.summaryStatistics.latestDocumentDate,\n                        documentsCountByCategory: json.summaryStatistics.documentsCountByCategory,\n                        documentsCountByDay: {\n                            time: json.summaryStatistics.documentsCountByDay.bin.map((_:any) => _.ms),\n                            count: json.summaryStatistics.documentsCountByDay.frequency\n                        },\n                        wordCloud: json.summaryStatistics.wordCloud,\n                        documentsCountByDayAndCategory: json.summaryStatistics.documentsCountByDayAndCategory\n                    } as SummaryStatisticsData);\n                    setStatus(AnalyticsPageStatus.loaded)\n                }\n            })\n            .catch(e => {\n                console.log(e);\n                setStatus(AnalyticsPageStatus.error)\n            })\n    }, []);\n\n    return {status, summaryStatisticsData}\n};\n\nexport default useGetAnalytics","import React, {useEffect, useRef, useState} from \"react\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\n\nconst easeInQuad = (t: number) => t*t;\n\nexport enum AnimationSlideInDirection {\n    left= 'left',\n    right='right'\n}\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        position: 'relative',\n        zIndex: 1,\n        width: '100%',\n    },\n    children: {\n        position: 'absolute',\n        zIndex: -1,\n        top: 0,\n        left: 0,\n        willChange: 'transform',\n        width: '100%'\n    },\n    placeholder: {\n        position: 'relative',\n        zIndex: -2\n    },\n}));\n\ninterface AnimationSlideInProps {\n    direction: AnimationSlideInDirection\n}\n\nconst AnimationSlideIn: React.FC<AnimationSlideInProps> = ({children, direction}) => {\n    const classes = useStyles();\n    const containerRef = useRef<HTMLDivElement>(null);\n    const childrenRef = useRef<HTMLDivElement>(null);\n    const placeholderRef = useRef<HTMLDivElement>(null);\n\n    const [dimension, setDimension] = useState({\n        width: `0px`,\n        height: `0px`\n    });\n    const [target, setTarget] = useState({\n        start: 0,\n        end: 0\n    });\n    const [translate, setTranslate] = useState({\n        xMax: 0,\n        x: 0,\n        y: 0\n    });\n\n    const scrollHandler = () => {\n        const isBefore = window.scrollY + window.innerHeight < target.start;\n        const isAfter = window.scrollY + window.innerHeight * 0.5 > target.end; // center of the element aligns center of the viewport\n        if (!isBefore && !isAfter) {\n            const percentage = (window.scrollY - target.start + window.innerHeight) / (target.end - target.start + 0.5 * window.innerHeight); // window.scrollY subtract isBefore and isAfter\n            setTranslate((prevTranslate) => ({\n                ...prevTranslate,\n                x: prevTranslate.xMax * easeInQuad(1 - percentage)\n            }))\n        } else if (isBefore) {\n            if (translate.x !== translate.xMax) {\n                setTranslate((prevTranslate) => ({\n                    ...prevTranslate,\n                    x: prevTranslate.xMax\n                }))\n            }\n        } else if (isAfter) {\n            if (translate.x !== 0) {\n                setTranslate((prevTranslate) => ({\n                    ...prevTranslate,\n                    x: 0\n                }))\n            }\n        }\n    };\n\n    useEffect(() => {\n        if (!childrenRef.current || !placeholderRef.current || dimension.width !== '0px') return;\n        setDimension({\n            width: `${childrenRef.current.getBoundingClientRect().width}px`,\n            height: `${childrenRef.current.getBoundingClientRect().height}px`\n        });\n    }, [dimension]);\n\n    useEffect(() => {\n        if (!containerRef.current || dimension.width === '0px' || target.start !== 0) return;\n        const rect = containerRef.current.getBoundingClientRect();\n        setTarget({\n            start: window.scrollY + rect.top,\n            end: window.scrollY + rect.top + rect.height * 0.5\n        });\n        const xMax = direction === AnimationSlideInDirection.left ? -(rect.left + rect.width) : rect.right + rect.width;\n        setTranslate({\n            xMax,\n            x: xMax,\n            y: 0\n        })\n    }, [dimension, target, translate]);\n\n    useEffect(() => {\n        document.addEventListener('scroll', scrollHandler);\n        return () => document.removeEventListener('scroll', scrollHandler);\n    }, [target, translate]);\n\n\n\n    return (\n        <div className={classes.root} ref={containerRef}>\n            <div className={classes.children} ref={childrenRef} style={{transform: `translate(${translate.x}px, ${translate.y}px)`}}>\n                { children }\n            </div>\n            <div className={classes.placeholder} ref={placeholderRef} style={{...dimension}}>\n\n            </div>\n        </div>\n    )\n};\n\nexport default AnimationSlideIn","import React, {useRef, useState} from \"react\";\nimport CountUp from 'react-countup';\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport Fade from \"@material-ui/core/Fade\";\nimport useLazyLoad from \"../../../tools/use-lazy-load\";\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        width: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        // padding: theme.spacing(10, 2),\n        // [theme.breakpoints.down('sm')]: {\n        //     padding: theme.spacing(2, 2),\n        // }\n    }\n}));\n\ninterface SectionWrapperProps {\n\n}\n\nconst SectionWrapper: React.FC<SectionWrapperProps> = ({children}) => {\n    const classes = useStyles();\n    const containerRef = useRef<HTMLDivElement>(null);\n    // const isVisible = useLazyLoad(containerRef, 0.8);\n    const [fullHeight, setFullHeight] = useState(window.innerHeight - 100);\n\n    return (\n        <div className={classes.root} ref={containerRef} style={{minHeight: `${fullHeight}px`}}>\n            { children }\n        </div>\n    )\n};\n\nexport default SectionWrapper","import * as d3 from \"d3\";\n\nexport type PieChartData = ArcData[];\n\ntype ArcData = {\n    title: string,\n    value: number\n}\n\nclass PieChartD3 {\n\n    readonly getColor = (index: number) => {\n        // const colors = ['#003f5c', '#374c80', '#7a5195' ,'#bc5090' ,'#ef5675' ,'#ff764a' ,'#ffa600'];\n        const colors = ['#ffa600', '#ff764a', '#ef5675' ,'#bc5090' ,'#7a5195' ,'#374c80' ,'#003f5c'];\n        return colors[index > colors.length - 1 ? 0 : index]\n    };\n    hasAnimated = false;\n    id: string;\n    params: {\n        width: number,\n        height: number,\n        startAngle: number,\n        endAngle: number\n        rx: number,\n        ry: number,\n        h: number,\n        ir: number,\n    };\n    svg: d3.Selection<SVGSVGElement, unknown, HTMLElement, any>;\n    references: {\n        pie: d3.Selection<SVGGElement, unknown, HTMLElement, any>,\n        innerSlice: d3.Selection<SVGPathElement, d3.PieArcDatum<ArcData>, SVGGElement, any>,\n        topSlice: d3.Selection<SVGPathElement, d3.PieArcDatum<ArcData>, SVGGElement, any>,\n        outerSlice: d3.Selection<SVGPathElement, d3.PieArcDatum<ArcData>, SVGGElement, any>,\n        text: d3.Selection<SVGTextElement, d3.PieArcDatum<ArcData>, SVGGElement, any>,\n        text1: d3.Selection<SVGTextElement, d3.PieArcDatum<ArcData>, SVGGElement, any>,\n        text2: d3.Selection<SVGTextElement, d3.PieArcDatum<ArcData>, SVGGElement, any>,\n    };\n    data: {\n        pieZero: d3.PieArcDatum<ArcData>[],\n        pie: d3.PieArcDatum<ArcData>[],\n        totalValue: number\n    };\n\n    constructor(id: string, data: PieChartData, width: number) {\n        this.id = id;\n        this.params = this.getParams(width);\n        this.svg = d3.select(`#${id}`).append(\"svg\");\n        this.data = {\n            pieZero: this.getPieData(data.map((_,i)=>({\n                value: i === 0 ? 100 : 0,\n                title: _.title\n            }))),\n            pie: this.getPieData(data),\n            totalValue: this.getPieData(data).reduce((a, b) => a + b.data.value, 0)\n        };\n        this.references = this.createReferences();\n    }\n\n    getParams(width: number) {\n        const height = width * 0.6;\n        return {\n            width,\n            height: height,\n            startAngle: Math.PI,\n            endAngle: Math.PI * 3,\n            rx: width / 2 * 0.8,\n            ry: height / 2 - 0.1 * height,\n            h: 0.1 * height,\n            ir: 0.4\n        }\n    };\n\n    getPieData(data: PieChartData) {\n        const _data =d3.pie<ArcData>()\n            .value((d) => d.value)\n            .sort((a, b) => a.value - b.value)\n            .startAngle(this.params.startAngle)\n            .endAngle(this.params.endAngle)\n            (data);\n        return _data\n    }\n\n    createReferences() {\n        const pie = this.svg.append('g');\n\n        const innerSlice = pie\n            .selectAll().data(this.data.pie).enter().append(\"path\");\n\n        const topSlice = pie\n            .selectAll().data(this.data.pie).enter().append(\"path\");\n\n        const outerSlice = pie\n            .selectAll().data(this.data.pie).enter().append(\"path\");\n\n        const text = pie\n            .selectAll().data(this.data.pie).enter().append(\"text\");\n\n        const text1 = text.append('tspan');\n\n        const text2 = text.append('tspan');\n\n        return {\n            pie,\n            innerSlice,\n            topSlice,\n            outerSlice,\n            text,\n            text1,\n            text2\n        }\n    }\n\n    // @param x center x\n    // @param y center y\n    // @param rx radius x\n    // @param ry radius y\n    // @param h height x\n    // @param ir inner radius x\n    drawPie(x: number, y: number, rx: number, ry: number, h: number, ir: number) {\n        this.references.pie.attr(\"transform\", \"translate(\" + x + \",\" + y + \")\");\n\n        this.references.innerSlice\n            .style(\"fill\", (d) => d3.hsl(this.getColor(d.index)).darker().toString())\n            .attr(\"d\", (d) => this.pieInner(this.data.pieZero.filter(obj=>obj.index===d.index)[0], rx+0.5, ry+0.5, 0, ir));\n\n        this.references.topSlice\n            .style(\"fill\", (d) => this.getColor(d.index))\n            .attr(\"d\", (d) => this.pieTop(this.data.pieZero.filter(obj=>obj.index===d.index)[0], rx, ry, ir));\n\n        this.references.outerSlice\n            .style(\"fill\", (d) => d3.hsl(this.getColor(d.index)).darker().toString())\n            .attr(\"d\", (d) => this.pieOuter(this.data.pieZero.filter(obj=>obj.index===d.index)[0], rx-.5, ry-.5, 0));\n\n        this.references.text\n            .attr(\"x\",'0')\n            .attr(\"y\",'0')\n            .attr(\"text-anchor\", \"middle\")\n            .style('fill', 'white')\n            .style('opacity', 0);\n\n        this.references.text1\n            .attr(\"dy\",0)\n            .style(\"font-weight\", 700)\n            .text(d => d.data.title.toUpperCase());\n        this.references.text2.attr(\"dy\",'1.2em').text(d => ((d.data.value / this.data.totalValue) * 100).toFixed(2)+'%')\n    }\n\n    pieTransition(rx: number, ry: number, h: number, ir: number, initData: d3.PieArcDatum<ArcData>[], targetData: d3.PieArcDatum<ArcData>[]) {\n        const thisClass = this;\n        const duration = 2000;\n        const raiseDuration = 2000;\n\n        const iRaise = d3.interpolate(0, h);\n\n        function arcTweenInner(d: d3.PieArcDatum<ArcData>) {\n            return (t: number) => thisClass.pieInner(d, rx+0.5, ry+0.5, iRaise(t), ir);\n        }\n        function arcTweenTop(d: d3.PieArcDatum<ArcData>) {\n            const i = d3.interpolate(initData.filter(obj => obj.index === d.index)[0], targetData.filter(obj => obj.index === d.index)[0]);\n            return (t: number) => thisClass.pieTop(i(t), rx, ry, ir);\n        }\n        function arcTweenOuter(d: d3.PieArcDatum<ArcData>) {\n            return (t: number) => thisClass.pieOuter(d, rx-.5, ry-.5, iRaise(t));\n        }\n        function textTweenX(d: d3.PieArcDatum<ArcData>) {\n            const i = d3.interpolate(initData.filter(obj => obj.index === d.index)[0], targetData.filter(obj => obj.index === d.index)[0]);\n            return (t: number) => `${0.5*(1+ir)*rx*Math.cos(0.5*(i(t).startAngle+i(t).endAngle))}`;\n        }\n        function textTweenY(d: d3.PieArcDatum<ArcData>) {\n            const i = d3.interpolate(initData.filter(obj => obj.index === d.index)[0], targetData.filter(obj => obj.index === d.index)[0]);\n            return (t: number) => `${0.5*(1+ir)*ry*Math.sin(0.5*(i(t).startAngle+i(t).endAngle))}`;\n        }\n\n\n        this.references.innerSlice\n            .transition()\n            .duration(raiseDuration)\n            .delay(duration)\n            .attrTween('d', arcTweenInner);\n        this.references.topSlice\n            .transition()\n            .duration(duration)\n            .attrTween('d', arcTweenTop);\n        this.references.outerSlice\n            .transition()\n            .duration(raiseDuration)\n            .delay(duration)\n            .attrTween('d', arcTweenOuter);\n\n        this.references.text.style(\"opacity\", 0);\n        this.references.text\n            .transition()\n            .duration(duration)\n            .attrTween('x', textTweenX)\n            .attrTween('y', textTweenY)\n            .style(\"opacity\", 1);\n        this.references.text1.transition()\n            .duration(duration)\n            .attrTween('x', textTweenX);\n        this.references.text2.transition()\n            .duration(duration)\n            .attrTween('x', textTweenX);\n    }\n\n    pieTop(d: d3.PieArcDatum<ArcData>, rx: number, ry: number, ir: number){\n        if(d.endAngle - d.startAngle === 0 ) return \"M 0 0\";\n        const sx = rx*Math.cos(d.startAngle),\n            sy = ry*Math.sin(d.startAngle),\n            ex = rx*Math.cos(d.endAngle),\n            ey = ry*Math.sin(d.endAngle);\n\n        const ret =[];\n        ret.push(\"M\",sx,sy,\"A\",rx,ry,\"0\",(d.endAngle-d.startAngle > Math.PI? 1: 0),\"1\",ex,ey,\"L\",ir*ex,ir*ey);\n        ret.push(\"A\",ir*rx,ir*ry,\"0\",(d.endAngle-d.startAngle > Math.PI? 1: 0), \"0\",ir*sx,ir*sy,\"z\");\n        return ret.join(\" \");\n    }\n\n    pieOuter(d: d3.PieArcDatum<ArcData>, rx: number, ry: number, h: number){\n        const _startAngle = (d.startAngle < 2 * Math.PI ? 2 * Math.PI : d.startAngle);\n        const _endAngle = (d.endAngle < 2 *  Math.PI ? 2 * Math.PI : d.endAngle);\n\n        const sx = rx*Math.cos(_startAngle),\n            sy = ry*Math.sin(_startAngle),\n            ex = rx*Math.cos(_endAngle),\n            ey = ry*Math.sin(_endAngle);\n\n        const ret =[];\n        ret.push(\"M\",sx,h+sy,\"A\",rx,ry,\"0 0 1\",ex,h+ey,\"L\",ex,ey,\"A\",rx,ry,\"0 0 0\",sx,sy,\"z\");\n        return ret.join(\" \");\n    }\n\n    pieInner(d: d3.PieArcDatum<ArcData>, rx: number, ry: number, h: number, ir: number){\n        const startAngle = (d.startAngle < Math.PI ? Math.PI : d.startAngle);\n        const endAngle = (d.endAngle < Math.PI ? Math.PI : d.endAngle);\n\n        const sx = ir*rx*Math.cos(startAngle),\n            sy = ir*ry*Math.sin(startAngle),\n            ex = ir*rx*Math.cos(endAngle),\n            ey = ir*ry*Math.sin(endAngle);\n\n        const ret =[];\n        ret.push(\"M\",sx, sy,\"A\",ir*rx,ir*ry,\"0 0 1\",ex,ey, \"L\",ex,h+ey,\"A\",ir*rx, ir*ry,\"0 0 0\",sx,h+sy,\"z\");\n        return ret.join(\" \");\n    }\n\n    styleSvg() {\n        this.svg\n            .attr(\"width\", this.params.width)\n            .attr(\"height\", this.params.height);\n    }\n\n    animate() {\n        if (this.hasAnimated) return;\n        this.pieTransition(this.params.rx, this.params.ry, this.params.h, this.params.ir, this.data.pieZero, this.data.pie);\n        this.hasAnimated = true;\n    }\n\n    main() {\n        this.styleSvg();\n        this.drawPie(this.params.width / 2, this.params.height / 2, this.params.rx, this.params.ry, this.params.h, this.params.ir);\n    }\n}\n\nexport default PieChartD3","import {Theme} from \"@material-ui/core\";\nimport {CSSProperties} from \"react\";\n\nexport const bigNumber = (theme: Theme): CSSProperties => ({\n    width: '100%',\n    fontFamily: 'Open Sans,sans-serif',\n    fontSize: '6rem',\n    fontWeight: 800,\n    margin: 0,\n    lineHeight: 1,\n    [theme.breakpoints.down('sm')]: {\n        fontSize: '3rem',\n    }\n});\n\nexport const header = (theme: Theme): CSSProperties => ({\n    textAlign: 'start',\n    width: '70%',\n    fontFamily: 'Open Sans,sans-serif',\n    textTransform: 'uppercase',\n    fontSize: '2rem',\n    fontWeight: 800,\n    margin: theme.spacing(0, 0),\n    lineHeight: 1,\n    [theme.breakpoints.down('sm')]: {\n        fontSize: '1rem',\n    }\n});\n\nexport const content = (theme: Theme): CSSProperties => ({\n    color: 'grey',\n    textAlign: 'start',\n    width: '70%',\n    fontFamily: 'Open Sans,sans-serif',\n    fontSize: '1rem',\n    fontWeight: 800,\n    margin: theme.spacing(2, 0),\n    [theme.breakpoints.down('sm')]: {\n        fontSize: '0.875rem',\n    }\n});\n\nexport const bigNumberTitle = (theme: Theme): CSSProperties => ({\n    width: '100%',\n    fontFamily: 'Open Sans,sans-serif',\n    fontSize: '1rem',\n    fontWeight: 800,\n    margin: 0,\n    [theme.breakpoints.down('sm')]: {\n        fontSize: '0.875rem',\n    }\n});","import React from \"react\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport {header} from \"../styles/analytics-styles\";\n\nconst useStyles = makeStyles(theme => ({\n    title: {\n        ...header(theme)\n    }\n}));\n\ninterface TitleProps {\n    value: string\n}\n\nconst Title: React.FC<TitleProps> = ({value}) => {\n    const classes = useStyles();\n\n    return (\n        <>\n        {\n            value.split(' ').map((str, i) =>\n                <h2 className={classes.title} key={i}>\n                    { str }\n                </h2>\n            )\n        }\n        </>\n    )\n};\n\nexport default Title","import React from \"react\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport {content} from \"../styles/analytics-styles\";\n\nconst useStyles = makeStyles(theme => ({\n    content: {\n        ...content(theme)\n    }\n}));\n\ninterface ContentProps {\n    value: string\n}\n\nconst Content: React.FC<ContentProps> = ({value}) => {\n    const classes = useStyles();\n\n    return (\n        <p className={classes.content}>\n            { value }\n        </p>\n    )\n};\n\nexport default Content","import React, {useEffect, useRef, useState} from \"react\";\nimport PieChartD3, {PieChartData} from \"../../d3-charts/pie-chart-d3\";\nimport useLazyLoad from \"../../tools/use-lazy-load\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport Title from \"./utilitis/title\";\nimport Content from \"./utilitis/content\";\n\nconst useStyles = makeStyles(theme => ({\n\n}));\n\ninterface DocumentsByCategoryBarChartProps {\n    isLoaded: boolean,\n    data: PieChartData,\n    animate: boolean\n    width?: number\n}\n\nconst id = 'analytics-documents-count-by-category-pie-chart';\n\nconst DocumentsByCategoryPieChart: React.FC<DocumentsByCategoryBarChartProps> = ({isLoaded, data, animate, width}) => {\n    const ref = useRef<HTMLDivElement>(null);\n    const [pieChart, setPieChart] = useState<null | PieChartD3>(null);\n\n    useEffect(() => {\n        if (isLoaded && data && width && pieChart === null) {\n            const barChart = new PieChartD3(\n                id,\n                data,\n                width\n            );\n            barChart.main();\n            setPieChart(barChart);\n        }\n    }, [isLoaded, data, width]);\n\n    useEffect(() => {\n        if (pieChart && animate) {\n            pieChart.animate();\n        }\n    }, [pieChart, animate]);\n\n    return (\n        <>\n            <Title value={'News archived by category'} />\n            <Content value={`Overall I'd say the news are pretty well balanced.`}/>\n            <div id={id} ref={ref}/>\n        </>\n    )\n};\n\nexport default DocumentsByCategoryPieChart","import * as d3 from \"d3\";\n\nexport interface HeatMapData {\n    count: number[],\n    time: number[]\n}\n\nclass HeatMapD3 {\n\n    readonly getColor = (index: number) => {\n        const colors = ['#FFF3E0', '#FFE0B2', '#FFB74D', '#FB8C00', '#E65100'];\n        return colors[index > colors.length - 1 ? 0 : index]\n    };\n    readonly dayOfWeekStrings = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n    readonly monthStrings = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n    readonly targetRectSize = 70;\n    readonly rectPadding = 0.1;\n    id: string;\n    params: {\n        width: number,\n        height: number,\n        m: {t: number, r: number, b: number, l: number},\n        chart: {\n            width: number,\n            height: number,\n            x: number,\n            y: number\n        };\n    };\n    svg: d3.Selection<SVGSVGElement, unknown, HTMLElement, any>;\n    references: {\n        xAxis: d3.Selection<SVGGElement, unknown, HTMLElement, any>,\n        yAxis: d3.Selection<SVGGElement, unknown, HTMLElement, any>,\n        rects: d3.Selection<SVGRectElement, {count: number, time: number}, SVGGElement, any>,\n        tooltipBackground: d3.Selection<SVGRectElement, unknown, HTMLElement, any>,\n        tooltip: d3.Selection<SVGTextElement, unknown, HTMLElement, any>,\n        tooltipText1: d3.Selection<SVGTextElement, unknown, HTMLElement, any>,\n        tooltipText2: d3.Selection<SVGTextElement, unknown, HTMLElement, any>,\n    };\n    data: {\n        x: number[], // # of week\n        y: number[], // # of day of week\n        xScaleDomain: string[],\n        xScaleGuide: number[],\n        yScaleDomain: string[],\n        data: Array<{\n            count: number,\n            time: number\n        }>,\n        maxCount: number\n    };\n    scales: {\n        x: d3.ScaleBand<string>,\n        y: d3.ScaleBand<string>,\n        color: d3.ScaleQuantize<number>\n    };\n    axis: {\n        x: d3.Axis<string>,\n        y: d3.Axis<string>,\n    };\n\n    constructor(id: string, data: HeatMapData, width: number) {\n        this.id = id;\n        this.data = this.getData(data);\n        this.params = this.getParams(width);\n        this.svg = d3.select(`#${id}`).append(\"svg\");\n        this.references = this.createReferences();\n        this.scales = this.getScales();\n        this.axis = this.getAxis();\n    }\n\n    getParams(width: number) {\n        const m = {t: 50, r: 20, b: 10, l: 50};\n\n        const xBands = this.data.xScaleDomain.length;\n        const maxRectSize = Math.floor((width - m.l - m.r) / xBands);\n        const rectSize = Math.min(maxRectSize, this.targetRectSize);\n\n        const chart = {\n            width: this.data.xScaleDomain.length * rectSize,\n            height: 7 * rectSize,\n            x: m.l,\n            y: m.t\n        };\n        const _width = chart.width + m.l + m.r;\n        const height = chart.height + m.t + m.b;\n\n        return {\n            width: _width,\n            height,\n            m,\n            chart\n        }\n    };\n\n    getScales() {\n        return {\n            x: d3.scaleBand()\n                .domain(this.data.xScaleDomain)\n                .range([0, this.params.chart.width])\n                .padding(this.rectPadding),\n            y: d3.scaleBand()\n                .domain(this.data.yScaleDomain)\n                .range([0, this.params.chart.height])\n                .padding(this.rectPadding),\n            color: d3.scaleQuantize()\n                .domain([0, this.data.maxCount])\n                .range([0, 1, 2, 3, 4])\n        }\n    }\n\n    getAxis() {\n        return {\n            x: d3.axisTop(this.scales.x)\n                .tickFormat((d, i) => {\n                    if (i === 0) {\n                        return this.monthStrings[(new Date(this.data.xScaleGuide[i]).getUTCMonth())]\n                    } else {\n                        const thisOne = this.monthStrings[(new Date(this.data.xScaleGuide[i]).getUTCMonth())];\n                        const lastOne = this.monthStrings[(new Date(this.data.xScaleGuide[i-1]).getUTCMonth())];\n                        return thisOne === lastOne ? '' : thisOne\n                    }\n                })\n                .tickSize(0)\n                .tickPadding(5),\n            y: d3.axisLeft(this.scales.y)\n                .tickFormat((d) => this.dayOfWeekStrings[parseInt(d)])\n                .tickValues(['1', '3', '5'])\n                .tickSize(0)\n                .tickPadding(5)\n        }\n    }\n\n    getData(data: HeatMapData) {\n        // compensate the data array with empty data first, making the first day of the data array is Sunday.\n        const _data = data.time.map((_, i) => ({\n            count: data.count[i],\n            time: _\n        }));\n        const aDay = 1000 * 60 * 60 * 24;\n        const firstActualData = new Date(_data[0].time);\n        let compensation = firstActualData.getUTCDay();\n        let time = _data[0].time;\n        while (compensation > 0) {\n            _data.unshift({\n                count: 0,\n                time\n            });\n            compensation--;\n            time -= aDay\n        }\n\n        //\n        const getY = (time: number[]) => {\n            // day of week\n            const firstDataDay = new Date(time[0]).getUTCDay();\n            return time.map(_ => (new Date(_).getUTCDay() - firstDataDay) % 7)\n        };\n\n        const getX = (time: number[]) => {\n            return time.map((_, i) => Math.floor(i / 7))\n        };\n\n        const timeArray = _data.map(_=>_.time);\n        const computedX = getX(timeArray);\n        const xScaleDomain = [];\n        const xScaleGuide = [];\n        for (let i=0; i<=computedX[computedX.length - 1]; i++) {\n            xScaleDomain.push(i.toString());\n            xScaleGuide.push(_data[i*7].time);\n        }\n        //\n        const computedY = getY(timeArray);\n        const yScaleDomain = [];\n        for (let i=0; i<7; i++) {\n            yScaleDomain.push(i.toString())\n        }\n        //\n        const maxCount = Math.max.apply(Math, _data.map(_=>_.count));\n        return {\n            x: computedX,\n            y: computedY,\n            xScaleDomain,\n            xScaleGuide,\n            yScaleDomain,\n            data: _data,\n            maxCount\n        }\n    }\n\n    createReferences() {\n        const xAxis = this.svg.append('g');\n        const yAxis = this.svg.append('g');\n        const rects = this.svg.append('g')\n                .selectAll('rect').data(this.data.data)\n                .enter().append('rect');\n        // tooltips has to be here to be rendered on top\n        const tooltipGroup = this.svg.append('g');\n        const tooltipBackground = tooltipGroup.append('rect');\n        const tooltip = tooltipGroup.append('text');\n\n        return {\n            xAxis,\n            yAxis,\n            rects,\n            tooltipBackground,\n            tooltip,\n            tooltipText1: tooltip.append('tspan'),\n            tooltipText2: tooltip.append('tspan'),\n        }\n    }\n\n    styleSvg() {\n        this.svg\n            .attr(\"width\", this.params.width)\n            .attr(\"height\", this.params.height);\n    }\n\n    styleAxisX() {\n        this.axis.x(this.references.xAxis);\n\n        this.references.xAxis.selectAll('.domain').remove();\n\n        this.references.xAxis\n            .style('transform', `translate(${this.params.chart.x}px, ${this.params.chart.y}px)`)\n            .style('font-size', '0.875rem')\n            .style('font-weight', '700');\n\n        this.references.xAxis.selectAll('text')\n            .style('fill', 'grey');\n\n    }\n\n    styleAxisY() {\n        this.axis.y(this.references.yAxis);\n\n        this.references.yAxis.selectAll('.domain').remove();\n\n        this.references.yAxis\n            .style('transform', `translate(${this.params.chart.x}px, ${this.params.chart.y}px)`)\n            .style('font-size', '0.875rem')\n            .style('font-weight', '700');\n\n        this.references.yAxis.selectAll('text')\n            .style('fill', 'grey');\n            // .attr('text-anchor', 'start')\n    }\n\n    styleRects() {\n        this.references.rects\n            .style('transform', `translate(${this.params.chart.x}px, ${this.params.chart.y}px)`)\n            .attr('width', this.scales.x.bandwidth())\n            .attr('height', this.scales.y.bandwidth())\n            .attr('x', (d, i) => this.scales.x(this.data.x[i].toString()) || 0)\n            .attr('y', (d, i) => this.scales.y(this.data.y[i].toString()) || 0);\n    }\n\n    styleTooltip() {\n        this.references.tooltip\n            .style('transform', `translate(${this.params.chart.x}px, ${this.params.chart.y}px)`)\n            .attr('text-anchor', 'middle')\n            .attr('alignment-baseline', 'middle');\n\n        this.references.tooltipText1\n            .style('font-weight', 700)\n            .style('fill', 'white');\n\n        this.references.tooltipText2\n            .style('fill', 'white');\n\n        this.references.tooltipBackground\n            .style('transform', `translate(${this.params.chart.x}px, ${this.params.chart.y}px)`)\n            .style('fill', '#000')\n            .style('opacity', 0.8)\n            .attr('rx', '5')\n            .attr('ry', '5');\n    }\n\n    addMouseEventToRects() {\n        const thisClass = this;\n        // tooltip padding\n        const px = 1.2;\n        const py = 2.5;\n\n        this.references.rects\n            .on('mouseover', function(this: SVGRectElement, d) {\n                const x = parseInt(this.getAttribute(\"x\") || '0');\n                const y = parseInt(this.getAttribute(\"y\") || '0');\n                const width = parseInt(this.getAttribute(\"width\") || '0');\n                const height = parseInt(this.getAttribute(\"height\") || '0');\n\n                // append texts to tspans first\n                thisClass.references.tooltipText1.text(`${d.count} news archived on `);\n\n                const date = new Date(d.time);\n                thisClass.references.tooltipText2.text(`${thisClass.monthStrings[date.getUTCMonth()]} ${date.getUTCDate()}, ${date.getUTCFullYear()}`)\n\n                // get dimension of text\n                // tooltip has text-anchor: middle\n                const bBox = thisClass.references.tooltip.node()?.getBBox();\n                const textWidth = bBox?.width || 0;\n                const textHeight = bBox?.height || 0;\n                const tooltipWidth = textWidth * px;\n                const tooltipHeight = textHeight * py;\n                let toolTipX = x + 0.5 * width;\n                let toolTipY = y - 0.5 * tooltipHeight;\n                const borderX0 = -thisClass.params.m.l;\n                const borderX1 = thisClass.params.width - thisClass.params.m.l;\n                const borderY0 = -thisClass.params.m.t;\n                const borderY1 = thisClass.params.height - thisClass.params.m.t;\n                // handle if x of tooltip is out of border\n                if (toolTipX - 0.5 * tooltipWidth < borderX0) {\n                    toolTipX = borderX0 + 0.5 * tooltipWidth\n                } else if (toolTipX + 0.5 * tooltipWidth > borderX1) {\n                    toolTipX = borderX1 - 0.5 * tooltipWidth;\n                }\n                // handle if y of tooltip is out of border\n                if (toolTipY - tooltipHeight < borderY0) {\n                    toolTipY = borderY0 + tooltipHeight\n                } else if (toolTipY + tooltipHeight > borderY1) {\n                    toolTipY = borderY1 - 0.5 * tooltipHeight;\n                }\n                thisClass.references.tooltip\n                    .attr(\"x\", toolTipX)\n                    .attr(\"y\", toolTipY);\n\n                // move tooltipBackground\n                thisClass.references.tooltipBackground\n                    .attr(\"x\", toolTipX - 0.5 * tooltipWidth)\n                    .attr(\"y\", toolTipY - 0.4 * textHeight - 0.5 * tooltipHeight)\n                    .attr(\"width\", tooltipWidth)\n                    .attr(\"height\", tooltipHeight);\n            })\n            .on('mouseleave', function(this: SVGRectElement, d){\n                thisClass.references.tooltip\n                    .attr(\"x\", -1000)\n                    .attr(\"y\", -1000);\n                thisClass.references.tooltipBackground\n                    .attr(\"x\", -1000)\n                    .attr(\"y\", -1000);\n            })\n    }\n\n    prepareForAnimation() {\n        this.references.rects\n            .style('fill', this.getColor(3))\n    }\n\n    animate() {\n        this.references.rects.transition()\n            .style('fill', \"rgba(255, 255, 255, 0)\")\n            .duration(500);\n\n        this.references.rects.transition()\n            .style('fill', (d) => this.getColor(this.scales.color(d.count)))\n            .delay((d) => 500 + this.scales.color(d.count) * 1000)\n            .duration(800)\n    }\n\n    main() {\n        this.styleSvg();\n        this.styleAxisX();\n        this.styleAxisY();\n        this.styleRects();\n        this.styleTooltip();\n        this.addMouseEventToRects();\n        this.prepareForAnimation();\n    }\n}\n\nexport default HeatMapD3\n","import React, {useEffect, useRef, useState} from \"react\";\nimport useLazyLoad from \"../../tools/use-lazy-load\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport HeatMapD3, {HeatMapData} from \"../../d3-charts/heat-map-d3\";\nimport Title from \"./utilitis/title\";\nimport Content from \"./utilitis/content\";\n\nconst useStyles = makeStyles(theme => ({\n\n}));\n\ninterface DocumentsHeatMapProps {\n    isLoaded: Boolean,\n    data: HeatMapData,\n    width?: number\n}\n\nconst DocumentsHeatMap: React.FC<DocumentsHeatMapProps> = ({isLoaded, data, width}) => {\n    const ref = useRef<HTMLDivElement>(null);\n    const isVisible = useLazyLoad(ref, 0.5);\n    const [heatMap, setHeatMap] = useState<null | HeatMapD3>(null);\n\n    useEffect(() => {\n        if (isLoaded && data && width && heatMap === null) {\n            const heatMap = new HeatMapD3(\n                'analytics-documents-heat-map',\n                data,\n                width\n            );\n            heatMap.main();\n            setHeatMap(heatMap);\n        }\n    }, [isLoaded, data, width]);\n\n    useEffect(() => {\n        if (heatMap && isVisible) {\n            heatMap.animate();\n        }\n    }, [heatMap, isVisible]);\n\n    return (\n        <>\n            <Title value={'News archived each day'} />\n            <Content value={`Glad to see that people enjoyed their weekends.`}/>\n            <div id='analytics-documents-heat-map' ref={ref}/>\n        </>\n    )\n};\n\nexport default DocumentsHeatMap","import React, {useState} from \"react\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport {useCountUp} from \"react-countup\";\nimport {bigNumber, bigNumberTitle} from \"./styles/analytics-styles\";\n\nconst monthStrings = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        textAlign: 'center',\n        width: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        color: '#F2F2F2'\n    },\n    section: {\n        margin: theme.spacing(5, 0),\n        [theme.breakpoints.down('sm')]: {\n            margin: theme.spacing(2, 0)\n        }\n    },\n    title: {\n        ...bigNumberTitle(theme)\n    },\n    number: {\n        ...bigNumber(theme)\n    }\n}));\n\ninterface DocumentsTextSummaryProps {\n    totalDocuments: number,\n    earliestDocumentDate: number,\n    latestDocumentDate: number\n}\n\nconst DocumentsTextSummary = React.forwardRef<HTMLDivElement, DocumentsTextSummaryProps>(({totalDocuments, earliestDocumentDate, latestDocumentDate}, forwardedRef) => {\n\n    const classes = useStyles();\n    const [fullHeight, setFullHeight] = useState(window.innerHeight - 100);\n    const total = useCountUp({start: totalDocuments*0.9, end: totalDocuments, duration: 5});\n    const earliest = useCountUp({start: earliestDocumentDate*0.9, end: earliestDocumentDate, duration: 5});\n    const latest = useCountUp({start: latestDocumentDate*0.9, end: latestDocumentDate, duration: 5});\n\n    const title = (value: string) => (\n        <h2 className={classes.title}>{value}</h2>\n    );\n    const date = (number: number) => {\n        const dateObj = new Date(number);\n        return (\n            <p className={classes.number}>{dateObj.getUTCDate()} {monthStrings[dateObj.getUTCMonth()]}, {dateObj.getUTCFullYear()}</p>\n        )\n    };\n\n    return (\n        <>\n            <div className={classes.root} style={{minHeight: `${fullHeight}px`}}>\n                <div className={classes.section}>\n                    { title('Total news articles archived') }\n                    <p className={classes.number}>{total.countUp}</p>\n                </div>\n                <div className={classes.section}>\n                    { title('First news article archived') }\n                    { date(+earliest.countUp) }\n                </div>\n                <div className={classes.section}>\n                    { title('Most recent news article archived') }\n                    { date(+latest.countUp) }\n                </div>\n                <div ref={forwardedRef}> </div>\n            </div>\n        </>\n    )\n});\n\nexport default DocumentsTextSummary","import {useState, CSSProperties, useEffect, RefObject} from \"react\";\nimport useDebounce from \"./use-debounce\";\n\n\nenum Style {\n    FIXED = 'FIXED',\n    RELATIVE = 'RELATIVE'\n}\n\nconst getStyle = (styleName: Style) => {\n    const style = {\n        FIXED: {\n            position: \"fixed\",\n            top: 0,\n            left: 0,\n            width: \"100%\"\n        } as CSSProperties,\n        RELATIVE: {\n            position: \"relative\",\n            width: \"100%\"\n        } as CSSProperties,\n    };\n\n    return {...style[styleName]};\n};\n\n// set sticky when scroll passed ref element's bottom\nfunction useSticky(anchorRef: RefObject<HTMLElement>) {\n    const [style, setStyle] = useState(Style.RELATIVE);\n    const shouldBeExecuted = useDebounce(10);\n\n    function scrollHandler() {\n        const scrolled = window.scrollY;\n        if (scrolled === 0 && style !== Style.RELATIVE) {\n            // don't debounce when fast scrolling to top\n            setStyle(Style.RELATIVE);\n            return;\n        }\n\n        if (!anchorRef.current) return;\n        const fixedStartHeight = anchorRef.current.offsetTop + anchorRef.current.offsetHeight;\n\n        if (!shouldBeExecuted()) return;\n        if (scrolled >= fixedStartHeight && style !== Style.FIXED) {\n            setStyle(Style.FIXED);\n        } else if (scrolled < fixedStartHeight && style !== Style.RELATIVE) {\n            setStyle(Style.RELATIVE);\n        }\n    }\n\n    useEffect(() => {\n        document.addEventListener('scroll', scrollHandler);\n\n        return () => {\n            document.removeEventListener('scroll', scrollHandler);\n        }\n    }, [style, anchorRef]);\n\n    return {\n        style: getStyle(style),\n        isFixed: style === Style.FIXED\n    };\n}\n\nexport default useSticky;","import * as d3 from \"d3\";\nimport d3Cloud from \"d3-cloud\";\n\nexport type WordCloudData = Array<{\n    count: number,\n    word: string\n}>\n\nclass WordCloudD3 {\n    colors = ['#003f5c', '#374c80', '#7a5195' ,'#bc5090' ,'#ef5675' ,'#ff764a' ,'#ffa600'];\n    id: string;\n    data: {\n        data: WordCloudData,\n        words: string[],\n        counts: number[],\n        maxCount: number\n    };\n    params: {\n        width: number,\n        height: number\n    };\n    scale: d3.ScaleLinear<number, number>;\n\n    constructor(data: WordCloudData, width: number, id: string) {\n        this.id = id;\n        this.data = this.getData(data);\n        this.params = {\n            width,\n            height: width * 0.6\n        };\n        this.scale = this.getScale();\n        this.styleSvg = this.styleSvg.bind(this);\n    }\n\n    getData(data: WordCloudData) {\n        const counts = data.map(obj => obj.count);\n        return {\n            data,\n            words: data.map(obj => obj.word),\n            counts,\n            maxCount: Math.max.apply(Math, counts)\n        }\n    }\n\n    getScale() {\n        return d3.scaleLinear()\n            .domain([0, this.data.maxCount])\n            .range([10, this.params.width >= 1000 ? 100 : this.params.width >= 800 ? 70 : 36]);\n    }\n\n    draw() {\n        d3Cloud<{\n            text: string,\n            size: number\n        }>().size([this.params.width, this.params.height])\n            .timeInterval(20)\n            .words(this.data.data.map((d) => ({\n                text: d.word,\n                size: this.scale(d.count)\n            })))\n            .fontSize((d: any) => d.size)\n            .rotate(function() { return ~~(Math.random() * 2) * 90; })\n            .font(\"Anton\")\n            .on(\"end\", this.styleSvg)\n            .start();\n    }\n\n    styleSvg(words: any) {\n        d3.select(`#${this.id}`).append(\"svg\")\n            .attr(\"width\", this.params.width)\n            .attr(\"height\", this.params.height)\n            .append(\"g\")\n            .attr(\"transform\", \"translate(\" + [this.params.width >> 1, this.params.height >> 1] + \")\")\n            .selectAll(\"text\")\n            .data(words)\n            .enter().append(\"text\")\n            .style(\"font-size\", (d: any) => { return d.size + \"px\"})\n            .style(\"font-family\", \"Anton\")\n            .style(\"fill\", () => this.colors[Math.floor(Math.random() * this.colors.length)])\n            .attr(\"text-anchor\", \"middle\")\n            .attr(\"transform\", function(d: any) {\n                return \"translate(\" + [d.x, d.y] + \")rotate(\" + d.rotate + \")\";\n            })\n            .text(function(d: any) { return d.text; });\n    }\n\n    main() {\n        this.draw();\n    }\n}\n\nexport default WordCloudD3","import React, {useEffect, useRef, useState} from \"react\";\nimport useLazyLoad from \"../../tools/use-lazy-load\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport HeatMapD3, {HeatMapData} from \"../../d3-charts/heat-map-d3\";\nimport Title from \"./utilitis/title\";\nimport Content from \"./utilitis/content\";\nimport WordCloudD3, {WordCloudData} from \"../../d3-charts/word-cloud-d3\";\n\nconst useStyles = makeStyles(theme => ({\n\n}));\n\ninterface WordCloudProps {\n    isLoaded: Boolean,\n    data: WordCloudData,\n    width?: number\n}\n\nconst WordCloud: React.FC<WordCloudProps> = ({isLoaded, data, width}) => {\n    const ref = useRef<HTMLDivElement>(null);\n    const isVisible = useLazyLoad(ref, 0.5);\n    const [wordCloud, setWordCloud] = useState<null | WordCloudD3>(null);\n\n    useEffect(() => {\n        if (isLoaded && data && width && wordCloud === null) {\n            const wordCloud = new WordCloudD3(\n                data,\n                width,\n                'analytics-documents-word-cloud',\n            );\n            wordCloud.main();\n            setWordCloud(wordCloud);\n        }\n    }, [isLoaded, data, width]);\n\n    // useEffect(() => {\n    //     if (heatMap && isVisible) {\n    //         heatMap.animate();\n    //     }\n    // }, [heatMap, isVisible]);\n\n    return (\n        <>\n            <Title value={'Word it out'} />\n            <Content value={`The power of words.`}/>\n            <div id='analytics-documents-word-cloud' ref={ref}/>\n        </>\n    )\n};\n\nexport default WordCloud","import React, {CSSProperties, useEffect, useRef, useState} from \"react\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        position: 'relative',\n        width: '100%',\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'center',\n        // backgroundColor: 'rgba(0,255,0,0.5)'\n    },\n    fixedWrapper: {\n        position: 'relative',\n        overflow: 'hidden',\n        width: '100%',\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'center',\n        willChange: 'transform',\n        // backgroundColor: 'rgba(255,0,0,0.5)'\n    },\n    children: {\n        width: '100%',\n        position: 'absolute',\n        minHeight: 800,\n        willChange: 'transform'\n    },\n    childrenSize: {\n        width: '100%'\n    },\n    placeholder: {\n        position: 'relative',\n    },\n}));\n\ninterface AnimationFixedProps {\n\n}\n\nconst AnimationFixed: React.FC<AnimationFixedProps> = ({children}) => {\n    const classes = useStyles();\n    const containerRef = useRef<HTMLDivElement>(null);\n    const childrenRef = useRef<HTMLDivElement>(null);\n    const placeholderRef = useRef<HTMLDivElement>(null);\n    const fixedWrapperRef = useRef<HTMLDivElement>(null);\n\n    const [dimension, setDimension] = useState({\n        isSet: false,\n        width: '0',\n        height: '0',\n        left: '0'\n    });\n    const [target, setTarget] = useState({\n        isSet: false,\n        start: 0,\n        end: 0\n    });\n    const [isFrozen, setIsFrozen] = useState(false);\n\n    const scrollHandler = () => {\n        if (!fixedWrapperRef.current || !placeholderRef.current || !childrenRef.current) return;\n\n        const isBefore = window.scrollY + window.innerHeight < target.start;\n        const isAfter = window.scrollY > target.end;\n        if (!isBefore && !isAfter) {\n            // const percentage = (window.scrollY - target.start + window.innerHeight) / (target.end - target.start + window.innerHeight); // window.scrollY subtract isBefore and isAfter\n            // childrenRef.current.style.transform = `translateY(${-(0.5 - percentage) * (window.innerHeight - 110)}px)`;\n            const offset = placeholderRef.current.getBoundingClientRect().top;\n            childrenRef.current.style.top = `${offset}px`;\n            fixedWrapperRef.current.style.top = `${offset}px`;\n            if (isFrozen) {\n                setIsFrozen(false);\n            }\n        } else if (isBefore) {\n            if (!isFrozen) return;\n            fixedWrapperRef.current.style.top = `${window.scrollY + placeholderRef.current.getBoundingClientRect().top}px`;\n            setIsFrozen(true);\n        } else if (isAfter) {\n            if (!isFrozen) return;\n            fixedWrapperRef.current.style.top = `${window.scrollY + placeholderRef.current.getBoundingClientRect().bottom}px`;\n            setIsFrozen(true);\n        }\n    };\n\n    useEffect(() => {\n        // use the children dimension to set placeholder's dimension\n        if (!childrenRef.current || dimension.isSet) return;\n        setDimension({\n            isSet: true,\n            width: `${childrenRef.current.getBoundingClientRect().width}px`,\n            height: `${childrenRef.current.getBoundingClientRect().height}px`,\n            left: `${childrenRef.current.getBoundingClientRect().left}px`\n        });\n        scrollHandler();\n    }, [dimension]);\n\n    useEffect(() => {\n        // wait until dimension is set\n        // use placeholder's position to set scrolling targets\n        if (!placeholderRef.current || !dimension.isSet || target.isSet) return;\n        const rect = placeholderRef.current.getBoundingClientRect();\n        setTarget({\n            isSet: true,\n            start: window.scrollY + rect.top,\n            end: window.scrollY + rect.top + rect.height\n        });\n    }, [dimension, target]);\n\n    useEffect(() => {\n        document.addEventListener('scroll', scrollHandler);\n        return () => document.removeEventListener('scroll', scrollHandler);\n    }, [target, isFrozen]);\n\n    const fixedWrapperStyle: CSSProperties = {\n        left: dimension.left,\n        height: dimension.height,\n        width: dimension.width,\n        position: 'fixed',\n    };\n\n    return (\n        <div className={classes.root} ref={containerRef}>\n            <div className={classes.fixedWrapper} ref={fixedWrapperRef} style={dimension.isSet ? fixedWrapperStyle : {}}>\n                <div className={classes.children} ref={childrenRef}>\n                    { children }\n                </div>\n            </div>\n            <div className={classes.placeholder} ref={placeholderRef} style={{width: dimension.width, height: dimension.height}}>\n\n            </div>\n        </div>\n    )\n\n};\n\nexport default AnimationFixed","import * as d3 from \"d3\";\n\nexport interface StackedLineChartD3Data {\n    quantity: number[][],\n    series: string[],\n    order: string[]\n}\n\nclass StackedLineChartD3 {\n    readonly monthStrings = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n    readonly getColor = (index: number) => {\n        const colors = ['#003f5c', '#374c80', '#7a5195' ,'#bc5090' ,'#ef5675' ,'#ff764a' ,'#ffa600'];\n        // const colors = ['#ffa600', '#ff764a', '#ef5675' ,'#bc5090' ,'#7a5195' ,'#374c80' ,'#003f5c'];\n        return colors[index > colors.length - 1 ? 0 : index]\n    };\n    svg: d3.Selection<SVGSVGElement, unknown, HTMLElement, any>;\n    dimensions: {\n        svgWidth: number,\n        svgHeight: number,\n        m: {t: number, r: number, b: number, l: number},\n        chartWidth: number,\n        chartHeight: number\n    };\n    scales: {\n        y: d3.ScaleLinear<number, number>,\n        x: d3.ScaleLinear<number, number>\n    };\n    axes: {\n        y: d3.Axis<number | {valueOf(): number}>,\n        x: d3.Axis<number | {valueOf(): number}>\n    };\n    references: {\n        axisX: d3.Selection<SVGGElement, unknown, HTMLElement, any> | null,\n        axisY: d3.Selection<SVGGElement, unknown, HTMLElement, any> | null,\n        paths: d3.Selection<SVGPathElement, d3.Series<{ [key: string]: number; }, string>, SVGGElement, any> | null,\n    };\n    data: {\n        stackData: {[key: string]: number}[],\n        maxQuantity: number\n    } & StackedLineChartD3Data;\n    shapes: {\n        stack: d3.Stack<number, {[key: string]: number}, string>,\n        getArea: (t: number) => d3.Area<any>\n    };\n\n\n    constructor(id: string, data: StackedLineChartD3Data, width: number, height: number) {\n        this.svg = d3.select(`#${id}`).append(\"svg\");\n        this.data = this.getData(data, true);\n        this.dimensions = this.getDimension(width, height);\n        this.scales = this.getScales();\n        this.axes = this.getAxes();\n        this.references = {\n            axisX: null,\n            axisY: null,\n            paths: null,\n        };\n        this.shapes = this.getShapes();\n    }\n\n    getData(data: StackedLineChartD3Data, convertToPercentage: boolean) {\n        let maxQuantity: number;\n        // percentage convert the daily quantity from absolute value to percentage of the sum of quantity in that day\n        // curve can be more readable in this way\n        if (convertToPercentage) {\n            const percentage = data.quantity.map(arr => {\n                const sum = arr.reduce((a, b) => a + b);\n                return arr.map(num => sum === 0 ? 0 : (num / sum))\n            });\n            data = Object.assign({}, data, {quantity: percentage});\n            maxQuantity = 1;\n        } else {\n            const maxS = data.quantity.map(arr => arr.reduce((a, b) => a + b));\n            maxQuantity = Math.max.apply(Math, maxS);\n        }\n\n        const stackData = data.quantity.map(arr => {\n            const obj: {[key: string]: number} = {};\n            arr.forEach((_, i) => obj[`${i}`] = _);\n            return obj\n        });\n\n        return {\n            ...data,\n            stackData,\n            maxQuantity\n        }\n    }\n\n    getDimension(width: number, height: number) {\n        const m = {t: 10, r: 50, b: 10, l: 50};\n        const chartWidth = width - m.l - m.r;\n        const chartHeight = height - m.t - m.b;\n        return {\n            svgWidth: width,\n            svgHeight: height,\n            m,\n            chartWidth,\n            chartHeight\n        }\n    }\n\n    getScales() {\n        const x = d3.scaleLinear()\n            .domain([0, this.data.series.length - 1])\n            .range([this.dimensions.m.l, this.dimensions.m.l + this.dimensions.chartWidth]);\n        const y = d3.scaleLinear()\n            .domain([0, this.data.maxQuantity])\n            .range([this.dimensions.chartHeight + this.dimensions.m.t, this.dimensions.m.t]);\n        return {\n            x,\n            y\n        }\n    }\n\n    getAxes() {\n        const x = d3.axisBottom(this.scales.x)\n            .tickFormat((d, i) => {\n                const isoString = this.data.series[i];\n                const date = new Date(isoString);\n                return `${date.getDate()} ${this.monthStrings[date.getMonth()]}, ${date.getFullYear()}`\n            });\n        const y = d3.axisLeft(this.scales.y);\n        \n        return {\n            x,\n            y\n        }\n\n    }\n\n    getShapes() {\n        const keys: string[] = this.data.order.map((_,i) => `${i}`);\n        const stack = d3.stack()\n            .keys(keys)\n            .order(d3.stackOrderNone)\n            .offset(d3.stackOffsetNone);\n\n        const getArea = (t: number) => {\n            return d3.area()\n                .x((d, i) => {\n                    return this.scales.x(i)\n                })\n                .y0((d) => {\n                    return this.scales.y(d[0] + (this.data.maxQuantity) * (1 - t))\n                })\n                .y1((d) => this.scales.y(d[1] + (this.data.maxQuantity) * (1 - t)))\n                // .curve(d3.curveNatural)\n        };\n\n        return {\n            stack,\n            getArea\n        }\n    }\n\n    initSvg() {\n        this.svg\n            .attr('width', this.dimensions.svgWidth)\n            .attr('height', this.dimensions.svgHeight)\n    }\n\n    initLineChart() {\n        this.references.paths = this.svg.append('g')\n            .selectAll('path')\n            .data(this.shapes.stack(this.data.stackData))\n            .enter()\n            .append('path')\n            .attr('d',\n                // @ts-ignore\n                // TODO: fix later? need type narrowing\n                (d) => this.shapes.getArea(0)(d)\n            )\n            .attr('fill', (d, i) => this.getColor(i))\n    }\n\n    animate() {\n        if (!this.references.paths) return;\n\n        this.references.paths.transition()\n            .delay((d, i) => i * 200)\n            .duration(1000)\n            // @ts-ignore\n            .attrTween('d', (d) => {\n                return (t: number) => {\n                    // @ts-ignore\n                    return this.shapes.getArea(t)(d)\n                }\n            })\n            .ease(d3.easeExpIn)\n    }\n\n    main() {\n        this.initSvg();\n        this.initLineChart();\n    }\n}\n\nexport default StackedLineChartD3","import React, {useEffect, useRef, useState} from \"react\";\nimport useLazyLoad from \"../../tools/use-lazy-load\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport Title from \"./utilitis/title\";\nimport Content from \"./utilitis/content\";\nimport StackedLineChartD3, {StackedLineChartD3Data} from \"../../d3-charts/stacked-line-chart-d3\";\n\nconst useStyles = makeStyles(theme => ({\n\n}));\n\ninterface DocumentsHeatMapProps {\n    isLoaded: Boolean,\n    data: StackedLineChartD3Data,\n    width: number,\n    height: number\n}\n\nconst id = 'analytics-documents-count-stacked-bar-chart';\n\nconst DocumentsCountStackedLineChart: React.FC<DocumentsHeatMapProps> = ({isLoaded, data, width, height}) => {\n    const ref = useRef<HTMLDivElement>(null);\n    const isVisible = useLazyLoad(ref, 0.5);\n    const [stackedBarChart, setStackedBarChart] = useState<null | StackedLineChartD3>(null);\n\n    useEffect(() => {\n        if (isLoaded && data && width && stackedBarChart === null) {\n            const stackedBarChart = new StackedLineChartD3(\n                id,\n                data,\n                width,\n                height\n            );\n            stackedBarChart.main();\n            setStackedBarChart(stackedBarChart);\n        }\n    }, [isLoaded, data, width]);\n\n    useEffect(() => {\n        if (stackedBarChart && isVisible) {\n            stackedBarChart.animate();\n        }\n    }, [stackedBarChart, isVisible]);\n\n    return (\n        <>\n            <Title value={'News archived each day'} />\n            <Content value={`Stacked bar chart grouped by category`}/>\n            <div id={id} ref={ref}/>\n        </>\n    )\n};\n\nexport default DocumentsCountStackedLineChart","import React, {useEffect, useRef, useState} from \"react\";\nimport useGetAnalytics, {AnalyticsPageStatus} from \"./utilitis/use-get-analytics\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport {CircularProgress, Typography} from \"@material-ui/core\";\nimport SectionWrapper from \"./utilitis/section-wrapper\";\nimport Box from \"@material-ui/core/Box\";\nimport DocumentsByCategoryBarChart from \"./documents-by-category-bar-chart\";\nimport DocumentsHeatMap from \"./documents-heat-map\";\nimport DocumentsTextSummary from \"./documents-text-summary\";\nimport Fade from \"@material-ui/core/Fade\";\nimport AnimationSlideIn, {AnimationSlideInDirection} from \"./utilitis/animation-slide-in\";\nimport WordCloud from \"./documents-word-cloud\";\nimport AnimationFixed from \"./utilitis/animation-fixed\";\nimport DocumentsCountStackedLineChart from \"./documents-count-stacked-line-chart\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        overflowX: 'hidden',\n        width: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'flex-start',\n        paddingBottom: '200px',\n        position: 'relative',\n        [theme.breakpoints.down('sm')]: {\n            paddingBottom: '250px',\n        }\n    },\n    widthWrapper: {\n        width: '1000px',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'flex-start',\n        [theme.breakpoints.down('sm')]: {\n            width: '100%'\n        }\n    },\n}));\n\ninterface AnalyticsProps {\n\n}\n\nconst Analytics: React.FC<AnalyticsProps> = () => {\n    const classes = useStyles();\n    const wrapperRef = useRef<HTMLDivElement>(null);\n    const {\n        status,\n        summaryStatisticsData\n    } = useGetAnalytics();\n\n    const bgColorChangeRef = useRef<HTMLDivElement>(null);\n    const [bgBlack, setBgBlack] = useState(false);\n    const changeBgColor = () => {\n        if (!bgColorChangeRef.current) return;\n        const target = bgColorChangeRef.current.getBoundingClientRect().top - 100;\n        if (target <= 0 && bgBlack) {\n            setBgBlack(false);\n            document.body.style.backgroundColor = '';\n        } else if (target > 0 && !bgBlack) {\n            setBgBlack(true);\n            document.body.style.backgroundColor = 'black'\n        }\n    };\n    useEffect(() => {\n        changeBgColor();\n        document.addEventListener('scroll', changeBgColor);\n        return () => {\n            document.removeEventListener('scroll', changeBgColor);\n        }\n    }, [status, bgBlack]);\n\n    useEffect(() => {\n        return () => {\n            document.body.style.backgroundColor = ''\n        };\n    }, []);\n\n    const isLoaded = status === AnalyticsPageStatus.loaded;\n    const width = wrapperRef?.current?.getBoundingClientRect().width;\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.widthWrapper} ref={wrapperRef}>\n                {\n                    status === AnalyticsPageStatus.loading &&\n                    <SectionWrapper>\n                        <CircularProgress color={\"secondary\"}/>\n                    </SectionWrapper>\n                }\n                {\n                    status === AnalyticsPageStatus.loaded &&\n                    summaryStatisticsData &&\n                    <>\n\n                        <DocumentsTextSummary\n                            totalDocuments={summaryStatisticsData.totalDocuments}\n                            earliestDocumentDate={summaryStatisticsData.earliestDocumentDate}\n                            latestDocumentDate={summaryStatisticsData.latestDocumentDate}\n                            ref={bgColorChangeRef}\n                        />\n\n                        <Fade in={!bgBlack} timeout={2000}>\n                            <SectionWrapper>\n                                <DocumentsByCategoryBarChart\n                                    isLoaded={isLoaded}\n                                    data={summaryStatisticsData.documentsCountByCategory.map(obj => ({\n                                        title: obj.category,\n                                        value: obj.count\n                                    }))}\n                                    animate={!bgBlack}\n                                    width={width}/>\n                            </SectionWrapper>\n                        </Fade>\n                        <AnimationSlideIn direction={AnimationSlideInDirection.left}>\n                            <SectionWrapper>\n                                <DocumentsHeatMap isLoaded={isLoaded} data={summaryStatisticsData.documentsCountByDay} width={width}/>\n                            </SectionWrapper>\n                        </AnimationSlideIn>\n                        <AnimationSlideIn direction={AnimationSlideInDirection.right}>\n                            <SectionWrapper>\n                                <DocumentsCountStackedLineChart\n                                    isLoaded={isLoaded}\n                                    data={{\n                                        quantity: summaryStatisticsData.documentsCountByDayAndCategory.documentCount,\n                                        series: summaryStatisticsData.documentsCountByDayAndCategory.series,\n                                        order: summaryStatisticsData.documentsCountByDayAndCategory.category\n                                    }}\n                                    width={width || 100}\n                                    height={600}\n                                />\n                            </SectionWrapper>\n                        </AnimationSlideIn>\n                        <AnimationFixed>\n                            <SectionWrapper>\n                                <WordCloud isLoaded={isLoaded} data={summaryStatisticsData.wordCloud} width={width}/>\n                            </SectionWrapper>\n                        </AnimationFixed>\n                        {/*<div style={{width: 100, height: 3000, backgroundColor: 'rgba(255,0,0,0.5)'}}> </div>*/}\n                    </>\n                }\n                {\n                    status === AnalyticsPageStatus.error &&\n                    <Typography variant={'body2'} component={'h1'}>\n                        <Box fontWeight={700}>Server error, please try again later</Box>\n                    </Typography>\n                }\n            </div>\n        </div>\n    )\n};\n\nexport default Analytics","import React, {RefObject, useRef} from \"react\";\nimport useSticky from \"../../tools/use-sticky\";\n\ninterface StickyComponentProps {\n    anchorRef: RefObject<HTMLDivElement>,\n    zIndex?: number,\n}\n\nconst StickyComponent: React.FC<StickyComponentProps> = (props) => {\n    const {\n        style,\n        isFixed\n    } = useSticky(props.anchorRef);\n\n    const elementRef = useRef<HTMLDivElement>(null);\n\n    return (\n        <>\n            {\n                isFixed && elementRef.current &&\n                <div style={{\n                    width: `${elementRef.current.offsetWidth}px`,\n                    height: `${elementRef.current.offsetHeight}px`\n                }}>\n                </div>\n            }\n            <div style={{...style, zIndex: props.zIndex ? props.zIndex : 'auto'}} ref={elementRef}>\n                { props.children }\n            </div>\n        </>\n    )\n};\n\nexport default StickyComponent;","import React, {FormEvent, useEffect, useState} from \"react\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Button from '@material-ui/core/Button';\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport {Tooltip} from \"@material-ui/core\";\nimport Zoom from \"@material-ui/core/Zoom\";\n\nconst useStyles = makeStyles(theme => ({\n    dialog: {\n        minWidth: '50vw'\n    }\n}));\n\ninterface HeaderSearchProps {\n    goToSearch: (keyword: string) => void\n}\n\nconst HeaderSearch: React.FC<HeaderSearchProps> = ({goToSearch}) => {\n\n    const classes = useStyles();\n\n    const [open, setOpen] = useState(false);\n    const [input, setInput] = useState('');\n    const [isEmpty, setIsEmpty] = useState(false);\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setInput('');\n        setOpen(false);\n    };\n\n    const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        if (isEmpty) setIsEmpty(false);\n        setInput(e.target.value)\n    };\n\n    const handleSubmit = (e: FormEvent) => {\n        e.preventDefault();\n        if (!input.length) {\n            setIsEmpty(true);\n        } else {\n            goToSearch(input);\n            handleClose();\n        }\n    };\n\n    return (\n        <div>\n            <Tooltip title=\"Search\" TransitionComponent={Zoom}>\n                <IconButton aria-label=\"search\" color={\"inherit\"} onClick={handleClickOpen}>\n                    <SearchIcon/>\n                </IconButton>\n            </Tooltip>\n            <Dialog open={open} onClose={handleClose} fullWidth maxWidth='sm'>\n                <form action='/' onSubmit={handleSubmit}>\n                    <DialogTitle>Search from archived news</DialogTitle>\n                    <DialogContent>\n                        <TextField\n                            error={isEmpty}\n                            autoFocus\n                            margin=\"dense\"\n                            label=\"Keywords\"\n                            type=\"news keyword\"\n                            fullWidth\n                            value={input}\n                            onChange={handleInputChange}\n                            helperText={isEmpty ? 'Keyword cannot be empty.' : ' '}\n                        />\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={handleClose} color=\"primary\" aria-label='cancel'>\n                            Cancel\n                        </Button>\n                        <Button type=\"submit\" color=\"primary\" aria-label='submit search'>\n                            Search\n                        </Button>\n                    </DialogActions>\n                </form>\n            </Dialog>\n        </div>\n    )\n};\n\nexport default HeaderSearch","import React, {useRef} from \"react\";\nimport {AppBar, Grid, Tab, Tabs, Theme, Toolbar, Tooltip, Typography,} from \"@material-ui/core\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport {Categories, Category} from \"../../redux/actions/category\";\nimport StickyComponent from \"../utility-components/sticky-component\";\nimport IconButton from '@material-ui/core/IconButton';\nimport AssessmentIcon from '@material-ui/icons/Assessment';\nimport CollectionsBookmarkIcon from '@material-ui/icons/CollectionsBookmark';\nimport Zoom from \"@material-ui/core/Zoom\";\nimport HeaderSearch from \"./header-search\";\nimport useTheme from \"@material-ui/core/styles/useTheme\";\n\n\nconst useStyles = makeStyles((theme: Theme) => ({\n    tab: {\n        flexShrink: 0,\n        flexGrow: 1,\n        color: theme.palette.primary.contrastText\n    },\n    heading: {\n        textTransform: 'uppercase',\n        height: '100%',\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'center',\n        whiteSpace: 'nowrap'\n    },\n    appBarNoBoxShadow: {\n        boxShadow: 'none'\n    },\n    appBarBottomBoxShadow: {\n        boxShadow: '0px 4px 4px -1px rgba(0,0,0,0.2), 0px 5px 5px 0px rgba(0,0,0,0.14), 0px 10px 10px 0px rgba(0,0,0,0.12)'\n    },\n    trendIcon: {\n        color: '#FFF'\n    }\n}));\n\ninterface HeaderProps {\n    headers: Categories,\n    category: Category,\n    goToSearch: (keyword: string) => void,\n    goToAnalytics: () => void,\n    goToTopic: () => void,\n    setCategory: (category: Category) => void\n}\n\nconst Header: React.FC<HeaderProps> = ({headers, category, goToSearch, goToAnalytics, setCategory, goToTopic}) => {\n    const classes = useStyles();\n    const appBarRef = useRef<HTMLDivElement>(null);\n    const theme = useTheme();\n\n    return (\n        <>\n        <AppBar color=\"primary\" position={'static'} ref={appBarRef} className={classes.appBarNoBoxShadow}>\n            <Toolbar>\n                <Grid container>\n                    <Grid item xs={1} md={3}>\n\n                    </Grid>\n                    <Grid item xs={5} md={6}>\n                        <Typography align={\"center\"} className={classes.heading} variant={\"h1\"} component={'h1'}>\n                            News Canada\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={6} md={3}>\n                        <Grid container alignItems={'center'} justify={\"flex-end\"}>\n                            <Grid item>\n                                <HeaderSearch goToSearch={goToSearch}/>\n                            </Grid>\n                            <Grid item>\n                                <Tooltip title=\"Topic: COVID-19\" TransitionComponent={Zoom}>\n                                    <IconButton aria-label=\"Topic: COVID-19\" color={\"inherit\"} onClick={goToTopic}>\n                                        <CollectionsBookmarkIcon/>\n                                    </IconButton>\n                                </Tooltip>\n                            </Grid>\n                            <Grid item>\n                                <Tooltip title=\"Analytics\" TransitionComponent={Zoom}>\n                                    <IconButton aria-label=\"news trend\" color={\"inherit\"} onClick={goToAnalytics}>\n                                        <AssessmentIcon/>\n                                    </IconButton>\n                                </Tooltip>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Toolbar>\n        </AppBar>\n        <StickyComponent\n            anchorRef={appBarRef}\n            zIndex={theme.zIndex.appBar}>\n            <AppBar color=\"primary\" position={'static'} className={classes.appBarBottomBoxShadow}>\n                <Tabs\n                    value={headers.indexOf(category) === -1 ? false : headers.indexOf(category)}\n                    indicatorColor=\"secondary\"\n                    textColor=\"secondary\"\n                    variant=\"scrollable\"\n                    scrollButtons=\"auto\"\n                >\n                    {\n                        headers.map((_, i) => <Tab label={_} key={i} className={classes.tab} onClick={() => setCategory(Category[_])}/>)\n                    }\n                </Tabs>\n            </AppBar>\n        </StickyComponent>\n        </>\n    )\n}\n\nexport default Header;","import {connect} from \"react-redux\";\nimport {Dispatch} from \"redux\";\nimport {\n    categories,\n    Category,\n    goToAnalyticsPanel,\n    goToSearchPanel, goToTopicPanel,\n    setCategoryIfNeeded\n} from \"../redux/actions/category\";\nimport {setSearchKeyword} from \"../redux/actions/search-keyword\";\nimport Header from \"../components/header/header\";\nimport {State} from \"../redux/state\";\n\nfunction mapStateToProps(state: State) {\n    return {\n        headers: categories,\n        category: state.category,\n    }\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch) {\n    return {\n        goToSearch: (keyword: string) => {\n            dispatch(setSearchKeyword(keyword));\n            dispatch(goToSearchPanel())\n        },\n        goToAnalytics: () => {\n            dispatch(goToAnalyticsPanel())\n        },\n        goToTopic: () => {\n            dispatch(goToTopicPanel())\n        },\n        setCategory: (category: Category) => {\n            // @ts-ignore\n            dispatch(setCategoryIfNeeded(category));\n        }\n    }\n}\n\nconst HeaderContainer = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Header);\n\nexport default HeaderContainer;","enum SortTypes {\n    relevance='relevance',\n    date='date'\n}\n\nexport default SortTypes","import * as d3 from \"d3\";\n\nexport interface CovidCaseData {\n    countries: {\n        [key: string]: {\n            cases: number[],\n            deaths: number[],\n            recovered: number[],\n        }\n    }\n    series: string[],\n    totals: {\n        cases: number[],\n        deaths: number[],\n        recovered: number[],\n    },\n    lastUpdated: string\n}\n\ninterface FeatureProperties {\n    name: string,\n    case: {\n        cases: number[],\n        deaths: number[],\n        recovered: number[],\n    } | null\n}\n\nclass WorldMapD3 {\n    color = {\n        red: '#ef5350',\n        transparent: 'rgba(0,0,0,0)',\n        getMapColor: (percentage: number) => `rgba(55, 76, 128, ${percentage.toFixed(1)})`,\n        grey: \"#eee\",\n        mapStrokeNormal: '#ccc',\n        mapStrokeHoverHighlight: '#222',\n        case: '#ffb140',\n        death: '#f16a67',\n        recovered: '#78c37b',\n        timeBarHighlight: '#7a5195',\n        timeBarNormal: '#af96bf',\n        timeBarLight: '#e4dbe8'\n    };\n    monthStrings = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n    getStrokeWidth = () => this.dimension.svgWidth >= 1000 ? 1 : 0.5;\n    animations = {\n        zoomIn: {\n          delay: 0,\n          duration: 3000,\n        },\n        changeMapColor: {\n          delay: 3000,\n          duration: 1000,\n        },\n        timeLapse: {\n          delay: 4000,\n        },\n        timeLapseGap: 500\n    };\n    id: string;\n    dimension: {\n        svgWidth: number,\n        svgHeight: number,\n        m: {t: number, r: number, b: number, l: number},\n        mapX: number,\n        mapY: number\n        mapWidth: number,\n        mapHeight: number\n    };\n    themeColor: string;\n    data: {\n        aggregate: d3.ExtendedFeatureCollection<d3.ExtendedFeature<d3.GeoGeometryObjects, FeatureProperties>> | null,\n        case: CovidCaseData,\n        caseMax: number\n    };\n    references: {\n        svg: d3.Selection<SVGSVGElement, unknown, HTMLElement, any> | null,\n        map: {\n            paths: d3.Selection<SVGPathElement, d3.ExtendedFeature<d3.GeoGeometryObjects, FeatureProperties>, SVGGElement, any> | null,\n            pathHighlightGroup: d3.Selection<SVGGElement, unknown, HTMLElement, any> | null,\n            pathHighlight: d3.Selection<SVGPathElement | null, unknown, HTMLElement, any> | null,\n        }\n        tooltip: {\n            bg: d3.Selection<SVGRectElement, unknown, HTMLElement, any>,\n            tooltipGroup: d3.Selection<SVGGElement, unknown, HTMLElement, any>\n            tooltip: d3.Selection<SVGTextElement, unknown, HTMLElement, any>,\n            tspanCountry: d3.Selection<SVGTextElement, unknown, HTMLElement, any>,\n            tspanDate: d3.Selection<SVGTextElement, unknown, HTMLElement, any>,\n            tspanCaseAccumulative: d3.Selection<SVGTextElement, unknown, HTMLElement, any>,\n            tspanDeathAccumulative: d3.Selection<SVGTextElement, unknown, HTMLElement, any>,\n            tspanRecoveredAccumulative: d3.Selection<SVGTextElement, unknown, HTMLElement, any>,\n            tspanCaseNew: d3.Selection<SVGTextElement, unknown, HTMLElement, any>,\n            tspanDeathNew: d3.Selection<SVGTextElement, unknown, HTMLElement, any>,\n            tspanRecoveredNew: d3.Selection<SVGTextElement, unknown, HTMLElement, any>,\n            caseLineChart: d3.Selection<SVGPathElement, unknown | [number, number][], HTMLElement, any>,\n            deathLineChart: d3.Selection<SVGPathElement, unknown | [number, number][], HTMLElement, any>,\n            recoveredLineChart: d3.Selection<SVGPathElement, unknown | [number, number][], HTMLElement, any>,\n            stackBarChartCase: d3.Selection<SVGRectElement, unknown, HTMLElement, any>,\n            stackBarChartDeath: d3.Selection<SVGRectElement, unknown, HTMLElement, any>,\n            stackBarChartRecovered: d3.Selection<SVGRectElement, unknown, HTMLElement, any>,\n        } | null,\n        timeControl: {\n            group: d3.Selection<SVGGElement, unknown, HTMLElement, any>,\n            dateText: d3.Selection<SVGTextElement, unknown, HTMLElement, any>,\n            timeBarBg: d3.Selection<SVGRectElement, string, SVGGElement, any>,\n            timeBar: d3.Selection<SVGRectElement, string, SVGGElement, any>,\n            playButton: d3.Selection<SVGTextElement, unknown, HTMLElement, any>,\n            startOverButton: d3.Selection<SVGTextElement, unknown, HTMLElement, any>,\n        } | null\n    };\n    scales: {\n        timeBarXScale: d3.ScaleBand<string>\n    };\n    state: {\n        time: number,\n        timeMax: number,\n        tooltipData: {\n            inputX: number, // top left x of map path rect, used as primary anchor\n            inputXSecondary: number, // top right x of map path rect, used in case primary anchor causing tooltip overlaps map rect\n            inputY: number, // top right y of map path rect\n            inputYSecondary: number, // bottom right y of map path rect\n            data: {\n                country: string,\n                case: {\n                    cases: number[],\n                    deaths: number[],\n                    recovered: number[],\n                } | undefined | null\n            }\n        }\n    };\n    timeLapse: {\n        timeoutID: number | null\n    };\n\n    constructor(id: string, width: number, height: number, themeColor: string, caseData: CovidCaseData) {\n        this.id = id;\n        this.dimension = this.getDimension(width, height);\n        this.themeColor = themeColor;\n        this.data = {\n            aggregate: null,\n            case: caseData,\n            caseMax: 0\n        };\n        this.references = {\n            svg: null,\n            map: {\n                paths: null,\n                pathHighlightGroup: null,\n                pathHighlight: null\n            },\n            tooltip: null,\n            timeControl: null\n        };\n        this.scales = {\n            timeBarXScale: d3.scaleBand()\n        };\n        this.state = {\n            time: 0,\n            timeMax: 0,\n            tooltipData: {\n                inputX: -1000,\n                inputXSecondary: -1000,\n                inputY: -1000,\n                inputYSecondary: -1000,\n                data: {\n                    country: '',\n                    case: undefined\n                }\n            }\n        };\n        this.timeLapse = {\n            timeoutID: null\n        }\n    }\n\n    getDimension(width: number, height: number) {\n        const svgWidth = width;\n        const svgHeight = height;\n        const m = {t: 0, r: 10, b: 75, l: 10};\n        return {\n            svgWidth,\n            svgHeight,\n            m,\n            mapX: m.l,\n            mapY: m.t,\n            mapWidth: svgWidth - m.l - m.r,\n            mapHeight: svgHeight - m.t - m.b\n        }\n    }\n\n    async getData() {\n        try {\n            const module = await import('./world-map-data');\n            let caseMax = 0;\n            const mapData: any = module.default;\n            mapData.features.forEach((obj: any) => {\n                if (!obj.properties) return;\n                obj.properties.case = this.data.case.countries[obj.properties.name] ?\n                    Object.assign({}, this.data.case.countries[obj.properties.name]) :\n                    null;\n\n                this.data.case.countries[obj.properties.name]?.cases.forEach(num => {\n                    if (num > caseMax) caseMax = num\n                })\n            });\n            this.data.aggregate = mapData;\n            this.data.caseMax = caseMax;\n            this.state.timeMax = this.data.case.series.length - 1;\n\n            // const casesCountries = Object.keys(this.data.case.countries).sort((a, b) => a.localeCompare(b));\n            // const mapCountries = this.data.map.features.map(obj=>obj.properties!.name).sort((a, b) => a.localeCompare(b));\n            // console.log(casesCountries, mapCountries);\n            //\n            // const casesCountriesFiltered: string[] = [];\n            // const mapCountriesFiltered: string[] = [];\n            //\n            // casesCountries.forEach(str => {\n            //     if (mapCountries.indexOf(str) === -1) {\n            //         casesCountriesFiltered.push(str)\n            //     }\n            // })\n            //\n            // mapCountries.forEach(str => {\n            //     if (casesCountries.indexOf(str) === -1) {\n            //         mapCountriesFiltered.push(str)\n            //     }\n            // })\n            // console.log(casesCountriesFiltered, mapCountriesFiltered)\n        } catch (e) {\n            throw (e)\n        }\n    }\n\n    initSvg() {\n        this.references.svg = d3.select(`#${this.id}`)\n            .append('svg')\n            .attr('width', this.dimension.svgWidth)\n            .attr('height', this.dimension.svgHeight)\n        // .style('background-color', 'rgba(255,0,0,0.5');\n    }\n\n    initTooltip() {\n        if (!this.references.svg) return;\n        const tooltipGroup = this.references.svg.append('g');\n        const bg = tooltipGroup.append('rect');\n        const tooltip = tooltipGroup.append('text');\n        const tspanCountry = tooltip.append('tspan');\n        const tspanDate = tooltip.append('tspan');\n        const tspanCaseAccumulative = tooltip.append('tspan');\n        const tspanCaseNew = tooltip.append('tspan');\n        const tspanDeathAccumulative = tooltip.append('tspan');\n        const tspanDeathNew = tooltip.append('tspan');\n        const tspanRecoveredAccumulative = tooltip.append('tspan');\n        const tspanRecoveredNew = tooltip.append('tspan');\n        const caseLineChart = tooltipGroup.append('path');\n        const deathLineChart = tooltipGroup.append('path');\n        const recoveredLineChart = tooltipGroup.append('path');\n        const stackBarChartGroup = tooltipGroup.append('g');\n        const stackBarChartCase = stackBarChartGroup.append('rect');\n        const stackBarChartDeath = stackBarChartGroup.append('rect');\n        const stackBarChartRecovered = stackBarChartGroup.append('rect');\n        tooltip\n            .style('font-weight', 700)\n            .style('font-size', '0.875rem')\n            .style('fill', '#fff')\n            .attr(\"text-anchor\", \"middle\")\n            // .attr('alignment-baseline', 'bottom')\n        // tspanCountry\n        // tspanDate\n        // tspanCaseAccumulative\n        // tspanDeathAccumulative\n        // tspanRecoveredAccumulative\n        tspanCaseNew\n            .style('fill', this.color.case);\n        tspanDeathNew\n            .style('fill', this.color.death)\n        tspanRecoveredNew\n            .style('fill', this.color.recovered)\n\n        bg\n            .style('fill', 'rgba(0,0,0,0.8)')\n            .attr('rx', '5px');\n\n        [caseLineChart, deathLineChart, recoveredLineChart].forEach(_ => {\n            _\n                .style('stroke-width', 2)\n                .style('fill', 'none')\n        });\n        caseLineChart.style('stroke', this.color.case);\n        deathLineChart.style('stroke', this.color.death);\n        recoveredLineChart.style('stroke', this.color.recovered);\n        //\n        stackBarChartCase.style('fill', this.color.case);\n        stackBarChartDeath.style('fill', this.color.death);\n        stackBarChartRecovered.style('fill', this.color.recovered);\n\n\n        this.references.tooltip = {\n            bg,\n            tooltipGroup,\n            tooltip,\n            tspanCountry,\n            tspanDate,\n            tspanCaseAccumulative,\n            tspanDeathAccumulative,\n            tspanRecoveredAccumulative,\n            tspanCaseNew,\n            tspanDeathNew,\n            tspanRecoveredNew,\n            caseLineChart,\n            deathLineChart,\n            recoveredLineChart,\n            stackBarChartCase,\n            stackBarChartDeath,\n            stackBarChartRecovered\n        };\n        this.updateTooltip()\n\n    }\n\n    updateTooltip() {\n        if (!this.references.tooltip) return;\n\n        const {\n            inputX, // top left x of map path rect, used as primary anchor\n            inputXSecondary, // top right x of map path rect, used in case primary anchor causing tooltip overlaps map rect\n            inputY, // top right y of map path rect\n            inputYSecondary, // bottom right y of map path rect\n            data\n        } = this.state.tooltipData;\n\n        const getNew = (num: number) => {\n            return num >= 0 ? ` (+${num})` : ` (${num})`\n        };\n\n        const currentT = this.state.time;\n        const date = new Date(this.data.case.series[currentT]);\n        const dateText = `${date.getDate()} ${this.monthStrings[date.getMonth()]}, ${date.getFullYear()}`;\n        const noData = 'Unknown';\n\n        // Update texts\n\n        this.references.tooltip.tspanCountry.text(data.country);\n        this.references.tooltip.tspanDate.text(dateText);\n        if (!data.case) {\n            // no data\n            this.references.tooltip.tspanCaseAccumulative.text(`Confirmed: ${noData}`);\n            this.references.tooltip.tspanCaseNew.text('');\n            this.references.tooltip.tspanDeathAccumulative.text(`Death: ${noData}`);\n            this.references.tooltip.tspanDeathNew.text('');\n            this.references.tooltip.tspanRecoveredAccumulative.text(`Recovered: ${noData}`);\n            this.references.tooltip.tspanRecoveredNew.text('');\n        } else {\n            this.references.tooltip.tspanCaseAccumulative.text(`Confirmed: ${data.case.cases[currentT]}`);\n            this.references.tooltip.tspanCaseNew.text(currentT === 0 ? getNew(0) : getNew(data.case.cases[currentT] - data.case.cases[currentT - 1]));\n            this.references.tooltip.tspanDeathAccumulative.text(`Death: ${data.case.deaths[currentT]}`);\n            this.references.tooltip.tspanDeathNew.text(currentT === 0 ? getNew(0) : getNew(data.case.deaths[currentT] - data.case.deaths[currentT - 1]));\n            this.references.tooltip.tspanRecoveredAccumulative.text(`Recovered: ${data.case.recovered[currentT]}`);\n            this.references.tooltip.tspanRecoveredNew.text(currentT === 0 ? getNew(0) : getNew(data.case.recovered[currentT] - data.case.recovered[currentT - 1]));\n        }\n\n        // Update dimension and position\n        const bBox = this.references.tooltip.tooltip.node()?.getBBox();\n        if (!bBox) return;\n        const p = 0.3;\n        const shift = 5;\n        const textWidth = bBox.width;\n        const textHeight = bBox.height;\n        const lineChartHeight = 20;\n        const stackBarChartMarginTop = 10;\n        const stackBarChartHeight = 15;\n        const chartWidth = 150;\n        const tooltipWidth = (1+p)*Math.max(chartWidth, textWidth);\n        const tooltipHeight = (1+p)*(textHeight + lineChartHeight * 3 + stackBarChartHeight + stackBarChartMarginTop);\n\n        const xBg = inputX - tooltipWidth - shift;\n        const xBgFloored = Math.max(this.dimension.m.l, xBg);\n        let textX, tooltipX;\n        let y = inputY;\n        if (xBgFloored + tooltipWidth > inputX) {\n            // overlapping with map rect\n            tooltipX = inputXSecondary + shift;\n            if (tooltipX + tooltipWidth > this.dimension.svgWidth) {\n                // tooltip overflows viewport right edge now\n                // fallback to use primary x and use secondary y\n                tooltipX = xBgFloored;\n                textX = tooltipX + 0.5*tooltipWidth;\n                y = inputYSecondary\n            } else {\n                textX = tooltipX + 0.5*tooltipWidth\n            }\n        } else {\n            tooltipX = xBgFloored;\n            textX = tooltipX + 0.5*tooltipWidth\n        }\n\n        y = Math.min(y, this.dimension.svgHeight - tooltipHeight);\n        const toolTipStartY = y - p/2*bBox.height;\n        const lineChartStartY = toolTipStartY+0.5*p*tooltipHeight+textHeight;\n        const stackBarChartY = lineChartStartY + 3 * lineChartHeight + stackBarChartMarginTop;\n        this.references.tooltip.tooltip\n            .attr('x', textX)\n            .attr('y', y);\n        this.references.tooltip.tspanCountry\n            .attr('x', textX)\n            .attr('dy', '0.875em');\n        this.references.tooltip.tspanDate\n            .attr('x', textX)\n            .attr('dy', '1em');\n        this.references.tooltip.tspanCaseAccumulative\n            .attr('x', textX)\n            .attr('dy', '1em');\n\n        this.references.tooltip.tspanDeathAccumulative\n            .attr('x', textX)\n            .attr('dy', '1em');\n\n        this.references.tooltip.tspanRecoveredAccumulative\n            .attr('x', textX)\n            .attr('dy', '1em');\n\n        this.references.tooltip.bg\n            .attr('x', tooltipX)\n            .attr('y', toolTipStartY)\n            .attr('width', tooltipWidth)\n            .attr('height', tooltipHeight);\n\n        //\n        // Update line charts\n        const updateLineCharts = (\n            dataArray: number[],\n            reference: d3.Selection<SVGPathElement, unknown | [number, number][], HTMLElement, any>,\n            yMax: number,\n            x: number,\n            y: number\n        ) => {\n            const data: [number, number][] = dataArray.map((num, i) => [i, num]);\n            const scaleX = d3.scaleLinear()\n                .domain([0, this.data.case.series.length-1])\n                .range([0, chartWidth]);\n            const scaleY = d3.scaleLinear()\n                .domain([0, yMax])\n                .range([20, 0]);\n\n            reference\n                .datum(data)\n                .attr('d', d3.line()\n                    .x((d) => scaleX(d[0]))\n                    .y((d) => scaleY(d[1]))\n                    .defined((d, i) => i <= this.state.time)\n                )\n                .style('transform', `translate(${x}px, ${y}px)`)\n        };\n\n        const chartX = textX - chartWidth/2;\n        if (this.state.tooltipData.data.case) {\n            // has data\n            const lineChartYMax = Math.max.apply(Math, this.state.tooltipData.data.case.cases);\n            updateLineCharts(this.state.tooltipData.data.case.cases, this.references.tooltip.caseLineChart, lineChartYMax, chartX, lineChartStartY);\n            updateLineCharts(this.state.tooltipData.data.case.deaths, this.references.tooltip.deathLineChart, lineChartYMax, chartX, lineChartStartY + lineChartHeight);\n            updateLineCharts(this.state.tooltipData.data.case.recovered, this.references.tooltip.recoveredLineChart, lineChartYMax, chartX, lineChartStartY + lineChartHeight*2);\n        } else {\n            // either no data or mouse is leaving, need to move line chart out\n            const nullData: number[] = [];\n            updateLineCharts(nullData, this.references.tooltip.caseLineChart, 0, chartX, lineChartStartY);\n            updateLineCharts(nullData, this.references.tooltip.deathLineChart, 0, chartX, lineChartStartY + lineChartHeight);\n            updateLineCharts(nullData, this.references.tooltip.recoveredLineChart, 0, chartX, lineChartStartY + lineChartHeight*2);\n        }\n\n        // update stack bar chart\n        const stackBarScale = d3.scaleLinear()\n            .domain([0, this.data.case.series.length-1])\n            .range([0, 100]);\n        if (this.state.tooltipData.data.case) {\n            // has data\n            const currentCase = this.state.tooltipData.data.case.cases[currentT];\n            const currentDeath = this.state.tooltipData.data.case.deaths[currentT];\n            const currentRecovered = this.state.tooltipData.data.case.recovered[currentT];\n            const deathWidth = currentCase === 0 ? 0 : (currentDeath / currentCase) * chartWidth;\n            const recoveredWidth = currentCase === 0 ? 0 : (currentRecovered / currentCase) * chartWidth;\n            this.references.tooltip.stackBarChartCase\n                .attr('x', chartX)\n                .attr('width', () => currentCase === 0 ? 0 : chartWidth)\n                .attr('height', stackBarChartHeight)\n                .attr('y', stackBarChartY);\n            this.references.tooltip.stackBarChartDeath\n                .attr('x', chartX + chartWidth - deathWidth)\n                .attr('width', deathWidth)\n                .attr('height', stackBarChartHeight)\n                .attr('y', stackBarChartY);\n            this.references.tooltip.stackBarChartRecovered\n                .attr('x', chartX)\n                .attr('width', recoveredWidth)\n                .attr('height', stackBarChartHeight)\n                .attr('y', stackBarChartY)\n        } else {\n            // either no data or mouse is leaving, need to move line chart out\n            this.references.tooltip.stackBarChartCase\n                .attr('x', chartX)\n                .attr('y', stackBarChartY);\n            this.references.tooltip.stackBarChartDeath\n                .attr('x', chartX)\n                .attr('y', stackBarChartY);\n            this.references.tooltip.stackBarChartRecovered\n                .attr('x', chartX)\n                .attr('y', stackBarChartY)\n        }\n    }\n\n    initMap() {\n        if (!this.data.aggregate || !this.references.svg) return;\n\n        const projection = d3.geoNaturalEarth1()\n            .fitExtent([[this.dimension.mapX, this.dimension.mapY], [this.dimension.mapWidth, this.dimension.mapHeight]], this.data.aggregate);\n\n        this.references.map.paths = this.references.svg.append(\"g\")\n            .selectAll(\"path\")\n            .data(this.data.aggregate.features)\n            .enter().append(\"path\")\n            .attr(\"fill\", this.color.grey)\n            .attr(\"d\", d3.geoPath()\n                .projection(projection)\n            )\n            .style(\"stroke\", this.color.mapStrokeNormal)\n            .style(\"stroke-width\", this.getStrokeWidth())\n            .style('opacity', 0)\n            .style('transform', 'scale(5)')\n            .style('transform-origin', '50% 50%');\n\n        this.references.map.pathHighlightGroup = this.references.svg.append(\"g\");\n    }\n\n    mapZoomIn() {\n        if (!this.references.map.paths) return;\n        this.references.map.paths.transition()\n            .delay((d, i) => (i % 10) * 200)\n            .duration(1000)\n            .style('opacity', 1)\n            .style('transform', 'scale(1)');\n\n        // change map color from grey to white\n        this.references.map.paths.transition()\n            .delay(this.animations.changeMapColor.delay)\n            .duration(this.animations.changeMapColor.duration)\n            .style('fill', this.color.getMapColor(0))\n    }\n\n    initTimeControl() {\n        if (!this.references.svg) return;\n        // dimensions\n        const margin = 4;\n        const timeControlStartY = this.dimension.svgHeight - this.dimension.m.b;\n        const timeControlStartX = 0.2*this.dimension.svgWidth;\n        const dateTextHeight = 16;\n        const timeBarStartY = timeControlStartY + dateTextHeight + margin;\n        const timeBarHeight = 10;\n        const buttonStartY = timeBarStartY + timeBarHeight + margin;\n        const buttonHeight = 16;\n        //\n        const dateArray = this.data.case.series;\n        this.scales.timeBarXScale = d3.scaleBand()\n            .domain(dateArray)\n            .range([timeControlStartX, 0.8*this.dimension.svgWidth]);\n\n        const group = this.references.svg.append(\"g\");\n        const dateText = group.append(\"text\")\n            .attr('x', timeControlStartX)\n            .attr('y', timeControlStartY + dateTextHeight)\n            .attr('font-size', `${dateTextHeight}px`)\n            .attr('font-weight', 700)\n            .style('fill', this.color.timeBarHighlight);\n        const [timeBarBg, timeBar] = [0, 1].map(_=>{\n            const selection = group.append('g')\n                .selectAll('rect')\n                .data(dateArray)\n                .enter()\n                .append('rect')\n                .style('cursor', 'pointer')\n                .attr('y', timeBarStartY)\n                .attr('x', (d) => `${this.scales.timeBarXScale(d)}`)\n                .attr('width', this.scales.timeBarXScale.bandwidth())\n                .attr('height', timeBarHeight)\n                .style('opacity', 0);\n            selection\n                .transition()\n                .delay(2000)\n                .duration(1000)\n                .style('opacity', 1);\n            return selection\n        });\n        timeBarBg\n            .style('fill', this.color.timeBarLight)\n            .style('stroke', `#fff`)\n            .style('stroke-width', 1);\n        timeBar\n            .style('fill', this.color.transparent);\n\n        const buttonGroup = group.append('g');\n        const [playButton, startOverButton] = [\n            {\n                y: buttonStartY + buttonHeight,\n                text: 'Pause'\n            },\n            {\n                y: buttonStartY + buttonHeight * 2,\n                text: 'Start Over'\n            }\n        ].map(_=>{\n            const selection = buttonGroup\n                .append('text')\n                .style('cursor', 'pointer')\n                .style('opacity', '0')\n                .style('fill', this.color.timeBarNormal)\n                .attr('font-weight', 700)\n                .attr('x', timeControlStartX)\n                .attr('y', _.y)\n                .text(_.text);\n            selection.transition()\n                .delay(this.animations.timeLapse.delay)\n                .duration(1000)\n                .style('opacity', 1);\n            selection\n                .on('mouseenter', () => {\n                selection.style('fill', this.color.timeBarHighlight)\n                })\n                .on('mouseleave', () => {\n                selection.style('fill', this.color.timeBarNormal)\n                });\n            return selection\n        });\n        this.references.timeControl = {\n            group,\n            dateText,\n            timeBarBg,\n            timeBar,\n            playButton,\n            startOverButton\n        };\n    }\n\n    updateTimeControl() {\n        if (!this.references.timeControl) return;\n\n        const currentT = this.state.time;\n        const date = new Date(this.data.case.series[currentT]);\n        this.references.timeControl.dateText.text(`${date.getDate()} ${this.monthStrings[date.getMonth()]}, ${date.getFullYear()}`)\n\n        this.references.timeControl.timeBar\n            .style('fill', (d, i) => i <= this.state.time ? this.color.timeBarNormal : this.color.transparent)\n            // .style('stroke', this.color.transparent)\n        this.references.timeControl.timeBar.filter((d, i) => i === this.state.time)\n            .transition()\n            .duration(this.animations.timeLapseGap)\n            .attrTween('width', (d) => (t: number) => `${t*this.scales.timeBarXScale.bandwidth()}px`)\n            .ease(d3.easeLinear)\n    }\n\n    updateMap() {\n        const caseMaxLog = Math.log(this.data.caseMax);\n        const emptyColor = this.color.getMapColor(0);\n\n        if (!this.references.map.paths) return;\n        this.references.map.paths\n            .style('fill', (d) => {\n                if (!d.properties.case) {\n                    // no data\n                    return emptyColor\n                } else {\n                    const currentCases = d.properties.case.cases[this.state.time];\n                    if (currentCases < 1) {\n                        return emptyColor\n                    } else {\n                        return this.color.getMapColor(Math.log(currentCases) / caseMaxLog)\n                    }\n                }\n            })\n    }\n\n    setTimeState(time: number) {\n        this.state.time = time;\n        this.updateMap();\n        this.updateTimeControl();\n        this.updateTooltip();\n    }\n\n    setToolTipDataState(\n        x: number,\n        xSecondary: number,\n        y : number,\n        ySecondary: number,\n        country: string,\n        newCase: typeof WorldMapD3.prototype.state.tooltipData.data.case\n    ) {\n        this.state.tooltipData = Object.assign(\n            this.state.tooltipData,\n            {\n                inputX: x,\n                inputXSecondary: xSecondary,\n                inputY: y,\n                inputYSecondary: ySecondary,\n                data: {\n                    country: country,\n                    case: newCase\n                }\n            })\n    }\n\n    startTimeLapse(isWaitFirstTick?: boolean) {\n        const tick = () => {\n            if (this.state.time < this.state.timeMax) {\n                this.setTimeState(this.state.time+1);\n                this.timeLapse.timeoutID = window.setTimeout(tick, this.animations.timeLapseGap)\n            } else {\n                this.stopTimeLapse()\n            }\n        };\n\n        this.references.timeControl?.playButton.text('Pause');\n        if (isWaitFirstTick) {\n            this.timeLapse.timeoutID = window.setTimeout(() => tick(), this.animations.timeLapseGap)\n        } else {\n            tick();\n        }\n    }\n\n    stopTimeLapse() {\n        this.references.timeControl?.playButton.text('Start');\n\n        if (this.timeLapse.timeoutID !== null) {\n            window.clearTimeout(this.timeLapse.timeoutID);\n            this.timeLapse.timeoutID = null;\n        }\n    }\n\n    appendTimeBarMouseEvent() {\n        if (!this.references.timeControl) return;\n\n        const thisClass = this;\n        this.references.timeControl.timeBar\n            .on('mouseenter', function() {\n            d3.select(this).style('fill', thisClass.color.timeBarHighlight)\n            })\n            .on('mouseleave', function(d, i) {\n                d3.select(this).style('fill', i <= thisClass.state.time ? thisClass.color.timeBarNormal : thisClass.color.transparent)\n            })\n            .on('click', function(d, i) {\n                thisClass.stopTimeLapse();\n                thisClass.setTimeState(i)\n            })\n    }\n\n    appendTimeControlButtonEvent() {\n        if (!this.references.timeControl) return;\n\n        this.references.timeControl.playButton.on('click', () => {\n            if (this.timeLapse.timeoutID !== null) {\n                this.stopTimeLapse();\n            } else {\n                this.startTimeLapse();\n            }\n        });\n\n        this.references.timeControl.startOverButton.on('click', () => {\n            this.stopTimeLapse();\n            this.setTimeState(0);\n            this.startTimeLapse(true);\n        });\n    }\n\n    appendMapPathMouseEvent() {\n        // when mouse enter a country:\n        // 1. use d3.selection.clone() to clone the country path, the cloned path will be append right after the original path.\n        // 2. remove this path and append it into the pathHighlightGroup using d3.selection.append(() => clonedNode.node())\n        // 3. the cloned the path will be on the top of all the paths therefore the stroke on it will be totally visible.\n        // 4. however this cloned path is on the top of is origin too, therefore will trigger it's origin's mouseleave listener\n        // 5. remove the clone in the clone's mouseleave listener\n        // 6. sometimes the mouseover listener will be triggered before clone's mouseleave listener, therefore always remove the clone at the beginning of mouseover listener\n\n        // TODO: Known bug: on smaller screen, the tooltips may overlaps current mouse position, therefore the mouse is never gonna enter the cloned map path,\n        //  so the mouseleave will never be triggered and tooltips won't be repositioned.\n\n        if (!this.references.map.paths) return;\n        const thisClass = this;\n\n        const removeHighlightAndMoveTooltip = () => {\n            thisClass.setToolTipDataState(-1000, -1000, -1000, -1000, '', null);\n            thisClass.updateTooltip();\n            thisClass.references.map.pathHighlight?.remove();\n        };\n\n        this.references.map.paths.on('mouseenter', function(d) {\n            removeHighlightAndMoveTooltip();\n\n            const bBox = this.getBBox();\n            const x = bBox.x;\n            const y = bBox.y;\n            const xSecondary = bBox.x + bBox.width;\n            const ySecondary = bBox.y + bBox.height;\n\n            // tooltip\n            if (!d.properties.case) {\n                // no data for this country\n                thisClass.setToolTipDataState(x, xSecondary, y, ySecondary, d.properties.name, null);\n            } else {\n                thisClass.setToolTipDataState(x, xSecondary, y, ySecondary, d.properties.name, {...d.properties.case});\n            }\n            thisClass.updateTooltip();\n\n            // country path\n            const clonedNode = d3.select(this).clone().remove();\n            if (thisClass.references.map.pathHighlightGroup) {\n                const movedClonedNode = thisClass.references.map.pathHighlightGroup.append(() => clonedNode.node());\n                if (movedClonedNode) {\n                    thisClass.references.map.pathHighlight = movedClonedNode;\n                    movedClonedNode\n                        .style('stroke', thisClass.color.mapStrokeHoverHighlight)\n                        .style('stroke-width', thisClass.getStrokeWidth()*2)\n                        .style('fill', thisClass.color.transparent);\n                    movedClonedNode.on('mouseleave', function() {\n                        removeHighlightAndMoveTooltip()\n                    })\n                }\n            }\n        })\n    }\n\n    async main() {\n        try {\n            await this.getData();\n            this.initSvg();\n            this.initMap();\n            this.initTimeControl();\n            this.initTooltip();\n            this.mapZoomIn();\n            this.appendMapPathMouseEvent();\n            this.appendTimeBarMouseEvent();\n            setTimeout(\n                () => {\n                    this.startTimeLapse();\n                    this.appendTimeControlButtonEvent();\n                }, this.animations.timeLapse.delay);\n        } catch (e) {\n            console.log(e);\n        }\n    }\n}\n\nexport default WorldMapD3","import React, {useEffect, useRef} from \"react\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport WorldMapD3 from \"../../d3-charts/world-map-d3\";\nimport useTheme from \"@material-ui/core/styles/useTheme\";\n\nconst id = 'topic-covid19-map';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        width: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'flex-start',\n        // paddingBottom: '200px',\n        // position: 'relative',\n        // [theme.breakpoints.down('sm')]: {\n        //     paddingBottom: '250px',\n        // }\n    }\n}));\n\ninterface TopicCovid19MapProps {\n\n}\n\nconst TopicCovid19Map: React.FC<TopicCovid19MapProps> = () => {\n    const classes = useStyles();\n    const theme = useTheme();\n    const containerRef = useRef<HTMLDivElement>(null);\n    const height = window.innerHeight - 240;\n\n    useEffect(() => {\n        import('./data/topic-covid19-data').then((dataFile) => {\n            if (!containerRef.current) return;\n            const map = new WorldMapD3(id, containerRef.current.getBoundingClientRect().width, containerRef.current.getBoundingClientRect().height, theme.palette.secondary.main, dataFile.default);\n            map.main();\n        });\n    }, []);\n\n    return (\n        <div className={classes.root} ref={containerRef} style={{height: `${height}px`}}>\n            <div id={id}> </div>\n        </div>\n    )\n};\n\nexport default TopicCovid19Map","import React, {useEffect, useRef, useState} from \"react\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport TopicCovid19Map from \"./topic-covid19-map\";\nimport Link from '@material-ui/core/Link';\nimport Typography from '@material-ui/core/Typography';\nimport {Box} from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        width: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'flex-start',\n        padding: theme.spacing(2, 0, 10, 0),\n        [theme.breakpoints.down('sm')]: {\n            padding: theme.spacing(2, 0, 20, 0)\n        }\n\n    },\n    widthWrapper: {\n        width: '1000px',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'flex-start',\n        [theme.breakpoints.down('sm')]: {\n            width: '100%'\n        }\n    },\n    heading: {\n        fontFamily: 'Open Sans,sans-serif',\n        fontSize: '1.25rem',\n        textTransform: 'capitalize',\n        color: theme.palette.primary.main,\n        margin: theme.spacing(0,0,2,0)\n    }\n}));\n\ninterface TopicProps {\n\n}\n\nconst Topic: React.FC<TopicProps> = () => {\n    const classes = useStyles();\n\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.widthWrapper}>\n                <h1 className={classes.heading}>The spread of COVID-19</h1>\n            </div>\n            <TopicCovid19Map/>\n            <div className={classes.widthWrapper}>\n                <Box mx={5}>\n                    <p>\n                        <span>Data retrieved from </span>\n                        <span>\n                            <Link href='https://graphics.reuters.com/CHINA-HEALTH-MAP/0100B59S39E/index.html' target='_blank' rel=\"noopener noreferrer\" style={{color: '#f35c19'}}>\n                                Reuters.com\n                            </Link>\n                        </span>\n                        <span>, not updated in realtime.</span>\n                    </p>\n                </Box>\n            </div>\n        </div>\n    )\n};\n\nexport default Topic","enum Status {\n    LOADING='LOADING',\n    LOADED_NORMAL='LOADED_NORMAL',\n    LOADED_EMPTY='LOADED_EMPTY',\n    LOADED_NO_MORE='LOADED_NO_MORE',\n    ERROR='ERROR',\n}\n\nexport default Status","import SortTypes from \"../filters/sort-types\";\nimport {IResponse} from \"./response-types\";\n\nconst baseUrl = 'https://www.xiaoxihome.com/api/search-news';\n\nconst requestSearchNews = (\n    keyword: string,\n    skip: number,\n    frequency: boolean,\n    sort?: SortTypes,\n    date?: number\n) => {\n    return new Promise<IResponse>((resolve, reject) => {\n        const dateComponent = date ? `&date=${date}` : '';\n        sort = sort || SortTypes.relevance;\n        const url = `${baseUrl}?keyword=${keyword}&frequency=${frequency}&skip=${skip}&sort=${sort}${dateComponent}`;\n\n        fetch(url)\n            .then(res => res.json())\n            .then(json => {\n                if (json.status === 'ok') {\n                    resolve(json);\n                } else {\n                    console.log(json);\n                    reject(json);\n                }\n            })\n            .catch(e => {\n                console.log(e);\n                reject(e)\n            })\n    });\n};\n\nexport default requestSearchNews","import {useEffect, useState} from \"react\";\nimport requestSearchNews from \"./request-search-news\";\nimport Status from \"../utilities/status\";\nimport SortTypes from \"../filters/sort-types\";\nimport {IFrequencyData, ISearchedArticle, IResponse} from \"./response-types\";\n\nconst useSearchNews = (keyword: string) => {\n\n    const [status, setStatus] = useState(Status.LOADING);\n    const [data, setData] = useState<ISearchedArticle[]>([]);\n    const [sortType, setSortType] = useState(SortTypes.relevance);\n    const [totalCount, setTotalCount] = useState(0);\n    const [frequencyData, setFrequencyData] = useState<IFrequencyData | null>(null);\n    const [pendingDateFilter, _setPendingDateFilter] = useState<number>(0);\n    const [dateFilter, _setDateFilter] = useState<number>(0);\n\n    const newSearch = async () => {\n        try {\n            setData([]);\n            setFrequencyData(null);\n            setTotalCount(0);\n            setSortType(SortTypes.relevance);\n            _setPendingDateFilter(0);\n            _setDateFilter(0);\n\n\n            setStatus(Status.LOADING);\n            const json: IResponse = await requestSearchNews(keyword, 0, true);\n            setData(json.data);\n            setFrequencyData(json.frequency);\n            setTotalCount(json.totalCount);\n            setLoadedStatus(json.data.length, json.totalCount);\n        } catch (e) {\n            setStatus(Status.ERROR)\n        }\n    };\n\n    const loadMore = async () => {\n        try {\n            if (status === Status.LOADING) return;\n\n            setStatus(Status.LOADING);\n            const json: IResponse = await requestSearchNews(keyword, data.length, false, sortType, dateFilter);\n\n            let updatedDataLength = 0;\n            setData((prevData) => {\n                updatedDataLength = prevData.length + json.data.length;\n                return [...prevData, ...json.data]\n            });\n            setLoadedStatus(updatedDataLength, json.totalCount)\n        } catch (e) {\n            setStatus(Status.ERROR)\n        }\n    };\n\n    const toggleSort = async (type: SortTypes) => {\n        try {\n            if (status === Status.LOADING) return;\n            if (type === sortType) return;\n            // reset\n            setData([]);\n            setSortType(type);\n\n            //\n            setStatus(Status.LOADING);\n            const json: IResponse = await requestSearchNews(keyword, 0, false, type, dateFilter);\n            setData(json.data);\n            setLoadedStatus(json.data.length, json.totalCount)\n        } catch (e) {\n            setStatus(Status.ERROR)\n        }\n    };\n\n    const setPendingDateFilter = (date: number) => {\n        _setPendingDateFilter(date);\n    };\n\n    const setDateFilter = async (date: number) => {\n        try {\n            if (status === Status.LOADING) return;\n            if (date === dateFilter) return;\n            // reset\n            setData([]);\n            setTotalCount(0);\n            _setPendingDateFilter(0);\n            _setDateFilter(date);\n\n            //\n            setStatus(Status.LOADING);\n            const json: IResponse = await requestSearchNews(keyword, 0, false, sortType, date);\n            setData(json.data);\n            setTotalCount(json.totalCount);\n            setLoadedStatus(json.data.length, json.totalCount)\n        } catch (e) {\n            setStatus(Status.ERROR)\n        }\n    };\n\n    const setLoadedStatus = (updatedDataLength: number, totalCount: number) => {\n        if (updatedDataLength === totalCount && totalCount !== 0) {\n            setStatus(Status.LOADED_NO_MORE)\n        } else if (totalCount === 0) {\n            setStatus(Status.LOADED_EMPTY)\n        } else {\n            setStatus((Status.LOADED_NORMAL))\n        }\n    };\n\n    useEffect(() => {\n        newSearch();\n    }, [keyword]);\n\n    return {\n        status,\n        data,\n        frequencyData,\n        sortType,\n        totalCount,\n        pendingDateFilter,\n        dateFilter,\n        toggleSort,\n        loadMore,\n        setPendingDateFilter,\n        setDateFilter,\n    };\n};\n\nexport default useSearchNews","export default function getDateString(num: number) {\n    const date = new Date(num);\n    return `${date.getFullYear()}/${date.getMonth() + 1}/${date.getDate()}`\n}","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {Box} from \"@material-ui/core\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport getDateString from \"../utilities/get-date-string\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        margin: theme.spacing(1, 0)\n    }\n}));\n\ninterface ResultsCountMessageProps {\n    count: number,\n    keyword: string,\n    currentLength: number,\n    dateFilter: number\n}\n\nconst ResultsCountMessage: React.FC<ResultsCountMessageProps> = ({count, keyword, currentLength, dateFilter}) => {\n    const article = count === 1 ? 'article' : 'articles';\n    const classes = useStyles();\n\n    const dateFilterMessage = dateFilter ? ` on ${getDateString(dateFilter)}` : '';\n\n    return (\n        <Typography variant=\"body1\" component=\"div\" className={classes.root}>\n            <Box fontWeight={700} textAlign={'center'}>\n                {`${count} news ${article} found related to \"${keyword}\"${dateFilterMessage}, displaying 1 - ${currentLength}`}\n            </Box>\n        </Typography>\n    )\n};\n\nexport default ResultsCountMessage","import React from \"react\";\nimport Skeleton from '@material-ui/lab/Skeleton';\n\ninterface LoadingMessageProps {\n\n}\n\nconst LoadingMessage: React.FC<LoadingMessageProps> = () => {\n    return (\n        <Skeleton variant=\"rect\" width={'100%'} height={200} animation=\"wave\"/>\n    )\n};\n\nexport default LoadingMessage","import Typography from \"@material-ui/core/Typography\";\nimport {Box} from \"@material-ui/core\";\nimport React from \"react\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport Button from \"@material-ui/core/Button\";\n\ninterface LoadMoreMessageProps {\n    onClick: () => void\n}\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        margin: theme.spacing(5, 0),\n        width: 300\n    }\n}));\n\nconst LoadMoreMessage: React.FC<LoadMoreMessageProps> = ({onClick}) => {\n    const classes = useStyles();\n\n    return (\n        <Button variant=\"contained\" disableElevation color=\"secondary\" onClick={onClick} className={classes.root}>\n            Load more\n        </Button>\n    )\n};\n\nexport default LoadMoreMessage","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {Box} from \"@material-ui/core\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport Divider from \"@material-ui/core/Divider\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        margin: theme.spacing(2, 0)\n    }\n}));\n\ninterface GenericMessageProps {\n    message: string,\n    divider?: boolean\n}\n\nconst GenericMessage: React.FC<GenericMessageProps> = ({message, divider}) => {\n    const classes = useStyles();\n\n    return (\n        <>\n            <Typography variant=\"body1\" component=\"div\" className={classes.root}>\n                <Box fontWeight={700} textAlign={'center'}>\n                    {message}\n                </Box>\n            </Typography>\n            { divider && <Divider style={{width: '100%'}}/> }\n        </>\n    )\n};\n\nexport default GenericMessage","import React from \"react\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport {createStyles} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => createStyles({\n    highlight: {\n        backgroundColor: theme.palette.secondary.light,\n    }\n}));\n\ninterface HighlightedContentProps {\n    content: string,\n    keyword: string\n}\n\nconst HighlightedContent: React.FC<HighlightedContentProps> = ({content, keyword}) => {\n    const re= new RegExp('('+keyword+')', 'gi');\n    const contentArray = content.split(re);\n\n    const classes = useStyles();\n\n    return (\n        <>\n            {contentArray.map((content, i) => {\n                const isKeyword = i % 2 === 1;\n                return isKeyword ?\n                    <span className={classes.highlight} key={i}>{ content }</span> :\n                    <span key={i}>{ content }</span>\n            })}\n        </>\n    )\n};\n\nexport default HighlightedContent","import React, {RefObject, useEffect, useRef, useState} from \"react\";\nimport {Box, makeStyles} from \"@material-ui/core\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport HighlightedContent from \"./highlighted-content\";\nimport {Skeleton} from \"@material-ui/lab\";\nimport {ISearchedArticle} from \"./requests/response-types\";\n\nconst useGetHeight = () => {\n    const [cardHeight, setCardHeight] = useState(0);\n    const heightRef = useRef<HTMLDivElement>(null);\n\n    useEffect(() => {\n        if (heightRef.current) {\n            const cardHeight = heightRef.current.getBoundingClientRect().height;\n            setCardHeight(cardHeight)\n        }\n    }, [heightRef]);\n\n    return {\n        cardHeight,\n        heightRef\n    }\n};\n\nconst useStyles = makeStyles((theme) => ({\n    cardRoot: {\n        width: '100%',\n        margin: theme.spacing(2, 0),\n    },\n    cardActionArea: {\n        width: '100%',\n        height: '100%',\n        '& a': {\n            width: '100%',\n            height: '100%',\n            display: 'flex',\n            flexDirection: 'row',\n            alignItems: 'center',\n            justifyContent: 'center',\n            '&:visited, &:link': {\n                textDecoration: 'inherit',\n                color: 'inherit',\n                cursor: 'pointer'\n            }\n        }\n    },\n    cardMedia: {\n        width: '20%',\n        height: '100%'\n    },\n    cardContent: {\n        width: '80%',\n        height: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n    }\n}));\n\ninterface SearchedArticleCardProps {\n    article: ISearchedArticle,\n    keyword: string\n}\n\nconst SearchedArticleCard: React.FC<SearchedArticleCardProps> = ({article, keyword}) => {\n    const classes = useStyles();\n    \n    const {cardHeight, heightRef} = useGetHeight();\n    \n    return (\n        <Card className={classes.cardRoot} style={{height: cardHeight ? `${cardHeight}px` : 'auto'}}>\n            <CardActionArea className={classes.cardActionArea}>\n                <a href={article.url} target='_blank' rel=\"noopener noreferrer\">\n                    {\n                        article.urlToImage ?\n                            <CardMedia\n                                component=\"img\"\n                                alt={article.title}\n                                className={classes.cardMedia}\n                                image={article.urlToImage}\n                                title={article.title}\n                            /> :\n                            <Skeleton variant=\"rect\" className={classes.cardMedia}/>\n                    }\n                    <CardContent className={classes.cardContent} ref={heightRef}>\n                        <Typography variant=\"body1\" component=\"h2\">\n                            <Box fontWeight={700}>\n                                <HighlightedContent content={article.title} keyword={keyword}/>\n                            </Box>\n                        </Typography>\n                        <Typography variant=\"body2\" component=\"div\" color=\"textSecondary\">\n                            <Box fontWeight={700}>\n                                {\n                                    new Date(article.publishedAt).toDateString()\n                                }\n                            </Box>\n                        </Typography>\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                            <HighlightedContent content={article.content.replace(/\\[\\+[0-9]+\\schars\\]/ig, '')} keyword={keyword}/>\n                        </Typography>\n                    </CardContent>\n                </a>\n            </CardActionArea>\n        </Card>\n    )\n};\n\nexport default SearchedArticleCard","import React, {useEffect, useState} from \"react\";\nimport {IconButton} from \"@material-ui/core\";\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Fade from \"@material-ui/core/Fade\";\n// @ts-ignore\nimport  smoothscroll from 'smoothscroll-polyfill';\n\n// kick off the polyfill!\nsmoothscroll.polyfill();\n\nconst useActivateByScrollY = () => {\n    const [isActive, setIsActive] = useState(false);\n\n    const handleScroll = () => {\n        if (window.scrollY > window.innerHeight && !isActive) {\n            setIsActive(true);\n        } else if (window.scrollY < window.innerHeight && isActive) {\n            setIsActive(false);\n        }\n    };\n\n    useEffect(() => {\n        document.addEventListener('scroll', handleScroll);\n\n        return () => {\n            document.removeEventListener('scroll', handleScroll);\n        }\n    }, [isActive]);\n\n    return isActive\n};\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        position: 'fixed',\n        zIndex: theme.zIndex.modal,\n        bottom: '50px',\n        right: '50px',\n        backgroundColor: theme.palette.secondary.main,\n        color: '#FFF',\n        transition: theme.transitions.create('background-color opacity'),\n        transform: 'rotate(-90deg)',\n        '&:hover': {\n            backgroundColor: theme.palette.secondary.light,\n        },\n        [theme.breakpoints.down('md')]: {\n            bottom: '15px',\n            right: '15px',\n        }\n    }\n}));\n\ninterface ScrollToTopButtonProps {\n\n}\n\nconst ScrollToTopButton: React.FC<ScrollToTopButtonProps> = () => {\n\n    const classes = useStyles();\n\n    const isActive = useActivateByScrollY();\n    const scrollToTop = () => {\n        window.scroll({ top: 0, left: 0, behavior: 'smooth' });\n    };\n\n    return (\n        <Fade in={isActive}>\n            <Tooltip title=\"Scroll to Top\" className={classes.root}>\n                <IconButton aria-label=\"Scroll to Top\" onClick={scrollToTop}>\n                    <PlayArrowIcon />\n                </IconButton>\n            </Tooltip>\n        </Fade>\n    )\n};\n\nexport default ScrollToTopButton","import {Theme} from \"@material-ui/core\";\nimport * as d3 from \"d3\";\nimport getDateString from \"../components/articles/searched-articles/utilities/get-date-string\";\n\nclass FrequencyChartD3 {\n    dataArray: {\n        bin: number[],\n        frequency: number[]\n    };\n\n    auxArray: {\n        binDate: string[],\n        barTransitionDelay: number[]\n    };\n\n    params: {\n        lightColor: string,\n        darkColor: string,\n        primaryColor: string,\n        backgroundColor: string,\n        TRANSITION_DELAY: number,\n        BAR_TRANSITION_DURATION: number,\n        maxFrequency: number,\n        binLength: number,\n        argWidth: number,\n        selector: string\n    };\n\n    dimension: {\n        svgWidth: number,\n        svgHeight: number,\n        m: {t: number, r: number, b: number, l: number},\n        chartWidth: number,\n        chartHeight: number,\n        chartX: number,\n        chartY: number\n    };\n\n    scales: {\n        x: d3.ScaleBand<string>,\n        y: d3.ScaleLinear<number, number>\n    };\n\n    svg: d3.Selection<SVGSVGElement, unknown, HTMLElement, any>;\n\n    references: {\n        svg: d3.Selection<SVGSVGElement, unknown, HTMLElement, any>,\n        bars: d3.Selection<SVGRectElement, number, SVGGElement, unknown>,\n        axisX: d3.Selection<SVGGElement, unknown, HTMLElement, any>,\n        axisY: d3.Selection<SVGGElement, unknown, HTMLElement, any>,\n        axisXHoverDate: d3.Selection<SVGGElement, unknown, HTMLElement, any>,\n        axisXHoverFrequency: d3.Selection<SVGGElement, unknown, HTMLElement, any>,\n        axisYHover: d3.Selection<SVGGElement, unknown, HTMLElement, any>,\n        hoverDetection: d3.Selection<SVGRectElement, number, SVGGElement, unknown>,\n    };\n\n    axis: {\n        x: d3.Axis<string>,\n        y: d3.Axis<number | {valueOf(): number;}>,\n        xHoverDate: d3.Axis<string>,\n        xHoverFrequency: d3.Axis<string>,\n        yHover: d3.Axis<number | {valueOf(): number;}>,\n    };\n\n    constructor(theme: Theme, bin: number[], frequency: number[], width: number, selector: string) {\n        this.dataArray = {\n            bin,\n            frequency\n        };\n        this.auxArray = {\n            binDate: this.getBinDateArray(bin),\n            barTransitionDelay: this.getBarTransitionDelayArray(500, frequency)\n        };\n        this.params = {\n            lightColor: theme.palette.secondary.light,\n            darkColor: theme.palette.secondary.dark,\n            primaryColor: theme.palette.primary.light,\n            backgroundColor: '#EEE',\n            TRANSITION_DELAY: 500,\n            BAR_TRANSITION_DURATION: 2000,\n            maxFrequency: Math.max.apply(Math, this.dataArray.frequency),\n            binLength: this.dataArray.bin.length,\n            argWidth: width,\n            selector\n        };\n        this.dimension = this.getDimensions(width);\n        this.svg = d3.select(`#${this.params.selector}`).append('svg');\n        this.references = {\n            svg: this.svg,\n            bars: this.svg\n                .append('g')\n                .selectAll('rect').data(this.dataArray.frequency)\n                .enter().append('rect'),\n            axisX: this.svg.append('g'),\n            axisY: this.svg.append('g'),\n            axisXHoverDate: this.svg.append('g'),\n            axisXHoverFrequency: this.svg.append('g'),\n            axisYHover: this.svg.append('g'),\n            hoverDetection: this.svg\n                .append('g')\n                .selectAll('rect').data(this.dataArray.frequency)\n                .enter().append('rect'),\n        };\n        this.scales = {\n            x: d3.scaleBand()\n                .domain(this.dataArray.frequency.map((_, i) => i.toString()))\n                .range([0, this.dimension.chartWidth]),\n            y: d3.scaleLinear()\n                .domain([0, this.params.maxFrequency])\n                .range([this.dimension.chartHeight, 0])\n        };\n        this.axis = {\n            x: d3.axisBottom(this.scales.x),\n            y: d3.axisLeft(this.scales.y),\n            xHoverDate: d3.axisBottom(this.scales.x),\n            xHoverFrequency: d3.axisBottom(this.scales.x),\n            yHover: d3.axisLeft(this.scales.y)\n        };\n        this.setHoverDetectionEventHandlers = this.setHoverDetectionEventHandlers.bind(this);\n    }\n\n    getBinDateArray(binArray: number[]) {\n        return binArray.map(getDateString)\n    }\n\n    getBarTransitionDelayArray(transitionDelay: number, frequencyDataArray: number[]) {\n        const array = [];\n        let delay = transitionDelay;\n        let step = 20;\n        for (let i=0; i<frequencyDataArray.length; i++) {\n            if (frequencyDataArray[i] === 0) {\n                array.push(delay)\n            } else {\n                array.push(delay+=step);\n            }\n        }\n        return array\n    }\n\n    getDimensions(width: number) {\n        const svgWidth = width;\n        const svgHeight = Math.min(Math.round(svgWidth / 3), 200);\n        const m = {t: 10, r: 30, b: 30, l: 30}; // margin\n        const chartWidth = svgWidth - m.l - m.r;\n        const chartHeight = svgHeight - m.t - m.b;\n        const chartX = m.l;\n        const chartY = m.t;\n\n        return {\n            svgWidth,\n            svgHeight,\n            m,\n            chartWidth,\n            chartHeight,\n            chartX,\n            chartY\n        }\n    }\n\n    setSvg() {\n        this.references.svg\n            .attr('width', this.dimension.svgWidth)\n            .attr('height', this.dimension.svgHeight)\n            .style('background', this.params.backgroundColor);\n\n    }\n\n    setBars() {\n        const barWidth = this.scales.x.bandwidth();\n        const barHeight = (d: number) => this.dimension.chartHeight - this.scales.y(d);\n        const barX = (d: number, i: number) => this.dimension.chartX + (this.scales.x(i.toString()) || 0);\n        const barY = (d: number) => this.dimension.chartY + this.dimension.chartHeight - barHeight(d);\n\n        this.references.bars\n            .style('fill', this.params.lightColor)\n            .style('opacity', 0.8)\n            .attr('width', barWidth)\n            .attr('height', 0)\n            .attr('x', barX)\n            .attr('y', this.dimension.chartY + this.dimension.chartHeight);\n\n        this.references.bars\n            .transition()\n            .attr('height', barHeight)\n            .attr('y', barY)\n            .delay((d: number, i: number) => this.auxArray.barTransitionDelay[i])\n            .duration(this.params.BAR_TRANSITION_DURATION)\n            .ease(d3.easeElastic);\n    }\n\n    setAxisX() {\n        this.axis.x\n            .tickSizeOuter(0)\n            .tickFormat((d, i) => this.auxArray.binDate[parseInt(d)])\n            .tickValues([0, Math.floor(this.params.binLength * 0.25), Math.floor(this.params.binLength * 0.5), Math.floor(this.params.binLength * 0.75), this.params.binLength - 1].map(_=>`${_}`));\n        this.references.axisX\n            .style('transform', `translate(${-0.5*this.dimension.svgWidth}px, ${this.dimension.svgHeight + this.dimension.chartY}px)`)\n            .style('opacity', 0)\n            .style('color', this.params.darkColor);\n\n        this.references.axisX.transition()\n            .style('opacity', 1)\n            .style('transform', `translate(${this.dimension.chartX}px, ${this.dimension.chartHeight + this.dimension.chartY}px)`)\n            .delay(this.params.TRANSITION_DELAY)\n            .duration(1000)\n            .ease(d3.easeElastic);\n\n        this.axis.x(this.references.axisX);\n    }\n\n    setAxisY() {\n        this.axis.y\n            .tickSizeOuter(0)\n            .tickFormat(d3.format(\"d\"))\n            .tickValues([0, Math.floor(this.params.maxFrequency * 0.5), this.params.maxFrequency]);\n        this.references.axisY\n            .style('transform', `translate(${this.dimension.chartX}px, ${this.dimension.chartHeight}px)`)\n            .style('opacity', 0)\n            .style('color', this.params.darkColor);\n\n        this.references.axisY.transition()\n            .style('opacity', 1)\n            .style('transform', `translate(${this.dimension.chartX}px, ${this.dimension.chartY}px)`)\n            .delay(this.params.TRANSITION_DELAY)\n            .duration(1000)\n            .ease(d3.easeElastic);\n\n        this.axis.y(this.references.axisY);\n    }\n\n    setAxisXHoverDate() {\n        this.references.axisXHoverDate.style('opacity', 0)\n            .style('transform', `translate(${this.dimension.chartX}px, ${this.dimension.chartHeight + this.dimension.chartY}px)`);\n        this.axis.xHoverDate\n            .tickFormat((d) => this.auxArray.binDate[parseInt(d)]);\n    }\n\n    setAxisXHoverFrequency() {\n        this.references.axisXHoverFrequency.style('opacity', 0);\n        this.axis.xHoverFrequency\n            .tickFormat((d) => `${this.dataArray.frequency[parseInt(d)]}`)\n            .tickSize(0)\n            .tickPadding(-9);\n    }\n\n    setAxisYHover() {\n        this.references.axisYHover.style('opacity', 0)\n            .style('transform', `translate(${this.dimension.chartX}px, ${this.dimension.chartY}px)`);\n        this.axis.yHover\n            .tickFormat(d3.format(\"d\"))\n            .tickSizeInner(-this.dimension.chartWidth-6)\n            .tickSizeOuter(0)\n            .tickPadding(9);\n    }\n\n    setHoverDetection() {\n        const barWidth = this.scales.x.bandwidth();\n        const barX = (d: number, i: number) => this.dimension.chartX + (this.scales.x(i.toString()) || 0);\n\n        this.references.hoverDetection\n            .style('opacity', 0)\n            .attr('width', barWidth)\n            .attr('height', this.dimension.svgHeight)\n            .attr('x', barX)\n            .attr('y', 0);\n\n        this.setHoverDetectionEventHandlers()\n    }\n\n    setHoverDetectionEventHandlers() {\n        this.references.hoverDetection\n            .on('mouseover', (d, i) => {\n                this.axis.yHover.tickValues([d]);\n                this.axis.yHover(this.references.axisYHover);\n\n                this.references.axisYHover\n                    .selectAll(\".tick line\")\n                    .style('transform', `translate(-6px, 0)`)\n                    .style('color', this.params.primaryColor);\n                this.references.axisYHover.selectAll(\".domain\").remove();\n                this.references.axisYHover.style('opacity', 1);\n\n                const gridTextBox = this.references.axisYHover.select<SVGTextElement>('text').node()?.getBBox();\n                if (gridTextBox) {\n                    this.references.axisYHover.selectAll('g.tick').insert('rect',\n                        ':first-child')\n                        .attr('width', gridTextBox.width)\n                        .attr('height', gridTextBox.height)\n                        .attr('x', gridTextBox.x)\n                        .attr('y', gridTextBox.y)\n                        .style('fill', this.params.backgroundColor);\n                }\n\n                this.axis.xHoverDate\n                    .tickValues([`${i}`]);\n                this.axis.xHoverDate(this.references.axisXHoverDate);\n                this.references.axisXHoverDate.selectAll(\".domain\").remove();\n                this.references.axisXHoverDate.style('opacity', 1);\n\n                const hoverDateTextBox = this.references.axisXHoverDate.select<SVGTextElement>('text').node()?.getBBox();\n                if (hoverDateTextBox) {\n                    this.references.axisXHoverDate.selectAll('g.tick').insert('rect',\n                        ':first-child')\n                        .attr('width', hoverDateTextBox.width*1.2)\n                        .attr('height', hoverDateTextBox.height)\n                        .attr('x', hoverDateTextBox.x-0.1*hoverDateTextBox.width)\n                        .attr('y', hoverDateTextBox.y)\n                        .style('fill', this.params.backgroundColor);\n                }\n\n                this.axis.xHoverFrequency\n                    .tickValues([`${i}`]);\n                this.axis.xHoverFrequency(this.references.axisXHoverFrequency);\n                this.references.axisXHoverFrequency.selectAll(\".domain\").remove();\n                this.references.axisXHoverFrequency\n                    .style('transform', `translate(${this.dimension.chartX}px, ${this.scales.y(d) + this.dimension.chartY}px)`)\n                    .style('opacity', 1);\n\n                const bar = this.references.bars.filter((d, index) => index === i);\n                bar.style('fill', this.params.primaryColor);\n            })\n            .on('mouseout', (d, i) => {\n                this.references.axisYHover.style('opacity', 0);\n                this.references.axisXHoverFrequency.style('opacity', 0);\n                this.references.axisXHoverDate.style('opacity', 0);\n\n                this.references.bars.filter((d, index) => index === i)\n                    .style('fill', this.params.lightColor);\n\n            })\n    }\n\n    bindSetDate(setDate: (date: number) => void) {\n        this.references.hoverDetection\n            .on('click', (d, i) => {\n                setDate(this.dataArray.bin[i])\n            })\n    }\n\n    draw() {\n        this.setSvg();\n        this.setBars();\n        this.setAxisX();\n        this.setAxisY();\n        this.setAxisXHoverDate();\n        this.setAxisXHoverFrequency();\n        this.setAxisYHover();\n        this.setHoverDetection();\n    }\n\n    main() {\n        this.draw();\n    }\n}\n\nexport default FrequencyChartD3","import React, {Dispatch, SetStateAction, useEffect, useMemo, useRef} from \"react\";\nimport {makeStyles} from \"@material-ui/core\";\nimport { useTheme } from '@material-ui/core/styles';\nimport FrequencyChartD3 from \"../../../../d3-charts/frequency-chart-d3\";\nimport {IFrequencyData} from \"../requests/response-types\";\n\nconst id = 'keyword-frequency-chart';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        width: '100%'\n    }\n}));\n\ninterface KeywordFrequencyProps {\n    bin: IFrequencyData['bin'],\n    frequency: IFrequencyData['frequency'],\n    setDate: (date: number) => void,\n}\n\nconst KeywordFrequency: React.FC<KeywordFrequencyProps> = ({bin, frequency, setDate}) => {\n    const wrapperRef = useRef<HTMLDivElement>(null);\n    const classes = useStyles();\n    const theme = useTheme();\n\n    useEffect(() => {\n\n        if (!wrapperRef.current) return;\n\n        const chart = new FrequencyChartD3(\n            theme,\n            bin.map(obj => obj.ms),\n            frequency.slice(),\n            wrapperRef.current.getBoundingClientRect().width,\n            id\n        );\n        chart.main();\n        chart.bindSetDate(setDate);\n\n    }, [wrapperRef, bin, frequency]);\n\n    return (\n        <div ref={wrapperRef} className={classes.root} id={id}>\n\n        </div>\n    )\n};\n\nexport default KeywordFrequency","import React, {useState} from \"react\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport SortTypes from \"./sort-types\";\nimport {MenuItem} from \"@material-ui/core\";\n\nconst capitalizeString = (string: string) => {\n    const lowercase = string.toLowerCase();\n    return lowercase.charAt(0).toUpperCase() + lowercase.slice(1);\n\n};\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        minWidth: 200\n    },\n    resetFontSize: {\n        fontSize: theme.typography.fontSize\n    }\n}));\n\nexport interface SortPanelProps{\n    toggleSort: (sortType: SortTypes) => void,\n    sortType: SortTypes\n}\n\nconst SortPanel: React.FC<SortPanelProps> = ({toggleSort, sortType}) => {\n    const classes = useStyles();\n\n    const handleChange = (e: any) => {\n        const newType = e.target.value;\n        if (newType === sortType) return;\n\n        toggleSort(newType);\n    };\n\n    return (\n        <FormControl className={classes.root} color={\"secondary\"}>\n            <InputLabel htmlFor=\"searched-article-sort\">Sort by</InputLabel>\n            <Select\n                value={sortType}\n                onChange={handleChange}\n                inputProps={{\n                    name: 'sort',\n                    id: 'searched-article-sort',\n                }}\n                className={classes.resetFontSize}\n            >\n                <MenuItem value={SortTypes.relevance} className={classes.resetFontSize}>{capitalizeString(SortTypes.relevance)}</MenuItem>\n                <MenuItem value={SortTypes.date} className={classes.resetFontSize}>{capitalizeString(SortTypes.date)}</MenuItem>\n            </Select>\n        </FormControl>\n    )\n};\n\nexport default SortPanel","import React from \"react\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport {Chip} from \"@material-ui/core\";\nimport getDateString from \"../utilities/get-date-string\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport CancelIcon from '@material-ui/icons/Cancel';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        minWidth: 200,\n        borderRadius: 0,\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'center',\n        position: 'relative'\n    },\n    cancelIcon: {\n        position: 'absolute',\n        right: 5\n    }\n}));\n\nexport interface FilterByDateProps{\n    pendingDateFilter: number\n    dateFilter: number,\n    setDateFilter: (date: number) => void,\n}\n\nconst FilterByDate: React.FC<FilterByDateProps> = ({pendingDateFilter, dateFilter, setDateFilter}) => {\n    const classes = useStyles();\n\n    let chip;\n    if (dateFilter) {\n        chip = (\n            <Chip\n                label={`${getDateString(dateFilter)}`}\n                onDelete={() => setDateFilter(0)}\n                classes={{\n                    root: classes.root,\n                }}\n                color={\"secondary\"}\n                deleteIcon={<CancelIcon className={classes.cancelIcon}/>}\n            />\n        )\n    } else if (pendingDateFilter) {\n        chip = (\n            <Chip\n                label={`${getDateString(pendingDateFilter)}`}\n                onClick={() => setDateFilter(pendingDateFilter)}\n                className={classes.root}\n                variant=\"outlined\"\n                color={\"secondary\"}\n            />\n        )\n    } else {\n        chip = (\n            <Chip\n                label={'Use chart to set date'}\n                variant=\"outlined\"\n                disabled\n                className={classes.root}\n            />\n        )\n    }\n\n    return (\n        <>\n            <InputLabel shrink>Filter by date:</InputLabel>\n            {chip}\n        </>\n    )\n};\n\nexport default FilterByDate","import React from \"react\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport SortPanel, {SortPanelProps} from \"./sort-panel\";\nimport FilterByDate, {FilterByDateProps} from \"./filter-by-date\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'flex-end',\n        justifyContent: 'center',\n        [theme.breakpoints.down('md')]: {\n            flexDirection: 'column',\n            alignItems: 'center',\n        }\n    },\n    itemWrapper: {\n        padding: theme.spacing(2),\n        [theme.breakpoints.down('md')]: {\n            padding: theme.spacing(1),\n        }\n    }\n}));\n\ninterface FiltersProps extends SortPanelProps, FilterByDateProps {\n\n}\n\nconst Filters: React.FC<FiltersProps> = ({toggleSort, sortType, pendingDateFilter, dateFilter, setDateFilter}) => {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.itemWrapper}>\n                <SortPanel toggleSort={toggleSort} sortType={sortType}/>\n            </div>\n            <div className={classes.itemWrapper}>\n                <FilterByDate pendingDateFilter={pendingDateFilter} dateFilter={dateFilter} setDateFilter={setDateFilter} />\n            </div>\n        </div>\n    )\n};\n\nexport default Filters","import {Theme} from \"@material-ui/core\";\nimport {CSSProperties} from \"react\";\n\nexport const pageRoot = (theme: Theme): CSSProperties => ({\n    width: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    padding: theme.spacing(2, 0, 15, 0)\n});\n\nexport const page1000WidthWrapper = (theme: Theme): CSSProperties => ({\n    width: '1000px',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    padding: theme.spacing(2),\n    [theme.breakpoints.down('sm')]: {\n        width: '100%'\n    }\n});","import React, {useEffect, useState} from \"react\";\nimport {makeStyles} from \"@material-ui/core\";\nimport useSearchNews from \"./requests/use-search-news\";\nimport Status from \"./utilities/status\";\nimport ResultsCountMessage from \"./message-components/result-count-message\";\nimport LoadingMessage from \"./message-components/loading-message\";\nimport LoadMoreMessage from \"./message-components/load-more-message\";\nimport GenericMessage from \"./message-components/generic-message\";\nimport SearchedArticleCard from \"./searched-article-card\";\nimport ScrollToTopButton from \"./utilities/scroll-to-top-button\";\nimport KeywordFrequency from \"./frequency-chart/keyword-frequency\";\nimport Filters from \"./filters/filters\";\nimport getDateString from \"./utilities/get-date-string\";\nimport {ISearchedArticle, IFrequencyData} from \"./requests/response-types\";\nimport {page1000WidthWrapper, pageRoot} from \"../../../styles/styles\";\n\nconst useShowChartAndFilters = (data: ISearchedArticle[], frequencyData: IFrequencyData | null, keyword: string) => {\n    // reset when new keyword is searched\n    // show chart and filter if initial search found some data\n    // sequential searches on same keyword caused by applied filters\n    // keep chart and filter visible after initial search is made\n\n    const [foundDataOnKeyword, setFoundDataOnKeyword] = useState(false);\n\n    useEffect(() => {\n        if (data.length > 0 && frequencyData) {\n            setFoundDataOnKeyword(true)\n        }\n    }, [data, frequencyData]);\n\n    useEffect(() => {\n        setFoundDataOnKeyword(false)\n    }, [keyword]);\n\n    return foundDataOnKeyword\n};\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        ...pageRoot(theme)\n    },\n    widthWrapper: {\n        ...page1000WidthWrapper(theme)\n    },\n    cardRoot: {\n        width: '100%',\n        margin: theme.spacing(2, 0),\n    },\n    cardActionArea: {\n        width: '100%',\n        height: '100%',\n        '& a': {\n            width: '100%',\n            height: '100%',\n            display: 'flex',\n            flexDirection: 'row',\n            alignItems: 'center',\n            justifyContent: 'center',\n            '&:visited, &:link': {\n                textDecoration: 'inherit',\n                color: 'inherit',\n                cursor: 'pointer'\n            }\n        }\n    },\n    cardMedia: {\n        width: '20%',\n        height: '100%'\n    },\n    cardContent: {\n        width: '80%',\n        height: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n    }\n}));\n\ninterface SearchedArticlesProps {\n    keyword: string\n}\n\nconst SearchedArticles: React.FC<SearchedArticlesProps> = ({keyword}) => {\n\n    const {\n        data,\n        frequencyData,\n        status,\n        sortType,\n        totalCount,\n        pendingDateFilter,\n        dateFilter,\n        setPendingDateFilter,\n        setDateFilter,\n        loadMore,\n        toggleSort\n    } = useSearchNews(keyword);\n    const classes = useStyles();\n\n    const hasData = data.length > 0;\n\n    const notFoundMessage =`No news article related to \"${keyword}\"${dateFilter ? ' on ' + getDateString(dateFilter) : ''} was found`;\n    const endOfResultMessage = 'End of results';\n    const errorMessage = 'Server error please try later';\n\n    const showChartAndFilters = useShowChartAndFilters(data, frequencyData, keyword);\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.widthWrapper}>\n                { showChartAndFilters && frequencyData && <KeywordFrequency bin={frequencyData.bin} frequency={frequencyData.frequency} setDate={setPendingDateFilter}/>}\n                { showChartAndFilters && <Filters sortType={sortType} toggleSort={toggleSort} pendingDateFilter={pendingDateFilter} dateFilter={dateFilter} setDateFilter={setDateFilter}/> }\n                { hasData && <ResultsCountMessage count={totalCount} keyword={keyword} currentLength={data.length} dateFilter={dateFilter}/> }\n                { status === Status.LOADED_EMPTY && <GenericMessage message={notFoundMessage}/>}\n                { status === Status.ERROR && <GenericMessage message={errorMessage}/>}\n                {\n                    hasData &&\n                        data.map((article) =>\n                            <SearchedArticleCard article={article} keyword={keyword} key={article._id}/>\n                        )\n                }\n                { status === Status.LOADING && <LoadingMessage/> }\n                { status === Status.LOADED_NORMAL && <LoadMoreMessage onClick={loadMore}/> }\n                { status === Status.LOADED_NO_MORE && <GenericMessage message={endOfResultMessage} divider/>}\n            </div>\n\n            <ScrollToTopButton />\n        </div>\n    )\n};\n\nexport default SearchedArticles","import {State} from \"./redux/state\";\nimport React, {useEffect, useState} from \"react\";\nimport {Box, makeStyles} from \"@material-ui/core\";\nimport {categories, Category} from \"./redux/actions/category\";\nimport ArticlesContainer from \"./containers/articles-container\";\nimport Attribution from \"./components/attribution\";\nimport CopyLinkSnackBarContainer from \"./containers/copy-link-snackbar-container\";\nimport {fetchArticles} from \"./redux/actions/articles\";\nimport {connect} from \"react-redux\";\nimport Analytics from \"./components/analytics/analytics\";\nimport HeaderContainer from \"./containers/header-container\";\nimport Topic from \"./components/topic/topic\";\nimport SearchedArticles from \"./components/articles/searched-articles/searched-articles\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100vw',\n        maxWidth: '100%',\n        // minHeight: '100vh',\n        // overflowX: 'hidden',\n        // paddingBottom: '10px',\n        // overflowX is causing y-axis scroll problem, pb do the hack,\n        position: 'relative'\n    },\n    attribution: {\n        position: 'absolute',\n        zIndex: theme.zIndex.appBar,\n        left: 10,\n        bottom: 10\n    }\n}));\n\ninterface InnerAppProps extends Pick<State, 'category' | 'articles'> {\n    fetchArticlesAfterMount: () => void,\n    keyword: string\n}\n\nfunction InnerApp(props: InnerAppProps) {\n    const classes = useStyles();\n    const [minHeight, setMinHeight] = useState(window.innerHeight);\n    useEffect(() => {\n        props.fetchArticlesAfterMount()\n    }, []);\n\n    const main = () => {\n        let component;\n        switch (props.category) {\n            case Category.ANALYTICS:\n                component = <Analytics />;\n                break;\n            case Category.SEARCH:\n                component = <SearchedArticles keyword={props.keyword} key={props.keyword}/>;\n                break;\n            case Category.TOPIC:\n                component = <Topic/>;\n                break;\n            default:\n                component = <ArticlesContainer articles={props.articles} />;\n        }\n\n        return component\n    };\n\n    return (\n        <Box className={classes.root} style={{minHeight: `${minHeight}px`}}>\n            <HeaderContainer/>\n            {\n                main()\n            }\n            <div className={classes.attribution}>\n                <Attribution />\n            </div>\n            <CopyLinkSnackBarContainer />\n        </Box>\n    )\n}\nfunction mapStateToProps(state: State) {\n    return {\n        category: state.category,\n        articles: state.articles,\n        keyword: state.searchKeyword\n    }\n}\nfunction mapDispatchToProps(dispatch: any) {\n    return {\n        fetchArticlesAfterMount: () => dispatch(fetchArticles(Category.HEADLINE))\n    }\n}\nconst InnerAppContainer = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(InnerApp);\n\nexport default InnerAppContainer;","import React from 'react';\nimport { Provider } from 'react-redux';\nimport configureStore from \"./redux/configureStore\";\nimport { CssBaseline } from \"@material-ui/core\";\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport theme from './theme';\nimport InnerAppContainer from \"./inner-app\";\n\n\nconst store = configureStore();\n\nfunction App() {\n    return (\n        <Provider store={store}>\n            <ThemeProvider theme={theme}>\n                <CssBaseline />\n                <InnerAppContainer />\n            </ThemeProvider>\n        </Provider>\n    )\n}\n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}