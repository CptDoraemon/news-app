{"version":3,"sources":["redux/actions.ts","redux/reducers.ts","redux/configureStore.ts","components/header/header.tsx","tools/copy-to-clipboard.ts","components/articles/articles.tsx","tools/use-lazy-load.ts","tools/get-publish-time.ts","components/attribution.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Categories","CategoryActions","ArticleActions","categories","NEWS_API","fetchArticles","category","QUERY","dispatch","type","REQUEST_ARTICLES","fetch","encodeURIComponent","then","res","json","errors","IS_ERROR","articles","RECEIVE_ARTICLES","slice","receiveArticles","data","getNews","initState","HEADLINE","isError","isFetching","rootReducers","combineReducers","state","action","SET_CATEGORY","actions","Object","assign","preloadedState","useStyles","makeStyles","theme","tab","flexShrink","flexGrow","color","palette","primary","contrastText","toolbar","textTransform","Header","props","classes","useState","setCategory","AppBar","position","Toolbar","Container","Typography","align","className","variant","component","Tabs","value","indicatorColor","textColor","scrollButtons","headers","map","_","i","Tab","label","key","onClick","dispatcher","clickHandler","copyToClipboard","string","el","document","createElement","setAttribute","style","left","body","appendChild","select","execCommand","removeChild","createStyles","successSnackBar","backgroundColor","green","wrapper","width","margin","breakpoints","down","calcHeight","lines","typography","fontSize","lineHeight","ellipsis","root","content","bottom","right","height","backgroundImage","zIndex","overFlowHidden","overflow","usePrimaryCardStyles","media","skeleton","title","source","articleContent","buttons","useSecondaryCardStyles","Buttons","isSnackbarOpen","setIsSnackbarOpen","closeSnackBar","CardActions","Link","href","url","target","rel","underline","Button","size","Snackbar","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","SnackbarContent","message","id","IconButton","aria-label","Article","ref","useRef","isVisible","setIsVisible","scrollHandlerLastCalledAt","Date","now","checkIsVisible","calledAt","current","rect","getBoundingClientRect","isBefore","top","isAfter","window","innerHeight","useEffect","addEventListener","removeEventListener","useLazyLoad","isPrimaryCard","cardPrimaryClasses","cardSecondaryClasses","cardClasses","Grid","item","xs","md","Card","raised","urlToImage","CardMedia","alt","image","Skeleton","CardContent","gutterBottom","Box","fontWeight","author","date","timePast","getTime","minutes","Math","floor","hours","days","months","years","getPublishTime","publishedAt","replace","useMediaQuery","useTheme","Grow","in","LoadedArticles","article","Articles","Array","from","maxWidth","container","direction","alignContent","justify","spacing","Attribution","mt","mb","mx","Chip","avatar","Avatar","clickable","store","createStore","rootReducer","applyMiddleware","thunkMiddleware","InnerAppContainer","connect","minHeight","createMuiTheme","main","secondary","responsiveFontSizes","h1","fontFamily","join","up","App","ThemeProvider","CssBaseline","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4aba54a3.chunk.js","sourcesContent":["export enum Categories {\n    HEADLINE= `HEADLINE`,\n    BUSINESS= `BUSINESS`,\n    ENTERTAINMENT= `ENTERTAINMENT`,\n    HEALTH= `HEALTH`,\n    SCIENCE= `SCIENCE`,\n    SPORTS= `SPORTS`,\n    TECHNOLOGY= `TECHNOLOGY`,\n}\nexport const categories: Array<keyof typeof Categories> = [\n    `HEADLINE`, `BUSINESS`, `ENTERTAINMENT`, `HEALTH`, `SCIENCE`, `SPORTS`, `TECHNOLOGY`\n];\n\nexport interface ArticleType {\n    source: string,\n    author: string,\n    title: string,\n    description: string,\n    url: string,\n    urlToImage: string,\n    publishedAt: string,\n    content: string\n}\n\nexport enum CategoryActions {\n    SET_CATEGORY = 'SET_CATEGORY'\n}\n\nexport function setCategoryIfNeeded(category: Categories) {\n    return (dispatch: any, getState: any) => {\n        // if (getState().category === category) return;\n        return {\n            type: CategoryActions.SET_CATEGORY,\n            category\n        }\n    };\n}\n\nexport enum ArticleActions {\n    IS_ERROR = 'IS_ERROR',\n    REQUEST_ARTICLES = 'REQUEST_ARTICLES',\n    RECEIVE_ARTICLES = 'RECEIVE_ARTICLES'\n}\n\nfunction requestArticlesFailed() {\n    return {\n        type: ArticleActions.IS_ERROR\n    }\n}\n\nfunction requestArticles() {\n    return {\n        type: ArticleActions.REQUEST_ARTICLES\n    }\n}\n\nfunction receiveArticles(articles: any) {\n    return {\n        type: ArticleActions.RECEIVE_ARTICLES,\n        articles: articles.slice()\n    }\n}\n\nconst NEWS_API = 'https://www.xiaoxihome.com/api/news?query=';\n// const NEWS_API = 'http://localhost:5000/api/news?query=';\n\nexport function fetchArticles(category: keyof typeof Categories) {\n    const QUERY = `\n        {\n            getNews(category: ${category}) {\n                source,\n                author,\n                title,\n                description,\n                url,\n                urlToImage,\n                publishedAt,\n                content\n            }\n        }\n    `;\n\n    return (dispatch: any) => {\n        dispatch(requestArticles());\n        return fetch(NEWS_API + encodeURIComponent(QUERY))\n            .then(res => res.json())\n            .then(json => {\n                if (json.errors) {\n                    dispatch(requestArticlesFailed())\n                } else {\n                    dispatch(receiveArticles(json.data.getNews))\n                }\n            })\n    }\n}","import {ArticleType, ArticleActions, Categories, CategoryActions} from \"./actions\";\nimport { combineReducers } from \"redux\";\n\nexport interface InitState {\n    category: Categories,\n    articles: {\n        isError: boolean,\n        isFetching: boolean,\n        articles: Array<ArticleType>\n    }\n}\n\nexport const initState = {\n    category: Categories.HEADLINE,\n    articles: {\n        isError: false,\n        isFetching: true,\n        articles: []\n    }\n};\n\nfunction category (state = initState.category, action: {type: CategoryActions, category: Categories}) {\n    switch (action.type) {\n        case CategoryActions.SET_CATEGORY:\n            return action.category;\n        default:\n            return state\n    }\n}\n\nfunction articles(state = initState.articles, actions: any) {\n    switch(actions.type) {\n        case ArticleActions.IS_ERROR:\n            return Object.assign({}, state, {isError: true});\n        case ArticleActions.REQUEST_ARTICLES:\n            return Object.assign({}, state, {\n                isError: false,\n                isFetching: true\n            });\n        case ArticleActions.RECEIVE_ARTICLES:\n            return Object.assign({}, {\n                isError: false,\n                isFetching: false,\n                articles: actions.articles.slice()\n            });\n        default:\n            return state\n    }\n}\n\nconst rootReducers = combineReducers({\n    category,\n    articles\n});\n\nexport default rootReducers;","import { createStore, applyMiddleware } from 'redux'\nimport thunkMiddleware from 'redux-thunk'\nimport rootReducer, {initState} from './reducers'\n// import { createLogger } from 'redux-logger'\n// const loggerMiddleware = createLogger();\n\nconst preloadedState = initState;\nexport default function configureStore() {\n    return createStore(\n        rootReducer,\n        preloadedState,\n        applyMiddleware(thunkMiddleware)\n        // applyMiddleware(thunkMiddleware, loggerMiddleware)\n    )\n}","import React, {useState} from \"react\";\nimport {Categories, fetchArticles} from \"../../redux/actions\";\nimport {\n    AppBar,\n    Container,\n\n    makeStyles,\n    Tab,\n    Tabs,\n    Theme,\n    Toolbar,\n    Typography,\n} from \"@material-ui/core\";\n\n\nconst useStyles = makeStyles((theme: Theme) => ({\n    tab: {\n        flexShrink: 0,\n        flexGrow: 1,\n        color: theme.palette.primary.contrastText\n    },\n    toolbar: {\n        textTransform: 'uppercase'\n    }\n}));\n\ninterface HeaderProps {\n    headers: Array<keyof typeof Categories>,\n    dispatcher: any\n}\n\nfunction Header(props: HeaderProps) {\n    const classes = useStyles();\n    const [category, setCategory] = useState(0);\n    const clickHandler = (i: number) => {\n        if (i === category) return;\n        setCategory(i);\n        props.dispatcher(fetchArticles((props.headers[i])));\n    };\n\n    return (\n        <AppBar color=\"primary\" position={'static'}>\n            <Toolbar>\n                <Container>\n                    <Typography align={\"center\"} className={classes.toolbar} variant={\"h1\"} component={'h1'}>\n                        News Canada\n                    </Typography>\n                </Container>\n            </Toolbar>\n                <Tabs\n                    value={category}\n                    indicatorColor=\"secondary\"\n                    textColor=\"secondary\"\n                    variant=\"scrollable\"\n                    scrollButtons=\"auto\"\n                >\n                    {\n                        props.headers.map((_, i) => <Tab label={_} key={i} className={classes.tab} onClick={() => clickHandler(i)}/>)\n                    }\n                </Tabs>\n        </AppBar>\n    )\n}\n\nexport default Header;","function copyToClipboard(string: string) {\n    const el = document.createElement('textarea');\n    el.value = string;\n    el.setAttribute('readonly', '');\n    el.style.position = 'absolute';\n    el.style.left = '-9999px';\n    document.body.appendChild(el);\n    el.select();\n    document.execCommand('copy');\n    document.body.removeChild(el);\n}\n\nexport default copyToClipboard;","import React, {CSSProperties, useRef, useState} from \"react\";\nimport {\n    Box,\n    Button,\n    Card,\n    CardActions,\n    CardContent,\n    CardMedia, createStyles,\n    Grid, IconButton, Link,\n    makeStyles, Snackbar, SnackbarContent, Theme,\n    Typography, useMediaQuery, useTheme, Grow,\n} from \"@material-ui/core\";\nimport Close from '@material-ui/icons/Close';\nimport { green } from '@material-ui/core/colors';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport {InitState} from \"../../redux/reducers\";\nimport {ArticleType} from \"../../redux/actions\";\nimport useLazyLoad from \"../../tools/use-lazy-load\";\nimport getPublishTime from \"../../tools/get-publish-time\";\nimport copyToClipboard from \"../../tools/copy-to-clipboard\";\nimport {ThemeStyle} from \"@material-ui/core/styles/createTypography\";\n\nconst useStyles = makeStyles((theme) => createStyles({\n    successSnackBar: {\n        backgroundColor: green[600]\n    },\n    wrapper: {\n        width: 'calc(100% - 40px)',\n        margin: '20px',\n    },\n    [theme.breakpoints.down(\"sm\")]: {\n        wrapper: {\n            width: 'calc(100% - 16px)',\n            margin: '8px'\n        },\n    },\n}));\n\nfunction calcHeight(lines: number, variant: ThemeStyle, theme: Theme): CSSProperties['height'] {\n    return `calc(${lines} * ${theme.typography[variant].fontSize} * ${theme.typography[variant].lineHeight})`;\n}\n\nfunction ellipsis(variant: ThemeStyle, theme: Theme) {\n    return createStyles({\n        root: {\n            position: 'relative',\n            '&:after': {\n                content: \"''\",\n                position: 'absolute',\n                bottom: 0,\n                right: 0,\n                width: '20%',\n                height: calcHeight(1, variant, theme),\n                backgroundImage: 'linear-gradient(to right, rgba(255, 255, 255, 0) , rgba(255, 255, 255, 1))',\n                zIndex: 10\n            },\n        }\n    })\n}\n\nconst overFlowHidden: CSSProperties = {\n    width: '100%',\n    overflow: 'hidden',\n    position: 'relative'\n};\n\nconst usePrimaryCardStyles = makeStyles((theme) => createStyles({\n    media: {\n        height: '550px',\n        ...overFlowHidden,\n    },\n    skeleton: {\n        height: '550px',\n        ...overFlowHidden,\n    },\n    title: {\n        height: calcHeight(1, 'body1', theme),\n        ...ellipsis('body1', theme).root,\n        ...overFlowHidden,\n    },\n    source: {\n        height: calcHeight(1, 'body2', theme),\n        ...overFlowHidden,\n    },\n    articleContent: {\n        height: calcHeight(2, 'body2', theme),\n        ...ellipsis('body2', theme).root,\n        ...overFlowHidden,\n    },\n    buttons: {\n        ...overFlowHidden,\n    },\n    [theme.breakpoints.down(\"sm\")]: {\n        media: {\n            height: '200px',\n        },\n        skeleton: {\n            height: '200px',\n        },\n    }\n}));\n\n\n\nconst useSecondaryCardStyles = makeStyles((theme) => createStyles({\n    media: {\n        height: '200px',\n        ...overFlowHidden,\n    },\n    skeleton: {\n        height: '200px',\n        ...overFlowHidden,\n    },\n    title: {\n        height: calcHeight(2, 'body1', theme),\n        ...ellipsis('body1', theme).root,\n        ...overFlowHidden,\n    },\n    source: {\n        height: calcHeight(1, 'body2', theme),\n        ...overFlowHidden,\n    },\n    articleContent: {\n        height: calcHeight(3, 'body2', theme),\n        ...ellipsis('body2', theme).root,\n        ...overFlowHidden,\n    },\n    buttons: {\n        ...overFlowHidden,\n    },\n    [theme.breakpoints.down(\"sm\")]: {\n\n    }\n}));\n\ninterface ButtonsProps {\n    url: string,\n    className: string\n}\n\n\nfunction Buttons(props: ButtonsProps) {\n    const classes = useStyles();\n    const [isSnackbarOpen, setIsSnackbarOpen] = useState(false);\n    function openSnackBar() {\n        copyToClipboard(props.url);\n        setIsSnackbarOpen(true);\n    }\n    function closeSnackBar() {\n        setIsSnackbarOpen(false);\n    }\n\n    return (\n        <CardActions className={props.className}>\n            <Link href={props.url} target={'_blank'} rel=\"noopener\" underline={\"none\"}>\n                <Button size=\"small\" color=\"primary\">\n                    Learn more\n                </Button>\n            </Link>\n            <Button size=\"small\" color=\"primary\" onClick={openSnackBar}>Share</Button>\n            <Snackbar\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'center',\n                }}\n                open={isSnackbarOpen}\n                autoHideDuration={3000}\n                onClose={closeSnackBar}\n            >\n                    <SnackbarContent\n                        className={classes.successSnackBar}\n                        message={\n                        <span id=\"client-snackbar\">\n                            Link copied to clipboard\n                        </span>\n                    }\n                        action={[\n                        <IconButton key=\"close\" aria-label=\"close\" color=\"inherit\" onClick={closeSnackBar}>\n                            <Close/>\n                        </IconButton>,\n                        ]}\n                    />\n            </Snackbar>\n        </CardActions>\n    )\n}\n\ninterface ArticleProps extends ArticleType {\n    id: number,\n}\n\nfunction Article(props: ArticleProps) {\n    const ref = useRef(null);\n    const isVisible = useLazyLoad(ref);\n\n    const isPrimaryCard = props.id === 0 || props.id === 1;\n    const cardPrimaryClasses = usePrimaryCardStyles();\n    const cardSecondaryClasses = useSecondaryCardStyles();\n    const cardClasses = isPrimaryCard ? cardPrimaryClasses : cardSecondaryClasses;\n\n    const content = (\n        <Grid\n            item\n            xs={12}\n            md={isPrimaryCard ? 6 : 3}\n            ref={ref}\n        >\n            <Card raised>\n                {\n                    isVisible && props.urlToImage?\n                        <CardMedia\n                            component=\"img\"\n                            alt={props.title}\n                            className={cardClasses.media}\n                            image={props.urlToImage}\n                            title={props.title}\n                        /> :\n                        <Skeleton variant={\"rect\"} className={cardClasses.skeleton} />\n                }\n\n                <CardContent>\n                    <Typography gutterBottom variant=\"body1\" component=\"h2\" className={cardClasses.title}>\n                        <Box fontWeight={700}>\n                            { props.title }\n                        </Box>\n                    </Typography>\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" className={cardClasses.source}>\n                        <Box component={'span'} fontWeight={700}>\n                            { props.source ? props.source + ' - ' : props.author ? props.author + ' - ' : '' }\n                            { getPublishTime(new Date(props.publishedAt)) }\n                        </Box>\n                    </Typography>\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" className={cardClasses.articleContent}>\n                        { props.content && props.content.replace(/\\[\\+[0-9]+\\schars\\]/ig, '') }\n                    </Typography>\n                </CardContent>\n                <Buttons url={props.url} className={cardClasses.buttons}/>\n            </Card>\n        </Grid>\n    );\n\n    return useMediaQuery(useTheme().breakpoints.down('md')) ? content : (\n        <Grow in={isVisible}>\n            { content }\n        </Grow>\n    )\n}\n\ninterface LoadedArticlesProps {\n    articles: Array<ArticleType>\n}\n\nfunction LoadedArticles(props: LoadedArticlesProps) {\n    return (\n        <>\n            {\n                props.articles.map((article, i) => {\n                    return (\n                        <Article {...article} key={i} id={i}/>\n                    )\n                })\n            }\n        </>\n    )\n}\n\ninterface ArticlesProps extends Pick<InitState, 'articles'> {\n\n}\n\nfunction Articles(props: ArticlesProps) {\n    const classes = useStyles();\n    let content;\n    if (props.articles.isError) {\n        content = (\n            <div>\n                error\n            </div>\n        )\n    } else if (props.articles.isFetching) {\n        content = (\n            <>\n                {\n                    Array.from(Array(10), (_, i) => {\n                        return (\n                            <Grid item key={i}>\n                                <Box width={500} height={300} maxWidth={'100%'}>\n                                    <Skeleton variant={\"rect\"} width={500} height={200}/>\n                                    <Skeleton width={500}/>\n                                    <Skeleton width={500}/>\n                                </Box>\n                            </Grid>\n                        )\n                    })\n                }\n            </>\n        )\n    } else {\n        content = <LoadedArticles articles={props.articles.articles}/>\n    }\n\n    return (\n        <Box className={classes.wrapper}>\n            <Grid container direction={\"row\"} alignContent={\"center\"} justify={\"center\"} spacing={2}>\n                { content }\n            </Grid>\n        </Box>\n    )\n}\n\nexport default Articles;","import React, {useEffect, useState} from \"react\";\n\nexport default function useLazyLoad(ref: React.RefObject<HTMLInputElement>): boolean {\n    const [isVisible, setIsVisible] = useState(false);\n    let scrollHandlerLastCalledAt = Date.now() - 1000;\n\n    function checkIsVisible() {\n        const calledAt = Date.now();\n        if (calledAt - scrollHandlerLastCalledAt < 20) {\n            return\n        } else {\n            scrollHandlerLastCalledAt = calledAt\n        }\n        if (!ref.current) return;\n\n        const rect = ref.current.getBoundingClientRect();\n        const isBefore = rect.top + rect.height < 0;\n        const isAfter = rect.top > window.innerHeight;\n        if (!isBefore && !isAfter) setIsVisible(true);\n    }\n\n    useEffect(() => {\n        if (isVisible) return;\n        checkIsVisible();\n        document.addEventListener('scroll', checkIsVisible);\n        return () => {\n            document.removeEventListener('scroll', checkIsVisible);\n        }\n    });\n\n    return isVisible;\n}","export default function getPublishTime(date: Date): string{\n    const timePast = Date.now() - date.getTime();\n    if (timePast < 0) {\n        return 'now'\n    }\n    const minutes = Math.floor(timePast / (60 * 1000));\n    if (minutes <= 59) {\n        return `${minutes} ${minutes === 1 ? 'minute' : 'minutes'} ago`\n    }\n    const hours = Math.floor(timePast / (60 * 60 * 1000));\n    if (hours <= 23) {\n        return `${hours} ${hours === 1 ? 'hour' : 'hours'} ago`\n    }\n    const days = Math.floor(timePast / (24 * 60 * 60 * 1000));\n    if (days <= 30) {\n        return `${days} ${days === 1 ? 'day' : 'days'} ago`\n    }\n    const months = Math.floor(timePast / (30 * 24 * 60 * 60 * 1000));\n    if (months <= 12) {\n        return `${months} ${months === 1 ? 'month' : 'months'} ago`\n    }\n    const years = Math.floor(timePast / (365 * 24 * 60 * 60 * 1000));\n    return `${years} ${years === 1 ? 'year' : 'years'} ago`\n}","import React from \"react\";\nimport {Avatar, Box, Chip, Grid, Link} from \"@material-ui/core\";\n\nfunction Attribution() {\n    return (\n        <Box mt={10} mb={2} mx={2}>\n            <Grid container direction={'row'} spacing={2}>\n                <Grid item>\n                    <Link href={'https://www.xiaoxihome.com/'} target={'_blank'} rel=\"noopener\" underline={\"none\"}>\n                        <Chip\n                            avatar={<Avatar>X</Avatar>}\n                            label=\"🔧 with ❤️ by XiaoxiHome\"\n                            color=\"primary\"\n                            clickable\n                        />\n                    </Link>\n                </Grid>\n                <Grid item>\n                    <Link href={'https://newsapi.org/'} target={'_blank'} rel=\"noopener\" underline={\"none\"}>\n                        <Chip\n                            avatar={<Avatar>N</Avatar>}\n                            label=\"News data courtesy of NewsAPI.org\"\n                            color=\"secondary\"\n                            clickable\n                        />\n                    </Link>\n                </Grid>\n            </Grid>\n        </Box>\n    )\n}\n\nexport default Attribution;","import React, {useEffect} from 'react';\nimport {connect, Provider} from 'react-redux';\nimport configureStore from \"./redux/configureStore\";\nimport {InitState} from \"./redux/reducers\";\nimport {categories, Categories, fetchArticles} from \"./redux/actions\";\nimport {Box, CssBaseline} from \"@material-ui/core\";\nimport {\n    createMuiTheme,\n    responsiveFontSizes,\n    ThemeProvider,\n} from '@material-ui/core/styles';\nimport Header from \"./components/header/header\";\nimport Articles from \"./components/articles/articles\";\nimport Attribution from \"./components/attribution\";\n\n\nconst store = configureStore();\n\ninterface InnerAppProps extends InitState{\n    dispatch: any,\n}\n\nfunction InnerApp(props: InnerAppProps) {\n    useEffect(() => {\n        props.dispatch(fetchArticles(Categories.HEADLINE))\n    }, []);\n    return (\n        <Box width={'100vw'} minHeight={'100vh'} maxWidth={'100%'}>\n            <Header headers={categories} dispatcher={props.dispatch}/>\n            <Articles articles={props.articles}/>\n            <Attribution />\n        </Box>\n    )\n}\nfunction mapStateToProps(state: InitState) {\n    return state\n}\nconst InnerAppContainer = connect(mapStateToProps)(InnerApp);\nlet theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: '#333333',\n            contrastText: '#fff',\n        },\n        secondary: {\n            main: '#1EB980',\n            contrastText: '#fff',\n        },\n    },\n});\ntheme = responsiveFontSizes(theme);\ntheme.typography.h1 = {\n    fontFamily: [\n        'Anton',\n        'sans-serif',\n    ].join(','),\n    fontWeight: 400,\n    fontSize: '2rem',\n    [theme.breakpoints.up('md')]: {\n        fontSize: '2.5rem',\n    },\n    fontStyle: \"normal\",\n    color: \"inherit\"\n};\n\nfunction App() {\n    return (\n        <Provider store={store}>\n            <ThemeProvider theme={theme}>\n                <CssBaseline />\n                <InnerAppContainer />\n            </ThemeProvider>\n        </Provider>\n    )\n}\n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}