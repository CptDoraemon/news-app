{"version":3,"sources":["redux/actions/articles.ts","redux/actions/category.ts","redux/state.ts","redux/reducers/category.ts","redux/reducers/articles.ts","redux/actions/copy-link-snackbar.ts","redux/reducers/copy-link-snackbar.ts","redux/reducers/root-reducers.ts","redux/configureStore.ts","theme.tsx","components/header/header.tsx","tools/copy-to-clipboard.ts","tools/use-swipeable.ts","components/utility-components/swipeable.tsx","components/articles/articles.tsx","tools/use-lazy-load.ts","tools/get-publish-time.ts","containers/articles-container.tsx","components/attribution.tsx","components/copy-link-snackbar.tsx","containers/copy-link-snackbar-container.tsx","inner-app.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["ArticleActionsTypes","Category","fetchArticles","category","QUERY","dispatch","type","REQUEST_ARTICLES","fetch","encodeURIComponent","then","res","json","errors","IS_ERROR","articles","RECEIVE_ARTICLES","slice","receiveArticles","data","getNews","CategoryActionsType","categories","setCategoryAndFetchArticles","SET_CATEGORY","setCategory","initState","HEADLINE","isError","isFetching","copyLinkSnackBar","isActive","state","action","CopyLinkSnackbarActionsTypes","actions","Object","assign","copyLinkSnackbar","CLOSE_SNACKBAR","OPEN_SNACKBAR","rootReducers","combineReducers","preloadedState","theme","createMuiTheme","palette","primary","main","contrastText","secondary","responsiveFontSizes","typography","h1","fontFamily","join","fontWeight","fontSize","breakpoints","up","useStyles","makeStyles","tab","flexShrink","flexGrow","color","toolbar","textTransform","Header","props","classes","dispatcher","useDispatch","clickHandler","getState","setCategoryIfNeeded","AppBar","position","Toolbar","Container","Typography","align","className","variant","component","Tabs","value","headers","indexOf","indicatorColor","textColor","scrollButtons","map","_","i","Tab","label","key","onClick","copyToClipboard","UseSwipeableDirections","string","el","document","createElement","setAttribute","style","left","body","appendChild","select","execCommand","removeChild","DEBOUNCER","useSwipeable","ref","threshholdPx","useState","x1","setX1","y1","setY1","NULL","direction","setDirection","dragDistance","setDragDistance","Date","now","touchMoveLastTriggered","setTouchMoveLastTriggered","touchStartHandler","e","changedTouches","clientX","clientY","touchMoveHandler","currentX","currentY","Math","abs","cancelable","preventDefault","touchEndHandler","RIGHT","LEFT","useEffect","currentElement","current","addEventListener","removeEventListener","resetSwipeStatus","SwipeableContainer","connect","setPreviousCategory","currentCategory","currentIndex","length","setNextCategory","isLast","containerRef","useRef","width","transform","children","createStyles","wrapper","margin","down","calcHeight","lines","lineHeight","ellipsis","root","content","bottom","right","height","backgroundImage","zIndex","overFlowHidden","overflow","usePrimaryCardStyles","media","skeleton","title","source","articleContent","buttons","useSecondaryCardStyles","Buttons","CardActions","Link","href","url","target","rel","underline","Button","size","openCopyLinkSnackBar","Article","isVisible","setIsVisible","scrollHandlerLastCalledAt","checkIsVisible","calledAt","rect","getBoundingClientRect","isBefore","top","isAfter","window","innerHeight","useLazyLoad","isMounted","setIsMounted","isTransitionAnimationNeeded","useMediaQuery","useTheme","isPrimaryCard","id","cardPrimaryClasses","cardSecondaryClasses","cardClasses","setTimeout","Grid","item","xs","md","Card","raised","urlToImage","CardMedia","alt","image","Skeleton","CardContent","gutterBottom","Box","author","date","timePast","getTime","minutes","floor","hours","days","months","years","getPublishTime","publishedAt","replace","Zoom","in","LoadedArticles","article","Articles","minHeight","Array","from","maxWidth","container","alignContent","justify","spacing","ArticlesContainer","Attribution","mt","mb","mx","Chip","avatar","Avatar","clickable","successSnackBar","backgroundColor","green","CopyLinkSnackbar","closeHandlder","closeCopyLinkSnackBar","Snackbar","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","SnackbarContent","message","IconButton","aria-label","CopyLinkSnackBarContainer","overflowX","paddingBottom","InnerAppContainer","fetchArticlesAfterMount","store","createStore","applyMiddleware","thunkMiddleware","App","ThemeProvider","CssBaseline","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2834aa84.chunk.js","sourcesContent":["import {Action, ActionCreator, AnyAction} from \"redux\";\nimport { Category } from './category';\nimport {State} from \"../state\";\nimport {ThunkDispatch} from \"redux-thunk\";\n\nexport interface Article {\n    source: string,\n    author: string,\n    title: string,\n    description: string,\n    url: string,\n    urlToImage: string,\n    publishedAt: string,\n    content: string\n}\n\n\nexport enum ArticleActionsTypes {\n    IS_ERROR = 'IS_ERROR',\n    REQUEST_ARTICLES = 'REQUEST_ARTICLES',\n    RECEIVE_ARTICLES = 'RECEIVE_ARTICLES'\n}\n\nexport interface ArticlesRequestFailedAction {\n    type: ArticleActionsTypes.IS_ERROR\n}\n\nconst requestArticlesFailed: ActionCreator<ArticlesRequestFailedAction> = () => {\n    return {\n        type: ArticleActionsTypes.IS_ERROR\n    }\n};\n\nexport interface ArticlesRequestAction {\n    type: ArticleActionsTypes.REQUEST_ARTICLES\n}\n\nconst requestArticles: ActionCreator<ArticlesRequestAction> = () => {\n    return {\n        type: ArticleActionsTypes.REQUEST_ARTICLES\n    }\n};\n\nexport interface ArticlesReceiveAction {\n    type: ArticleActionsTypes.RECEIVE_ARTICLES,\n    articles: Array<Article>\n}\n\nconst receiveArticles: ActionCreator<ArticlesReceiveAction> = (articles: Array<Article>) => {\n    return {\n        type: ArticleActionsTypes.RECEIVE_ARTICLES,\n        articles: articles.slice()\n    }\n};\n\nconst NEWS_API = 'https://www.xiaoxihome.com/api/news?query=';\n\nexport const fetchArticles = (category: Category) => {\n    const QUERY = `\n        {\n            getNews(category: ${category}) {\n                source,\n                author,\n                title,\n                description,\n                url,\n                urlToImage,\n                publishedAt,\n                content\n            }\n        }\n    `;\n\n    return (dispatch: ThunkDispatch<State, null, AnyAction>) => {\n        dispatch(requestArticles());\n        return fetch(NEWS_API + encodeURIComponent(QUERY))\n            .then(res => res.json())\n            .then(json => {\n                if (json.errors) {\n                    dispatch(requestArticlesFailed())\n                } else {\n                    dispatch(receiveArticles(json.data.getNews))\n                }\n            })\n    }\n};\n\nexport type ArticlesActions =  ArticlesRequestAction | ArticlesRequestFailedAction | ArticlesReceiveAction;","import {fetchArticles} from \"./articles\";\nimport {ActionCreator, AnyAction} from \"redux\";\nimport {ThunkDispatch} from \"redux-thunk\";\nimport {State} from \"../state\";\n\nexport enum Category {\n    HEADLINE= `HEADLINE`,\n    BUSINESS= `BUSINESS`,\n    ENTERTAINMENT= `ENTERTAINMENT`,\n    HEALTH= `HEALTH`,\n    SCIENCE= `SCIENCE`,\n    SPORTS= `SPORTS`,\n    TECHNOLOGY= `TECHNOLOGY`,\n}\n\nexport type Categories = Array<keyof typeof Category>;\n\nexport const categories: Categories = [\n    `HEADLINE`, `BUSINESS`, `ENTERTAINMENT`, `HEALTH`, `SCIENCE`, `SPORTS`, `TECHNOLOGY`\n];\n\nexport enum CategoryActionsType {\n    SET_CATEGORY = 'SET_CATEGORY'\n}\n\nexport interface CategoryActions {\n    type: CategoryActionsType,\n    category: Category\n}\n\nconst setCategory: ActionCreator<CategoryActions> = (category: Category) => {\n    return {\n        type: CategoryActionsType.SET_CATEGORY,\n        category\n    }\n};\n\nconst setCategoryAndFetchArticles = (category: Category) => {\n    return (dispatch: ThunkDispatch<State, null, AnyAction>) => {\n        dispatch(setCategory(category));\n        dispatch(fetchArticles(category));\n    };\n};\n\nexport function setNextCategory() {\n    return (dispatch: ThunkDispatch<State, null, AnyAction>, getState: () => State) => {\n        const currentCategory = getState().category;\n        const currentIndex = categories.indexOf(currentCategory);\n        const isLast = currentIndex === categories.length - 1;\n        if (isLast) {\n            dispatch(setCategoryAndFetchArticles(Category[categories[0]]));\n        } else {\n            dispatch(setCategoryAndFetchArticles(Category[categories[currentIndex + 1]]));\n        }\n    };\n}\n\nexport function setPreviousCategory() {\n    return (dispatch: ThunkDispatch<State, null, AnyAction>, getState: () => State) => {\n        const currentCategory = getState().category;\n        const currentIndex = categories.indexOf(currentCategory);\n        const isFirst = currentIndex === 0;\n        if (isFirst) {\n            dispatch(setCategoryAndFetchArticles(Category[categories[categories.length - 1]]));\n        } else {\n            dispatch(setCategoryAndFetchArticles(Category[categories[currentIndex - 1]]));\n        }\n    };\n}\n\nexport function setCategoryIfNeeded(category: Category) {\n    return (dispatch: ThunkDispatch<State, null, AnyAction>, getState: () => State) => {\n        if (getState().category === category) return;\n        dispatch(setCategoryAndFetchArticles(category));\n    };\n}\n","import {Category} from \"./actions/category\";\nimport {Article} from \"./actions/articles\";\n\nexport interface State {\n    category: Category,\n    articles: {\n        isError: boolean,\n        isFetching: boolean,\n        articles: Array<Article>\n    },\n    copyLinkSnackBar: {\n        isActive: boolean\n    }\n}\n\nexport const initState: State = {\n    category: Category.HEADLINE,\n    articles: {\n        isError: false,\n        isFetching: true,\n        articles: []\n    },\n    copyLinkSnackBar: {\n        isActive: false\n    }\n};","import {initState, State} from \"../state\";\nimport {Category, CategoryActions, CategoryActionsType} from \"../actions/category\";\n\nfunction category(state = initState.category, action: CategoryActions): State['category'] {\n    switch (action.type) {\n        case CategoryActionsType.SET_CATEGORY:\n            return Category[action.category];\n        default:\n            return state\n    }\n}\n\nexport default category;","import {initState, State} from \"../state\";\nimport {ArticleActionsTypes, ArticlesActions} from \"../actions/articles\";\n\nfunction articles(state = initState.articles, actions: ArticlesActions): State['articles'] {\n    switch(actions.type) {\n        case ArticleActionsTypes.IS_ERROR:\n            return Object.assign({}, state, {isError: true});\n        case ArticleActionsTypes.REQUEST_ARTICLES:\n            return Object.assign({}, state, {\n                isError: false,\n                isFetching: true\n            });\n        case ArticleActionsTypes.RECEIVE_ARTICLES:\n            return Object.assign({}, {\n                isError: false,\n                isFetching: false,\n                articles: actions.articles.slice()\n            });\n        default:\n            return state\n    }\n}\n\nexport default articles;","export enum CopyLinkSnackbarActionsTypes {\n    CLOSE_SNACKBAR = 'CLOSE_SNACKBAR',\n    OPEN_SNACKBAR = 'OPEN_SNACKBAR'\n}\n\nexport interface CopyLinkSnackBarActions {\n    type: CopyLinkSnackbarActionsTypes\n}\n\nexport function closeCopyLinkSnackBar() {\n    return {\n        type: CopyLinkSnackbarActionsTypes.CLOSE_SNACKBAR\n    }\n}\n\nexport function openCopyLinkSnackBar() {\n    return {\n        type: CopyLinkSnackbarActionsTypes.OPEN_SNACKBAR\n    }\n}","import {CopyLinkSnackBarActions, CopyLinkSnackbarActionsTypes} from \"../actions/copy-link-snackbar\";\nimport {State, initState} from \"../state\";\n\nfunction copyLinkSnackbar(state = initState.copyLinkSnackBar, actions: CopyLinkSnackBarActions): State['copyLinkSnackBar'] {\n    switch(actions.type) {\n        case CopyLinkSnackbarActionsTypes.CLOSE_SNACKBAR:\n            return {\n                isActive: false\n            };\n        case CopyLinkSnackbarActionsTypes.OPEN_SNACKBAR:\n            return {\n                isActive: true\n            };\n        default:\n            return state\n    }\n}\n\nexport default copyLinkSnackbar","import {combineReducers} from \"redux\";\nimport category from \"./category\";\nimport articles from \"./articles\";\nimport copyLinkSnackBar from \"./copy-link-snackbar\"\n\nconst rootReducers = combineReducers({\n    category,\n    articles,\n    copyLinkSnackBar\n});\n\nexport default rootReducers;","import { createStore, applyMiddleware } from 'redux'\nimport thunkMiddleware from 'redux-thunk'\nimport {initState} from \"./state\";\nimport rootReducers from \"./reducers/root-reducers\";\n\n// import { createLogger } from 'redux-logger'\n// const loggerMiddleware = createLogger();\n\nconst preloadedState = initState;\nexport default function configureStore() {\n    return createStore(\n        rootReducers,\n        preloadedState,\n        applyMiddleware(thunkMiddleware)\n        // applyMiddleware(thunkMiddleware, loggerMiddleware)\n    )\n}","import {createMuiTheme, responsiveFontSizes} from \"@material-ui/core/styles\";\n\nlet theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: '#333333',\n            contrastText: '#fff',\n        },\n        secondary: {\n            main: '#1EB980',\n            contrastText: '#fff',\n        },\n    },\n});\ntheme = responsiveFontSizes(theme);\ntheme.typography.h1 = {\n    fontFamily: [\n        'Anton',\n        'sans-serif',\n    ].join(','),\n    fontWeight: 400,\n    fontSize: '2rem',\n    [theme.breakpoints.up('md')]: {\n        fontSize: '2.5rem',\n    },\n    fontStyle: \"normal\",\n    color: \"inherit\"\n};\n\nexport default theme;","import React from \"react\";\nimport {AppBar, Container, makeStyles, Tab, Tabs, Theme, Toolbar, Typography,} from \"@material-ui/core\";\nimport {Categories, Category, setCategoryIfNeeded} from \"../../redux/actions/category\";\nimport {useDispatch} from \"react-redux\";\n\n\nconst useStyles = makeStyles((theme: Theme) => ({\n    tab: {\n        flexShrink: 0,\n        flexGrow: 1,\n        color: theme.palette.primary.contrastText\n    },\n    toolbar: {\n        textTransform: 'uppercase'\n    }\n}));\n\ninterface HeaderProps {\n    headers: Categories\n    category: Category\n}\n\nfunction Header(props: HeaderProps) {\n    const classes = useStyles();\n    const dispatcher = useDispatch();\n\n    const clickHandler = (category: Category) => {\n        dispatcher(setCategoryIfNeeded(category));\n    };\n\n    return (\n        <AppBar color=\"primary\" position={'static'}>\n            <Toolbar>\n                <Container>\n                    <Typography align={\"center\"} className={classes.toolbar} variant={\"h1\"} component={'h1'}>\n                        News Canada\n                    </Typography>\n                </Container>\n            </Toolbar>\n                <Tabs\n                    value={props.headers.indexOf(props.category)}\n                    indicatorColor=\"secondary\"\n                    textColor=\"secondary\"\n                    variant=\"scrollable\"\n                    scrollButtons=\"auto\"\n                >\n                    {\n                        props.headers.map((_, i) => <Tab label={_} key={i} className={classes.tab} onClick={() => clickHandler(Category[_])}/>)\n                    }\n                </Tabs>\n        </AppBar>\n    )\n}\n\nexport default Header;","function copyToClipboard(string: string) {\n    const el = document.createElement('textarea');\n    el.value = string;\n    el.setAttribute('readonly', '');\n    el.style.position = 'absolute';\n    el.style.left = '-9999px';\n    document.body.appendChild(el);\n    el.select();\n    document.execCommand('copy');\n    document.body.removeChild(el);\n}\n\nexport default copyToClipboard;","import {RefObject, useEffect, useState} from \"react\";\n\nexport enum UseSwipeableDirections {\n    NULL= 'NULL',\n    LEFT = 'LEFT',\n    RIGHT = 'RIGHT'\n}\n\nconst DEBOUNCER = 10;\n\nfunction useSwipeable(ref: RefObject<HTMLInputElement>, threshholdPx: number) {\n    const [x1, setX1] = useState(0);\n    const [y1, setY1] = useState(0);\n    const [direction, setDirection] = useState(UseSwipeableDirections.NULL);\n    const [dragDistance, setDragDistance] = useState(0);\n    const [touchMoveLastTriggered, setTouchMoveLastTriggered] = useState(Date.now());\n\n    function touchStartHandler(e: TouchEvent) {\n        setX1(e.changedTouches[0].clientX);\n        setY1(e.changedTouches[0].clientY)\n    }\n\n    function touchMoveHandler(e: TouchEvent) {\n        const now = Date.now();\n        if (now - touchMoveLastTriggered < DEBOUNCER) return;\n        const currentX = e.changedTouches[0].clientX;\n        const currentY = e.changedTouches[0].clientY;\n        if (Math.abs(currentX - x1) > Math.abs(currentY - y1)) {\n            if (e.cancelable) e.preventDefault();\n            setDragDistance(e.changedTouches[0].clientX - x1)\n        }\n        setTouchMoveLastTriggered(now);\n    }\n\n    function touchEndHandler(e: TouchEvent) {\n        const currentX = e.changedTouches[0].clientX;\n        const currentY = e.changedTouches[0].clientY;\n        if (Math.abs(currentX - x1) > Math.abs(currentY - y1) && Math.abs(currentX - x1) > threshholdPx) {\n            setDirection(currentX > x1 ? UseSwipeableDirections.RIGHT : UseSwipeableDirections.LEFT);\n        }\n        setDragDistance(0);\n    }\n\n    function resetSwipeStatus() {\n        setDirection(UseSwipeableDirections.NULL);\n    }\n\n    useEffect(() => {\n        const currentElement = ref.current;\n        if (!currentElement) return;\n        currentElement.addEventListener('touchstart', touchStartHandler);\n        currentElement.addEventListener('touchend', touchEndHandler);\n        currentElement.addEventListener('touchmove', touchMoveHandler);\n\n        return () => {\n            currentElement.removeEventListener('touchstart', touchStartHandler);\n            currentElement.removeEventListener('touchend', touchEndHandler);\n            currentElement.removeEventListener('touchmove', touchMoveHandler);\n        }\n    });\n\n    return {\n        direction,\n        dragDistance,\n        resetSwipeStatus\n    }\n}\n\nexport default useSwipeable","import React, {useEffect, useRef} from \"react\";\nimport useSwipeable, {UseSwipeableDirections} from \"../../tools/use-swipeable\";\n\nimport {connect} from \"react-redux\";\nimport {setNextCategory, setPreviousCategory} from \"../../redux/actions/category\";\nimport {Dispatch} from \"redux\";\n\ninterface SwipeableProps {\n    setPreviousCategory: () => void,\n    setNextCategory: () => void,\n}\n\nconst Swipeable: React.FC<SwipeableProps> = (props) => {\n    const containerRef = useRef(null);\n    const {\n        direction,\n        dragDistance,\n        resetSwipeStatus\n    } = useSwipeable(containerRef, 50);\n\n    useEffect(() => {\n        if (direction === UseSwipeableDirections.RIGHT) {\n            props.setPreviousCategory()\n        } else if (direction === UseSwipeableDirections.LEFT) {\n            props.setNextCategory()\n        }\n        return () => {\n            resetSwipeStatus();\n        }\n    }, [direction]);\n\n    return (\n        <div\n            style={{\n                width: '100%',\n                transform: `translateX(${dragDistance}px)`,\n                // it affects snackbar fixed behavior\n                // left: `${dragDistance}px`,\n                // position: 'relative'\n            }}\n            ref={containerRef}\n        >\n            { props.children }\n        </div>\n    )\n};\n\nfunction mapDispatchToProps(dispatch: any) {\n    return {\n        setPreviousCategory: () => dispatch(setPreviousCategory()),\n        setNextCategory: () => dispatch(setNextCategory())\n    }\n}\n\nconst SwipeableContainer = connect(\n    null,\n    mapDispatchToProps\n)(Swipeable);\n\nexport default SwipeableContainer","import React, {CSSProperties, useEffect, useRef, useState} from \"react\";\nimport {\n    Box,\n    Button,\n    Card,\n    CardActions,\n    CardContent,\n    CardMedia,\n    createStyles,\n    Grid,\n    Link,\n    makeStyles,\n    Theme,\n    Typography,\n    useMediaQuery,\n    useTheme,\n    Zoom,\n} from \"@material-ui/core\";\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport useLazyLoad from \"../../tools/use-lazy-load\";\nimport getPublishTime from \"../../tools/get-publish-time\";\nimport copyToClipboard from \"../../tools/copy-to-clipboard\";\nimport {ThemeStyle} from \"@material-ui/core/styles/createTypography\";\nimport Swipeable from '../utility-components/swipeable';\nimport { Article as ArticleType} from \"../../redux/actions/articles\";\nimport {State} from \"../../redux/state\";\n\nconst useStyles = makeStyles((theme) => createStyles({\n    wrapper: {\n        width: 'calc(100% - 40px)',\n        margin: '20px',\n    },\n    [theme.breakpoints.down(\"sm\")]: {\n        wrapper: {\n            width: 'calc(100% - 16px)',\n            margin: '8px'\n        },\n    },\n}));\n\nfunction calcHeight(lines: number, variant: ThemeStyle, theme: Theme): CSSProperties['height'] {\n    return `calc(${lines} * ${theme.typography[variant].fontSize} * ${theme.typography[variant].lineHeight})`;\n}\n\nfunction ellipsis(variant: ThemeStyle, theme: Theme) {\n    return createStyles({\n        root: {\n            position: 'relative',\n            '&:after': {\n                content: \"''\",\n                position: 'absolute',\n                bottom: 0,\n                right: 0,\n                width: '20%',\n                height: calcHeight(1, variant, theme),\n                backgroundImage: 'linear-gradient(to right, rgba(255, 255, 255, 0) , rgba(255, 255, 255, 1))',\n                zIndex: 10\n            },\n        }\n    })\n}\n\nconst overFlowHidden: CSSProperties = {\n    width: '100%',\n    overflow: 'hidden',\n    position: 'relative'\n};\n\nconst usePrimaryCardStyles = makeStyles((theme) => createStyles({\n    media: {\n        height: '550px',\n        ...overFlowHidden,\n    },\n    skeleton: {\n        height: '550px',\n        ...overFlowHidden,\n    },\n    title: {\n        height: calcHeight(1, 'body1', theme),\n        ...ellipsis('body1', theme).root,\n        ...overFlowHidden,\n    },\n    source: {\n        height: calcHeight(1, 'body2', theme),\n        ...overFlowHidden,\n    },\n    articleContent: {\n        height: calcHeight(2, 'body2', theme),\n        ...ellipsis('body2', theme).root,\n        ...overFlowHidden,\n    },\n    buttons: {\n        ...overFlowHidden,\n    },\n    [theme.breakpoints.down(\"sm\")]: {\n        media: {\n            height: '200px',\n        },\n        skeleton: {\n            height: '200px',\n        },\n    }\n}));\n\n\n\nconst useSecondaryCardStyles = makeStyles((theme) => createStyles({\n    media: {\n        height: '200px',\n        ...overFlowHidden,\n    },\n    skeleton: {\n        height: '200px',\n        ...overFlowHidden,\n    },\n    title: {\n        height: calcHeight(2, 'body1', theme),\n        ...ellipsis('body1', theme).root,\n        ...overFlowHidden,\n    },\n    source: {\n        height: calcHeight(1, 'body2', theme),\n        ...overFlowHidden,\n    },\n    articleContent: {\n        height: calcHeight(3, 'body2', theme),\n        ...ellipsis('body2', theme).root,\n        ...overFlowHidden,\n    },\n    buttons: {\n        ...overFlowHidden,\n    },\n    [theme.breakpoints.down(\"sm\")]: {\n\n    }\n}));\n\ninterface ButtonsProps {\n    url: string,\n    className: string,\n    openCopyLinkSnackBar: () => void\n}\n\n\nfunction Buttons(props: ButtonsProps) {\n\n    function copyLinkHandler() {\n        copyToClipboard(props.url);\n        props.openCopyLinkSnackBar();\n    }\n\n    return (\n        <CardActions className={props.className}>\n            <Link href={props.url} target={'_blank'} rel=\"noopener\" underline={\"none\"}>\n                <Button size=\"small\" color=\"primary\">\n                    Learn more\n                </Button>\n            </Link>\n            <Button size=\"small\" color=\"primary\" onClick={copyLinkHandler}>Share</Button>\n        </CardActions>\n    )\n}\n\ninterface ArticleProps extends ArticleType {\n    id: number,\n    openCopyLinkSnackBar: () => void\n}\n\nfunction Article(props: ArticleProps) {\n    const ref = useRef(null);\n    const isVisible = useLazyLoad(ref);\n    const [isMounted, setIsMounted] = useState(false);\n    const isTransitionAnimationNeeded = !useMediaQuery(useTheme().breakpoints.down('sm'));\n\n    const isPrimaryCard = props.id === 0 || props.id === 1;\n    const cardPrimaryClasses = usePrimaryCardStyles();\n    const cardSecondaryClasses = useSecondaryCardStyles();\n    const cardClasses = isPrimaryCard ? cardPrimaryClasses : cardSecondaryClasses;\n\n    useEffect(() => {\n        if (isTransitionAnimationNeeded) {\n            setTimeout(() =>setIsMounted(true), 225)\n            // Zoom transition 225ms\n        }\n    }, []);\n\n    const content = (\n        <Grid\n            item\n            xs={12}\n            md={isPrimaryCard ? 6 : 3}\n            ref={ref}\n        >\n            <Card raised>\n                {\n                    isVisible && props.urlToImage?\n                        <CardMedia\n                            component=\"img\"\n                            alt={props.title}\n                            className={cardClasses.media}\n                            image={props.urlToImage}\n                            title={props.title}\n                        /> :\n                        <Skeleton variant={\"rect\"} className={cardClasses.skeleton} />\n                }\n\n                <CardContent>\n                    <Typography gutterBottom variant=\"body1\" component=\"h2\" className={cardClasses.title}>\n                        <Box fontWeight={700}>\n                            { props.title }\n                        </Box>\n                    </Typography>\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" className={cardClasses.source}>\n                        <Box component={'span'} fontWeight={700}>\n                            { props.source ? props.source + ' - ' : props.author ? props.author + ' - ' : '' }\n                            { getPublishTime(new Date(props.publishedAt)) }\n                        </Box>\n                    </Typography>\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" className={cardClasses.articleContent}>\n                        { props.content && props.content.replace(/\\[\\+[0-9]+\\schars\\]/ig, '') }\n                    </Typography>\n                </CardContent>\n                <Buttons url={props.url} className={cardClasses.buttons} openCopyLinkSnackBar={props.openCopyLinkSnackBar} />\n            </Card>\n        </Grid>\n    );\n\n    return isTransitionAnimationNeeded ? (\n        <Zoom in={!isMounted ? true : isVisible}>\n            { content }\n        </Zoom>\n    ) : content;\n}\n\ninterface LoadedArticlesProps {\n    articles: Array<ArticleType>,\n    openCopyLinkSnackBar: () => void\n}\n\nfunction LoadedArticles(props: LoadedArticlesProps) {\n    return (\n        <>\n            {\n                props.articles.map((article, i) => {\n                    return (\n                        <Article {...article} key={i} id={i} openCopyLinkSnackBar={props.openCopyLinkSnackBar}/>\n                    )\n                })\n            }\n        </>\n    )\n}\n\ninterface ArticlesProps extends Pick<State, 'articles'> {\n    openCopyLinkSnackBar: () => void\n}\n\nfunction Articles(props: ArticlesProps) {\n    const classes = useStyles();\n\n    let content;\n    if (props.articles.isError) {\n        content = (\n            <div style={{\n                width: '100%',\n                minHeight: '100vh'\n            }}>\n                error\n            </div>\n        )\n    } else if (props.articles.isFetching) {\n        content = (\n            <>\n                {\n                    Array.from(Array(10), (_, i) => {\n                        return (\n                            <Grid item key={i}>\n                                <Box width={500} height={300} maxWidth={'100%'}>\n                                    <Skeleton variant={\"rect\"} width={500} height={200}/>\n                                    <Skeleton width={500}/>\n                                    <Skeleton width={500}/>\n                                </Box>\n                            </Grid>\n                        )\n                    })\n                }\n            </>\n        )\n    } else {\n        content = <LoadedArticles articles={props.articles.articles} openCopyLinkSnackBar={props.openCopyLinkSnackBar}/>\n    }\n\n    return (\n        <Swipeable>\n            <Box className={classes.wrapper}>\n                <Grid container direction={\"row\"} alignContent={\"center\"} justify={\"center\"} spacing={2}>\n                    { content }\n                </Grid>\n            </Box>\n        </Swipeable>\n    )\n}\n\nexport default Articles;","import React, {useEffect, useState} from \"react\";\n\nexport default function useLazyLoad(ref: React.RefObject<HTMLInputElement>) {\n    const [isVisible, setIsVisible] = useState(false);\n    let scrollHandlerLastCalledAt = Date.now() - 1000;\n\n    function checkIsVisible() {\n        const calledAt = Date.now();\n        if (calledAt - scrollHandlerLastCalledAt < 20) {\n            return\n        } else {\n            scrollHandlerLastCalledAt = calledAt\n        }\n        if (!ref.current) return;\n\n        const rect = ref.current.getBoundingClientRect();\n        const isBefore = rect.top + rect.height < 0;\n        const isAfter = rect.top > window.innerHeight;\n        if (!isBefore && !isAfter) setIsVisible(true);\n    }\n\n    useEffect(() => {\n        if (isVisible) return;\n        checkIsVisible();\n        document.addEventListener('scroll', checkIsVisible);\n        return () => {\n            document.removeEventListener('scroll', checkIsVisible);\n        }\n    });\n\n    return isVisible\n}","export default function getPublishTime(date: Date): string{\n    const timePast = Date.now() - date.getTime();\n    if (timePast < 0) {\n        return 'now'\n    }\n    const minutes = Math.floor(timePast / (60 * 1000));\n    if (minutes <= 59) {\n        return `${minutes} ${minutes === 1 ? 'minute' : 'minutes'} ago`\n    }\n    const hours = Math.floor(timePast / (60 * 60 * 1000));\n    if (hours <= 23) {\n        return `${hours} ${hours === 1 ? 'hour' : 'hours'} ago`\n    }\n    const days = Math.floor(timePast / (24 * 60 * 60 * 1000));\n    if (days <= 30) {\n        return `${days} ${days === 1 ? 'day' : 'days'} ago`\n    }\n    const months = Math.floor(timePast / (30 * 24 * 60 * 60 * 1000));\n    if (months <= 12) {\n        return `${months} ${months === 1 ? 'month' : 'months'} ago`\n    }\n    const years = Math.floor(timePast / (365 * 24 * 60 * 60 * 1000));\n    return `${years} ${years === 1 ? 'year' : 'years'} ago`\n}","import {openCopyLinkSnackBar} from \"../redux/actions/copy-link-snackbar\";\nimport {connect} from \"react-redux\";\nimport Articles from \"../components/articles/articles\";\nimport {Dispatch} from \"redux\";\n\nfunction mapDispatchToProps(dispatch: Dispatch) {\n    return {\n        openCopyLinkSnackBar: () => dispatch(openCopyLinkSnackBar())\n    }\n}\n\nconst ArticlesContainer = connect(\n    null,\n    mapDispatchToProps\n)(Articles);\n\nexport default ArticlesContainer;\n","import React from \"react\";\nimport {Avatar, Box, Chip, Grid, Link} from \"@material-ui/core\";\n\nfunction Attribution() {\n    return (\n        <Box mt={10} mb={2} mx={2}>\n            <Grid container direction={'row'} spacing={2}>\n                <Grid item>\n                    <Link href={'https://www.xiaoxihome.com/'} target={'_blank'} rel=\"noopener\" underline={\"none\"}>\n                        <Chip\n                            avatar={<Avatar>X</Avatar>}\n                            label=\"🔧 with ❤️ by XiaoxiHome\"\n                            color=\"primary\"\n                            clickable\n                        />\n                    </Link>\n                </Grid>\n                <Grid item>\n                    <Link href={'https://newsapi.org/'} target={'_blank'} rel=\"noopener\" underline={\"none\"}>\n                        <Chip\n                            avatar={<Avatar>N</Avatar>}\n                            label=\"News data courtesy of NewsAPI.org\"\n                            color=\"secondary\"\n                            clickable\n                        />\n                    </Link>\n                </Grid>\n            </Grid>\n        </Box>\n    )\n}\n\nexport default Attribution;","import React from \"react\";\nimport {\n    createStyles,\n    IconButton,\n    Snackbar,\n    SnackbarContent,\n} from \"@material-ui/core\";\nimport Close from '@material-ui/icons/Close';\nimport {green} from '@material-ui/core/colors';\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\n\nconst useStyles = makeStyles(() => createStyles({\n    successSnackBar: {\n        backgroundColor: green[600]\n    },\n}));\n\ninterface CopyLinkSnackbarProps {\n    isActive: boolean,\n    closeCopyLinkSnackBar: () => void\n}\n\nfunction CopyLinkSnackbar(props: CopyLinkSnackbarProps) {\n    const classes = useStyles();\n\n    function closeHandlder() {\n        props.closeCopyLinkSnackBar()\n    }\n\n    return (\n        <Snackbar\n            anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'center',\n            }}\n            open={props.isActive}\n            autoHideDuration={3000}\n            onClose={closeHandlder}\n        >\n            <SnackbarContent\n                className={classes.successSnackBar}\n                message={\n                    <span id=\"client-snackbar\">\n                        Link copied to clipboard\n                    </span>\n                }\n                action={[\n                        <IconButton key=\"close\" aria-label=\"close\" color=\"inherit\" onClick={closeHandlder}>\n                    <Close/>\n                    </IconButton>,\n            ]}\n            />\n    </Snackbar>\n    )\n}\n\nexport default CopyLinkSnackbar;","import {State} from \"../redux/state\";\nimport {closeCopyLinkSnackBar} from \"../redux/actions/copy-link-snackbar\";\nimport {connect} from \"react-redux\";\nimport CopyLinkSnackbar from \"../components/copy-link-snackbar\";\nimport {Dispatch} from \"redux\";\n\nfunction mapDispatchToProps(dispatch: Dispatch) {\n    return {\n        closeCopyLinkSnackBar: () => dispatch(closeCopyLinkSnackBar())\n    }\n}\n\nfunction mapStateToProps(state: State) {\n    return {\n        isActive: state.copyLinkSnackBar.isActive\n    }\n}\n\nconst CopyLinkSnackBarContainer = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(CopyLinkSnackbar);\n\nexport default CopyLinkSnackBarContainer;","import {State} from \"./redux/state\";\nimport React, {useEffect} from \"react\";\nimport {Box, createStyles, makeStyles} from \"@material-ui/core\";\nimport Header from \"./components/header/header\";\nimport {categories, Category} from \"./redux/actions/category\";\nimport ArticlesContainer from \"./containers/articles-container\";\nimport Attribution from \"./components/attribution\";\nimport CopyLinkSnackBarContainer from \"./containers/copy-link-snackbar-container\";\nimport {fetchArticles} from \"./redux/actions/articles\";\nimport {connect} from \"react-redux\";\n\nconst useStyles = makeStyles((theme) => createStyles({\n    root: {\n        width: '100vw',\n        maxWidth: '100%',\n        minHeight: '100vh',\n        overflowX: 'hidden',\n        paddingBottom: '10px',\n        // overflowX is causing y-axis scroll problem, pb do the hack\n    }\n}));\n\ninterface InnerAppProps extends Pick<State, 'category' | 'articles'> {\n    fetchArticlesAfterMount: () => void\n}\n\nfunction InnerApp(props: InnerAppProps) {\n    const classes = useStyles();\n    useEffect(() => {\n        props.fetchArticlesAfterMount()\n    }, []);\n\n    return (\n        <Box className={classes.root}>\n            <Header headers={categories} category={props.category} />\n            <ArticlesContainer articles={props.articles} />\n            <Attribution />\n            <CopyLinkSnackBarContainer />\n        </Box>\n    )\n}\nfunction mapStateToProps(state: State) {\n    return {\n        category: state.category,\n        articles: state.articles\n    }\n}\nfunction mapDispatchToProps(dispatch: any) {\n    return {\n        fetchArticlesAfterMount: () => dispatch(fetchArticles(Category.HEADLINE))\n    }\n}\nconst InnerAppContainer = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(InnerApp);\n\nexport default InnerAppContainer;","import React from 'react';\nimport { Provider } from 'react-redux';\nimport configureStore from \"./redux/configureStore\";\nimport { CssBaseline } from \"@material-ui/core\";\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport theme from './theme';\nimport InnerAppContainer from \"./inner-app\";\n\n\nconst store = configureStore();\n\nfunction App() {\n    return (\n        <Provider store={store}>\n            <ThemeProvider theme={theme}>\n                <CssBaseline />\n                <InnerAppContainer />\n            </ThemeProvider>\n        </Provider>\n    )\n}\n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}