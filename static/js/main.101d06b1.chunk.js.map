{"version":3,"sources":["redux/actions.ts","redux/reducers.ts","redux/configureStore.ts","components/header/header.tsx","components/articles/articles.tsx","components/attribution.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Categories","CategoryActions","ArticleActions","categories","NEWS_API","fetchArticles","category","QUERY","dispatch","type","REQUEST_ARTICLES","fetch","encodeURIComponent","then","res","json","errors","IS_ERROR","articles","RECEIVE_ARTICLES","slice","receiveArticles","data","getNews","initState","HEADLINE","isError","isFetching","rootReducers","combineReducers","state","action","SET_CATEGORY","actions","Object","assign","loggerMiddleware","createLogger","preloadedState","useStyles","makeStyles","theme","tab","flexShrink","flexGrow","toolbar","textTransform","Header","props","classes","useState","setCategory","AppBar","color","position","Toolbar","Container","Typography","align","className","Box","fontWeight","fontSize","Tabs","value","indicatorColor","textColor","variant","scrollButtons","headers","map","_","i","Tab","label","key","onClick","dispatcher","clickHandler","createStyles","wrapper","width","margin","cardWrapperPrimary","height","cardMediaPrimary","skeletonPrimary","cardContentPrimary","overflow","cardWrapperNormal","cardMediaNormal","skeletonNormal","cardContentNormal","breakpoints","down","Article","ref","useRef","isVisible","setIsVisible","scrollHandlerLastCalledAt","Date","now","checkIsVisible","current","calledAt","rect","getBoundingClientRect","isBefore","top","isAfter","window","innerHeight","useEffect","document","addEventListener","removeEventListener","useLazyLoad","isPrimaryCard","id","Grid","item","xs","md","Card","raised","urlToImage","CardMedia","component","alt","title","image","Skeleton","CardContent","gutterBottom","source","author","date","timePast","getTime","minutes","Math","floor","hours","days","months","years","getPublishTime","publishedAt","content","CardActions","Link","href","url","target","rel","underline","Button","size","LoadedArticles","article","Articles","Array","from","maxWidth","container","direction","alignContent","justify","spacing","Attribution","mt","mx","Chip","avatar","Avatar","clickable","store","createStore","rootReducer","applyMiddleware","thunkMiddleware","InnerAppContainer","connect","minHeight","App","CssBaseline","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.101d06b1.chunk.js","sourcesContent":["export enum Categories {\n    HEADLINE= `HEADLINE`,\n    BUSINESS= `BUSINESS`,\n    ENTERTAINMENT= `ENTERTAINMENT`,\n    HEALTH= `HEALTH`,\n    SCIENCE= `SCIENCE`,\n    SPORTS= `SPORTS`,\n    TECHNOLOGY= `TECHNOLOGY`,\n}\nexport const categories: Array<keyof typeof Categories> = [\n    `HEADLINE`, `BUSINESS`, `ENTERTAINMENT`, `HEALTH`, `SCIENCE`, `SPORTS`, `TECHNOLOGY`\n];\n\nexport interface ArticleType {\n    source: string,\n    author: string,\n    title: string,\n    description: string,\n    url: string,\n    urlToImage: string,\n    publishedAt: string,\n    content: string\n}\n\nexport enum CategoryActions {\n    SET_CATEGORY = 'SET_CATEGORY'\n}\n\nexport function setCategoryIfNeeded(category: Categories) {\n    return (dispatch: any, getState: any) => {\n        // if (getState().category === category) return;\n        return {\n            type: CategoryActions.SET_CATEGORY,\n            category\n        }\n    };\n}\n\nexport enum ArticleActions {\n    IS_ERROR = 'IS_ERROR',\n    REQUEST_ARTICLES = 'REQUEST_ARTICLES',\n    RECEIVE_ARTICLES = 'RECEIVE_ARTICLES'\n}\n\nfunction requestArticlesFailed() {\n    return {\n        type: ArticleActions.IS_ERROR\n    }\n}\n\nfunction requestArticles() {\n    return {\n        type: ArticleActions.REQUEST_ARTICLES\n    }\n}\n\nfunction receiveArticles(articles: any) {\n    return {\n        type: ArticleActions.RECEIVE_ARTICLES,\n        articles: articles.slice()\n    }\n}\n\nconst NEWS_API = 'https://www.xiaoxihome.com/api/news?query=';\n// const NEWS_API = 'http://localhost:5000/api/news?query=';\n\nexport function fetchArticles(category: keyof typeof Categories) {\n    const QUERY = `\n        {\n            getNews(category: ${category}) {\n                source,\n                author,\n                title,\n                description,\n                url,\n                urlToImage,\n                publishedAt,\n                content\n            }\n        }\n    `;\n\n    return (dispatch: any) => {\n        dispatch(requestArticles());\n        return fetch(NEWS_API + encodeURIComponent(QUERY))\n            .then(res => res.json())\n            .then(json => {\n                if (json.errors) {\n                    dispatch(requestArticlesFailed())\n                } else {\n                    dispatch(receiveArticles(json.data.getNews))\n                }\n            })\n    }\n}","import {ArticleType, ArticleActions, Categories, CategoryActions} from \"./actions\";\nimport { combineReducers } from \"redux\";\n\nexport interface InitState {\n    category: Categories,\n    articles: {\n        isError: boolean,\n        isFetching: boolean,\n        articles: Array<ArticleType>\n    }\n}\n\nexport const initState = {\n    category: Categories.HEADLINE,\n    articles: {\n        isError: false,\n        isFetching: true,\n        articles: []\n    }\n};\n\nfunction category (state = initState.category, action: {type: CategoryActions, category: Categories}) {\n    switch (action.type) {\n        case CategoryActions.SET_CATEGORY:\n            return action.category;\n        default:\n            return state\n    }\n}\n\nfunction articles(state = initState.articles, actions: any) {\n    switch(actions.type) {\n        case ArticleActions.IS_ERROR:\n            return Object.assign({}, state, {isError: true});\n        case ArticleActions.REQUEST_ARTICLES:\n            return Object.assign({}, state, {\n                isError: false,\n                isFetching: true\n            });\n        case ArticleActions.RECEIVE_ARTICLES:\n            return Object.assign({}, {\n                isError: false,\n                isFetching: false,\n                articles: actions.articles.slice()\n            });\n        default:\n            return state\n    }\n}\n\nconst rootReducers = combineReducers({\n    category,\n    articles\n});\n\nexport default rootReducers;","import { createStore, applyMiddleware } from 'redux'\nimport thunkMiddleware from 'redux-thunk'\nimport { createLogger } from 'redux-logger'\nimport rootReducer, {initState} from './reducers'\nconst loggerMiddleware = createLogger();\n\nconst preloadedState = initState;\nexport default function configureStore() {\n    return createStore(\n        rootReducer,\n        preloadedState,\n        applyMiddleware(thunkMiddleware, loggerMiddleware)\n    )\n}","import React, {useState} from \"react\";\nimport './header.css'\nimport {Categories, fetchArticles} from \"../../redux/actions\";\nimport {\n    AppBar,\n    Box,\n    Container,\n\n    makeStyles,\n    Tab,\n    Tabs,\n    Theme,\n    Toolbar,\n    Typography,\n} from \"@material-ui/core\";\n\n\nconst useStyles = makeStyles((theme: Theme) => ({\n    tab: {\n        flexShrink: 0,\n        flexGrow: 1\n    },\n    toolbar: {\n        textTransform: 'uppercase'\n    }\n}));\n\ninterface HeaderProps {\n    headers: Array<keyof typeof Categories>,\n    dispatcher: any\n}\n\nfunction Header(props: HeaderProps) {\n    const classes = useStyles();\n    const [category, setCategory] = useState(0);\n    const clickHandler = (i: number) => {\n        if (i === category) return;\n        setCategory(i);\n        props.dispatcher(fetchArticles((props.headers[i])));\n    };\n\n    return (\n        <AppBar color=\"default\" position={'static'}>\n            <Toolbar>\n                <Container>\n                    <Typography align={\"center\"} className={classes.toolbar} color={'primary'}>\n                        <Box fontWeight={700} fontSize={'h5.fontSize'}>\n                            News Canada\n                        </Box>\n                    </Typography>\n                </Container>\n            </Toolbar>\n                <Tabs\n                    value={category}\n                    indicatorColor=\"primary\"\n                    textColor=\"primary\"\n                    variant=\"scrollable\"\n                    scrollButtons=\"auto\"\n                >\n                    {\n                        props.headers.map((_, i) => <Tab label={_} key={i} className={classes.tab} onClick={() => clickHandler(i)}/>)\n                    }\n                </Tabs>\n        </AppBar>\n    )\n}\n\nexport default Header;","import React, {useEffect, useRef, useState} from \"react\";\nimport {\n    Box,\n    Button,\n    Card,\n    CardActionArea,\n    CardActions,\n    CardContent,\n    CardMedia, Container, createStyles,\n    Grid, Link,\n    makeStyles,\n    Typography, useMediaQuery, useTheme,\n} from \"@material-ui/core\";\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport {InitState} from \"../../redux/reducers\";\nimport {ArticleType} from \"../../redux/actions\";\n\nfunction getPublishTime(date: Date): string{\n    const timePast = Date.now() - date.getTime();\n    if (timePast < 0) {\n        return 'now'\n    }\n    const minutes = Math.floor(timePast / (60 * 1000));\n    if (minutes <= 59) {\n        return `${minutes} ${minutes === 1 ? 'minute' : 'minutes'} ago`\n    }\n    const hours = Math.floor(timePast / (60 * 60 * 1000));\n    if (hours <= 23) {\n        return `${hours} ${hours === 1 ? 'hour' : 'hours'} ago`\n    }\n    const days = Math.floor(timePast / (24 * 60 * 60 * 1000));\n    if (days <= 30) {\n        return `${days} ${days === 1 ? 'day' : 'days'} ago`\n    }\n    const months = Math.floor(timePast / (30 * 24 * 60 * 60 * 1000));\n    if (months <= 12) {\n        return `${months} ${months === 1 ? 'month' : 'months'} ago`\n    }\n    const years = Math.floor(timePast / (365 * 24 * 60 * 60 * 1000));\n    return `${years} ${years === 1 ? 'year' : 'years'} ago`\n}\n\nconst useStyles = makeStyles((theme) => createStyles({\n    wrapper: {\n        width: 'calc(100% - 40px)',\n        margin: '20px',\n    },\n    cardWrapperPrimary: {\n        height: '800px'\n    },\n    cardMediaPrimary: {\n        height: '550px',\n    },\n    skeletonPrimary: {\n        height: '550px',\n    },\n    cardContentPrimary: {\n        width: '100%',\n        height: '200px',\n        overflow: 'hidden',\n        position: 'relative'\n    },\n    cardWrapperNormal: {\n        height: '400px'\n    },\n    cardMediaNormal: {\n        height: '150px'\n    },\n    skeletonNormal: {\n        height: '150px',\n    },\n    cardContentNormal: {\n        height: '200px',\n        width: '100%',\n        overflow: 'hidden',\n        position: 'relative'\n    },\n    [theme.breakpoints.down(\"md\")]: {\n        wrapper: {\n            width: 'calc(100% - 16px)',\n            margin: '8px'\n        },\n        cardWrapperPrimary: {\n            height: '400px'\n        },\n        cardMediaPrimary: {\n            height: '150px',\n        },\n        skeletonPrimary: {\n            height: '150px',\n        },\n        cardContentPrimary: {\n            height: '200px'\n        },\n        cardWrapperNormal: {\n            height: '400px'\n        },\n        cardMediaNormal: {\n            height: '150px',\n        },\n        skeletonNormal: {\n            height: '150px',\n        },\n        cardContentNormal: {\n            height: '200px'\n        },\n    },\n}));\n\nfunction useLazyLoad(ref: any) {\n    const [isVisible, setIsVisible] = useState(false);\n    let scrollHandlerLastCalledAt = Date.now() - 1000;\n\n    function checkIsVisible() {\n        if (!ref.current) return;\n        const calledAt = Date.now();\n        if (calledAt - scrollHandlerLastCalledAt < 20) {\n            return\n        } else {\n            scrollHandlerLastCalledAt = calledAt\n        }\n\n        const rect = ref.current.getBoundingClientRect();\n        const isBefore = rect.top + rect.height < 0;\n        const isAfter = rect.top > window.innerHeight;\n        if (!isBefore && !isAfter) setIsVisible(true);\n    }\n\n    useEffect(() => {\n        if (isVisible) return;\n        checkIsVisible();\n        document.addEventListener('scroll', checkIsVisible);\n        return () => {\n            document.removeEventListener('scroll', checkIsVisible);\n        }\n    }, [isVisible]);\n\n    return isVisible;\n}\n\ninterface ArticleProps extends ArticleType {\n    id: number\n}\n\nfunction Article(props: ArticleProps) {\n    const ref = useRef(null);\n    const isVisible = useLazyLoad(ref);\n\n    const classes = useStyles();\n    const isPrimaryCard = props.id === 0 || props.id === 1;\n    return (\n        <Grid item xs={12} md={isPrimaryCard ? 6 : 3} ref={ref}>\n            <Card raised className={isPrimaryCard ? classes.cardWrapperPrimary : classes.cardWrapperNormal}>\n                {\n                    isVisible && props.urlToImage?\n                        <CardMedia\n                            component=\"img\"\n                            alt={props.title}\n                            className={isPrimaryCard ? classes.cardMediaPrimary : classes.cardMediaNormal}\n                            image={props.urlToImage}\n                            title={props.title}\n                        /> :\n                        <Skeleton variant={\"rect\"} className={isPrimaryCard ? classes.skeletonPrimary : classes.skeletonNormal} />\n                }\n\n                <CardContent className={isPrimaryCard ? classes.cardContentPrimary : classes.cardContentNormal}>\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                        { props.title }\n                    </Typography>\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                        <Box component={'span'} fontWeight={700}>\n                            { props.source ? props.source + ' - ' : props.author ? props.author + ' - ' : '' }\n                            { getPublishTime(new Date(props.publishedAt)) }\n                        </Box>\n                    </Typography>\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                        { props.content }\n                    </Typography>\n                </CardContent>\n                <CardActions>\n                <Link href={props.url} target={'_blank'} rel=\"noopener\" underline={\"none\"}>\n                    <Button size=\"small\" color=\"primary\">\n                        Learn more\n                    </Button>\n                </Link>\n                </CardActions>\n            </Card>\n        </Grid>\n    )\n}\n\ninterface LoadedArticlesProps {\n    articles: Array<ArticleType>\n}\n\nfunction LoadedArticles(props: LoadedArticlesProps) {\n    return (\n        <>\n            {\n                props.articles.map((article, i) => {\n                    return (\n                        <Article {...article} key={i} id={i}/>\n                    )\n                })\n            }\n        </>\n    )\n}\n\ninterface ArticlesProps extends Pick<InitState, 'articles'> {\n\n}\n\nfunction Articles(props: ArticlesProps) {\n    const classes = useStyles();\n    let content;\n    if (props.articles.isError) {\n        content = (\n            <div>\n                error\n            </div>\n        )\n    } else if (props.articles.isFetching) {\n        content = (\n            <>\n                {\n                    Array.from(Array(10), (_, i) => {\n                        return (\n                            <Grid item key={i}>\n                                <Box width={500} height={300} maxWidth={'100%'}>\n                                    <Skeleton variant={\"rect\"} width={500} height={200}/>\n                                    <Skeleton width={500}/>\n                                    <Skeleton width={500}/>\n                                </Box>\n                            </Grid>\n                        )\n                    })\n                }\n            </>\n        )\n    } else {\n        content = <LoadedArticles articles={props.articles.articles}/>\n    }\n\n    return (\n        <Box className={classes.wrapper}>\n            <Grid container direction={\"row\"} alignContent={\"center\"} justify={\"center\"} spacing={2}>\n                { content }\n            </Grid>\n        </Box>\n    )\n}\n\nexport default Articles;","import React from \"react\";\nimport {Avatar, Box, Chip, Grid, Link} from \"@material-ui/core\";\n\nfunction Attribution() {\n    return (\n        <Box mt={10} mx={2}>\n            <Grid container direction={'row'} spacing={2}>\n                <Grid item>\n                    <Link href={'https://www.xiaoxihome.com/'} target={'_blank'} rel=\"noopener\" underline={\"none\"}>\n                        <Chip\n                            avatar={<Avatar>X</Avatar>}\n                            label=\"🔧 with ❤️ by XiaoxiHome\"\n                            color=\"primary\"\n                            clickable\n                        />\n                    </Link>\n                </Grid>\n                <Grid item>\n                    <Link href={'https://newsapi.org/'} target={'_blank'} rel=\"noopener\" underline={\"none\"}>\n                        <Chip\n                            avatar={<Avatar>N</Avatar>}\n                            label=\"News Provided By NewsAPI.org\"\n                            color=\"secondary\"\n                            clickable\n                        />\n                    </Link>\n                </Grid>\n            </Grid>\n        </Box>\n    )\n}\n\nexport default Attribution;","import React, {useEffect} from 'react';\nimport './App.css';\nimport {connect, Provider} from 'react-redux';\nimport configureStore from \"./redux/configureStore\";\nimport {InitState} from \"./redux/reducers\";\nimport {categories, Categories, fetchArticles} from \"./redux/actions\";\nimport {Box, CssBaseline} from \"@material-ui/core\";\nimport Header from \"./components/header/header\";\nimport Articles from \"./components/articles/articles\";\nimport Attribution from \"./components/attribution\";\n\n\nconst store = configureStore();\n\ninterface InnerAppProps extends InitState{\n    dispatch: any,\n}\n\nfunction InnerApp(props: any) {\n    useEffect(() => {\n        props.dispatch(fetchArticles(Categories.HEADLINE))\n    }, []);\n    return (\n        <Box width={'100vw'} minHeight={'100vh'} maxWidth={'100%'}>\n            <Header headers={categories} dispatcher={props.dispatch}/>\n            <Articles articles={props.articles}/>\n            <Attribution />\n        </Box>\n    )\n}\nfunction mapStateToProps(state: InitState) {\n    return state\n}\nconst InnerAppContainer = connect(mapStateToProps)(InnerApp);\n\nfunction App() {\n    return (\n        <Provider store={store}>\n            <CssBaseline />\n            <InnerAppContainer />\n        </Provider>\n    )\n}\n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}