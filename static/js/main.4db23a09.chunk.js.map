{"version":3,"sources":["redux/actions/articles.ts","redux/actions/category.ts","redux/state.ts","redux/reducers/category.ts","redux/reducers/articles.ts","redux/actions/copy-link-snackbar.ts","redux/reducers/copy-link-snackbar.ts","redux/actions/search-keyword.ts","redux/reducers/search-keyword.ts","redux/reducers/root-reducers.ts","redux/configureStore.ts","theme.tsx","tools/use-lazy-load.ts","tools/copy-to-clipboard.ts","tools/use-debounce.ts","tools/use-swipeable.ts","components/utility-components/swipeable.tsx","components/articles/articles.tsx","tools/get-publish-time.ts","containers/articles-container.tsx","components/attribution.tsx","components/copy-link-snackbar.tsx","containers/copy-link-snackbar-container.tsx","components/analytics/utilitis/use-get-analytics.tsx","components/analytics/utilitis/animation-slide-in.tsx","components/analytics/utilitis/section-wrapper.tsx","d3-charts/pie-chart-d3.ts","components/analytics/styles/analytics-styles.tsx","components/analytics/utilitis/title.tsx","components/analytics/utilitis/content.tsx","components/analytics/documents-by-category-bar-chart.tsx","d3-charts/heat-map-d3.ts","components/analytics/documents-heat-map.tsx","components/analytics/documents-text-summary.tsx","tools/use-sticky.ts","d3-charts/word-cloud-d3.ts","components/analytics/documents-word-cloud.tsx","components/analytics/utilitis/animation-fixed.tsx","d3-charts/stacked-line-chart-d3.tsx","components/analytics/documents-count-stacked-line-chart.tsx","components/analytics/stacked-line-chart-expansion-panel-note.tsx","components/analytics/analytics.tsx","components/utility-components/sticky-component.tsx","components/header/header-search.tsx","components/header/header.tsx","containers/header-container.tsx","components/articles/searched-articles/filters/sort-types.ts","d3-charts/world-map-d3.ts","components/topic/topic-covid19-map.tsx","components/topic/topic.tsx","components/articles/searched-articles/utilities/status.tsx","components/articles/searched-articles/requests/request-search-news.ts","components/articles/searched-articles/requests/use-search-news.tsx","components/articles/searched-articles/utilities/get-date-string.tsx","components/articles/searched-articles/message-components/result-count-message.tsx","components/articles/searched-articles/message-components/loading-message.tsx","components/articles/searched-articles/message-components/load-more-message.tsx","components/articles/searched-articles/message-components/generic-message.tsx","components/articles/searched-articles/highlighted-content.tsx","components/articles/searched-articles/searched-article-card.tsx","components/articles/searched-articles/utilities/scroll-to-top-button.tsx","d3-charts/frequency-chart-d3.ts","components/articles/searched-articles/frequency-chart/keyword-frequency.tsx","components/articles/searched-articles/filters/sort-panel.tsx","components/articles/searched-articles/filters/filter-by-date.tsx","components/articles/searched-articles/filters/filters.tsx","styles/styles.ts","components/articles/searched-articles/searched-articles.tsx","inner-app.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["ArticleActionsTypes","Category","fetchArticles","category","QUERY","dispatch","type","REQUEST_ARTICLES","fetch","encodeURIComponent","then","res","json","errors","IS_ERROR","articles","RECEIVE_ARTICLES","slice","receiveArticles","data","getNews","CategoryActionsType","categories","HEADLINE","BUSINESS","ENTERTAINMENT","HEALTH","SCIENCE","SPORTS","TECHNOLOGY","setCategoryAndFetchArticles","SET_CATEGORY","setCategory","initState","isError","isFetching","copyLinkSnackBar","isActive","searchKeyword","state","action","CopyLinkSnackbarActionsTypes","actions","Object","assign","copyLinkSnackbar","SearchKeywordTypes","CLOSE_SNACKBAR","OPEN_SNACKBAR","SET_KEYWORD","keyword","rootReducers","combineReducers","preloadedState","theme","createMuiTheme","palette","primary","main","contrastText","secondary","responsiveFontSizes","typography","h1","fontFamily","join","fontWeight","fontSize","breakpoints","up","useLazyLoad","ref","triggerPoint","useState","isVisible","setIsVisible","scrollHandlerLastCalledAt","Date","now","checkIsVisible","calledAt","current","rect","getBoundingClientRect","isBefore","top","height","isAfter","window","innerHeight","useEffect","document","addEventListener","removeEventListener","copyToClipboard","string","el","createElement","value","setAttribute","style","position","left","body","appendChild","select","execCommand","removeChild","useDebounce","UseSwipeableDirections","UserAction","debounceInterval","lastExecuted","DEBOUNCER","useSwipeable","threshholdPx","x1","setX1","y1","setY1","NULL","userAction","setUserAction","direction","setDirection","dragDistance","setDragDistance","shouldBeExecuted","touchStartHandler","e","changedTouches","clientX","clientY","touchMoveHandler","currentX","currentY","cancelable","preventDefault","Math","abs","SWIPE","SCROLL","touchEndHandler","RIGHT","LEFT","currentElement","resetSwipeStatus","SwipeableContainer","connect","goPrevious","getState","currentCategory","currentIndex","indexOf","length","goNext","isLast","props","containerRef","useRef","width","transform","children","useStyles","makeStyles","createStyles","wrapper","padding","down","calcHeight","lines","variant","lineHeight","ellipsis","root","content","bottom","right","backgroundImage","zIndex","overFlowHidden","overflow","cardCommonStyles","buttons","imageContain","backgroundSize","backgroundColor","usePrimaryCardStyles","media","skeleton","title","source","articleContent","useSecondaryCardStyles","Buttons","CardActions","className","Link","href","url","target","rel","underline","Button","size","color","onClick","openCopyLinkSnackBar","Article","isTransitionAnimationNeeded","useMediaQuery","useTheme","isPrimaryCard","id","cardPrimaryClasses","cardSecondaryClasses","cardClasses","useMemo","image","urlToImage","CardMedia","component","alt","Skeleton","process","Grid","item","xs","md","Card","raised","CardContent","Typography","gutterBottom","Box","author","date","timePast","getTime","minutes","floor","hours","days","months","years","getPublishTime","publishedAt","replace","Zoom","in","LoadedArticles","map","article","i","key","ArticlesContainer","classes","scrollTo","Array","from","_","maxWidth","container","alignContent","justify","spacing","Attribution","m","Chip","avatar","Avatar","label","clickable","successSnackBar","green","CopyLinkSnackbar","closeHandler","closeCopyLinkSnackBar","Snackbar","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","SnackbarContent","message","IconButton","aria-label","AnalyticsPageStatus","CopyLinkSnackBarContainer","AnimationSlideInDirection","useGetAnalytics","loading","status","setStatus","summaryStatisticsData","setSummaryStatisticsData","console","log","error","totalDocuments","summaryStatistics","earliestDocumentDate","latestDocumentDate","documentsCountByCategory","documentsCountByDay","time","series","count","wordCloud","documentsCountByDayAndCategory","documentCount","loaded","catch","display","flexDirection","alignItems","justifyContent","SectionWrapper","fullHeight","minHeight","PieChartD3","getColor","index","colors","hasAnimated","params","svg","references","this","getParams","d3","append","pieZero","getPieData","pie","totalValue","reduce","a","b","createReferences","startAngle","PI","endAngle","rx","ry","h","ir","d","sort","innerSlice","selectAll","enter","topSlice","outerSlice","text","text1","text2","x","y","attr","darker","toString","pieInner","filter","obj","pieTop","pieOuter","toUpperCase","toFixed","initData","targetData","thisClass","iRaise","textTweenX","t","cos","transition","duration","delay","attrTween","sin","sx","sy","ex","ey","ret","push","_startAngle","_endAngle","pieTransition","styleSvg","drawPie","bigNumber","margin","header","textAlign","textTransform","bigNumberTitle","Title","isArray","str","split","Content","DocumentsByCategoryPieChart","isLoaded","animate","pieChart","setPieChart","barChart","HeatMapD3","dayOfWeekStrings","monthStrings","targetRectSize","rectPadding","scales","axis","getData","getScales","getAxis","r","l","xBands","xScaleDomain","maxRectSize","rectSize","min","chart","domain","range","yScaleDomain","maxCount","tickFormat","xScaleGuide","getUTCMonth","thisOne","tickSize","tickPadding","parseInt","tickValues","_data","compensation","getUTCDay","unshift","timeArray","computedX","getX","computedY","getY","max","apply","xAxis","yAxis","rects","tooltipGroup","tooltipBackground","tooltip","tooltipText1","tooltipText2","remove","bandwidth","on","getAttribute","getUTCDate","getUTCFullYear","bBox","node","getBBox","textWidth","textHeight","tooltipWidth","tooltipHeight","toolTipX","toolTipY","borderX0","borderX1","borderY0","borderY1","styleAxisX","styleAxisY","styleRects","styleTooltip","addMouseEventToRects","prepareForAnimation","DocumentsHeatMap","heatMap","setHeatMap","section","number","DocumentsTextSummary","React","forwardRef","forwardedRef","total","useCountUp","start","end","earliestMs","latestMs","earliest","latest","dateObj","countUp","Style","willChange","placeholder","AnimationSlideIn","childrenRef","placeholderRef","dimension","setDimension","setTarget","xMax","translate","setTranslate","scrollHandler","scrollY","prevTranslate","percentage","WordCloudD3","scale","getScale","bind","counts","words","word","d3Cloud","timeInterval","rotate","random","font","draw","WordCloud","setWordCloud","fixedWrapper","childrenSize","AnimationFixed","fixedWrapperRef","isSet","isFrozen","setIsFrozen","offset","fixedWrapperStyle","getAccumulativeSum","array","result","sumHash","forEach","num","arr","sum","undefined","StackedLineChartD3","getAreaColor","textColor","domainColor","dimensions","axes","shapes","getDimension","axisX","axisY","axisYAreaTitle","axisXHover","axisYHoverText","axisYHoverLines","paths","detectionRects","getShapes","getAxes","convertToPercentage","maxQuantity","quantity","arrayLength","maxS","stackData","svgWidth","svgHeight","chartWidth","chartHeight","xRange","xBand","xPoint","xTickValues","isoString","lastDayQuantities","yAreaTitleTickValues","yAreaTitle","order","xHover","yHoverText","yHoverLines","allAxes","keys","stack","getArea","y0","ease","setTimeout","toggleAllAxes","opacity","updateHoverAxes","percentages","seriesIndex","accumulativeSum","areaMidPosition","_d","_i","tickSizeInner","insert","updateHoverXBg","initSvg","initLineChart","initAxes","initDetectionRects","appendMouseEventToDetectionRects","DocumentsCountStackedLineChart","stackedBarChart","setStackedBarChart","contentParagraphs","boxShadow","rootExpanded","summaryWrapper","line","detailWrapper","StyledExpansionPanelSummary","withStyles","expanded","ExpansionPanelSummary","StackedLineChartExpansionPanelNote","setExpanded","scrollX","ExpansionPanel","onChange","prevState","ExpansionPanelDetails","overflowX","paddingBottom","widthWrapper","Analytics","wrapperRef","bgColorChangeRef","bgBlack","setBgBlack","changeBgColor","CircularProgress","Fade","timeout","getStyle","styleName","FIXED","RELATIVE","useSticky","anchorRef","setStyle","scrolled","fixedStartHeight","offsetTop","offsetHeight","isFixed","StickyComponent","elementRef","offsetWidth","dialog","minWidth","HeaderSearch","goToSearch","setOpen","input","setInput","isEmpty","setIsEmpty","handleClose","Tooltip","TransitionComponent","Dialog","fullWidth","onSubmit","DialogTitle","DialogContent","TextField","autoFocus","helperText","DialogActions","tab","flexShrink","flexGrow","heading","whiteSpace","appBarNoBoxShadow","appBarBottomBoxShadow","trendIcon","Header","headers","goToAnalytics","goToTopic","appBarRef","AppBar","Toolbar","align","appBar","Tabs","indicatorColor","scrollButtons","Tab","SortTypes","HeaderContainer","setSearchKeyword","SEARCH","ANALYTICS","TOPIC","setCategoryIfNeeded","WorldMapD3","themeColor","caseData","red","transparent","getMapColor","grey","mapStrokeNormal","mapStrokeHoverHighlight","case","death","recovered","timeBarHighlight","timeBarNormal","timeBarLight","getStrokeWidth","animations","zoomIn","changeMapColor","timeLapse","timeLapseGap","aggregate","caseMax","pathHighlightGroup","pathHighlight","timeControl","timeBarXScale","timeMax","tooltipData","inputX","inputXSecondary","inputY","inputYSecondary","country","timeoutID","mapX","mapY","mapWidth","mapHeight","module","mapData","default","features","properties","countries","name","cases","bg","tspanCountry","tspanDate","tspanCaseAccumulative","tspanCaseNew","tspanDeathAccumulative","tspanDeathNew","tspanRecoveredAccumulative","tspanRecoveredNew","caseLineChart","deathLineChart","recoveredLineChart","stackBarChartGroup","stackBarChartCase","stackBarChartDeath","stackBarChartRecovered","updateTooltip","currentT","getNew","dateText","getDate","getMonth","getFullYear","deaths","updateTexts","textX","textY","tooltipX","lineChartHeight","xBg","xBgFloored","_inputY","tooltipY","p","lineChartStartY","stackBarChartY","chartX","stackBarChartHeight","getTooltipsDimensions","updateLineChartsHelper","dataArray","reference","yMax","scaleX","scaleY","datum","defined","lineChartYMax","nullData","updateLineCharts","currentCase","currentDeath","currentRecovered","deathWidth","recoveredWidth","updateStackBarChart","projection","fitExtent","timeControlStartY","timeControlStartX","timeBarStartY","buttonStartY","dateArray","group","selection","timeBarBg","timeBar","buttonGroup","buttonHeight","playButton","startOverButton","caseMaxLog","emptyColor","currentCases","updateMap","updateTimeControl","xSecondary","ySecondary","newCase","_case","isWaitFirstTick","tick","setTimeState","stopTimeLapse","clearTimeout","startTimeLapse","removeHighlightAndMoveTooltip","setToolTipDataState","clonedNode","clone","movedClonedNode","initMap","initTimeControl","initTooltip","mapZoomIn","appendMapPathMouseEvent","appendTimeBarMouseEvent","appendTimeControlButtonEvent","TopicCovid19Map","dataFile","Topic","mx","Status","requestSearchNews","skip","frequency","Promise","resolve","reject","dateComponent","relevance","useSearchNews","LOADING","setData","sortType","setSortType","totalCount","setTotalCount","frequencyData","setFrequencyData","pendingDateFilter","_setPendingDateFilter","dateFilter","_setDateFilter","setLoadedStatus","updatedDataLength","LOADED_NO_MORE","LOADED_EMPTY","LOADED_NORMAL","async","bin","ERROR","newSearch","toggleSort","loadMore","prevData","setPendingDateFilter","setDateFilter","getDateString","ResultsCountMessage","currentLength","dateFilterMessage","LoadingMessage","animation","LoadMoreMessage","disableElevation","GenericMessage","divider","Divider","highlight","light","HighlightedContent","contentArray","escapedKeyword","re","RegExp","cardRoot","cardActionArea","textDecoration","cursor","cardMedia","cardContent","SearchedArticleCard","cardHeight","setCardHeight","heightRef","useGetHeight","CardActionArea","toDateString","smoothscroll","polyfill","modal","transitions","create","ScrollToTopButton","setIsActive","handleScroll","useActivateByScrollY","scroll","behavior","FrequencyChartD3","selector","auxArray","binDate","getBinDateArray","barTransitionDelay","getBarTransitionDelayArray","lightColor","darkColor","dark","primaryColor","TRANSITION_DELAY","BAR_TRANSITION_DURATION","maxFrequency","binLength","argWidth","getDimensions","bars","axisXHoverDate","axisXHoverFrequency","axisYHover","hoverDetection","xHoverDate","xHoverFrequency","yHover","setHoverDetectionEventHandlers","binArray","transitionDelay","frequencyDataArray","round","chartY","barWidth","barHeight","tickSizeOuter","gridTextBox","hoverDateTextBox","setDate","setSvg","setBars","setAxisX","setAxisY","setAxisXHoverDate","setAxisXHoverFrequency","setAxisYHover","setHoverDetection","KeywordFrequency","ISOString","bindSetDate","capitalizeString","lowercase","toLowerCase","charAt","resetFontSize","SortPanel","FormControl","InputLabel","htmlFor","Select","newType","inputProps","MenuItem","borderRadius","cancelIcon","FilterByDate","chip","onDelete","deleteIcon","disabled","shrink","itemWrapper","Filters","pageRoot","page1000WidthWrapper","SearchedArticles","hasData","notFoundMessage","showChartAndFilters","foundDataOnKeyword","setFoundDataOnKeyword","useShowChartAndFilters","_id","attribution","InnerAppContainer","fetchArticlesAfterMount","store","createStore","applyMiddleware","thunkMiddleware","App","ThemeProvider","CssBaseline","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4db23a09.chunk.js","sourcesContent":["import {Action, ActionCreator, AnyAction} from \"redux\";\nimport { Category } from './category';\nimport {State} from \"../state\";\nimport {ThunkDispatch} from \"redux-thunk\";\n\nexport interface Article {\n    source: string,\n    author: string,\n    title: string,\n    description: string,\n    url: string,\n    urlToImage: string,\n    publishedAt: string,\n    content: string\n}\n\n\nexport enum ArticleActionsTypes {\n    IS_ERROR = 'IS_ERROR',\n    REQUEST_ARTICLES = 'REQUEST_ARTICLES',\n    RECEIVE_ARTICLES = 'RECEIVE_ARTICLES'\n}\n\nexport interface ArticlesRequestFailedAction {\n    type: ArticleActionsTypes.IS_ERROR\n}\n\nconst requestArticlesFailed: ActionCreator<ArticlesRequestFailedAction> = () => {\n    return {\n        type: ArticleActionsTypes.IS_ERROR\n    }\n};\n\nexport interface ArticlesRequestAction {\n    type: ArticleActionsTypes.REQUEST_ARTICLES\n}\n\nconst requestArticles: ActionCreator<ArticlesRequestAction> = () => {\n    return {\n        type: ArticleActionsTypes.REQUEST_ARTICLES\n    }\n};\n\nexport interface ArticlesReceiveAction {\n    type: ArticleActionsTypes.RECEIVE_ARTICLES,\n    articles: Array<Article>\n}\n\nconst receiveArticles: ActionCreator<ArticlesReceiveAction> = (articles: Array<Article>) => {\n    return {\n        type: ArticleActionsTypes.RECEIVE_ARTICLES,\n        articles: articles.slice()\n    }\n};\n\nconst NEWS_API = 'https://www.xiaoxihome.com/api/news?query=';\n\nexport const fetchArticles = (category: Category) => {\n    const QUERY = `\n        {\n            getNews(category: ${category}) {\n                source,\n                author,\n                title,\n                description,\n                url,\n                urlToImage,\n                publishedAt,\n                content\n            }\n        }\n    `;\n\n    return (dispatch: ThunkDispatch<State, null, AnyAction>) => {\n        dispatch(requestArticles());\n        return fetch(NEWS_API + encodeURIComponent(QUERY))\n            .then(res => res.json())\n            .then(json => {\n                if (json.errors) {\n                    dispatch(requestArticlesFailed())\n                } else {\n                    dispatch(receiveArticles(json.data.getNews))\n                }\n            })\n    }\n};\n\nexport type ArticlesActions =  ArticlesRequestAction | ArticlesRequestFailedAction | ArticlesReceiveAction;","import {fetchArticles} from \"./articles\";\nimport {ActionCreator, AnyAction} from \"redux\";\nimport {ThunkDispatch} from \"redux-thunk\";\nimport {State} from \"../state\";\n\nexport enum Category {\n    HEADLINE= `HEADLINE`,\n    BUSINESS= `BUSINESS`,\n    ENTERTAINMENT= `ENTERTAINMENT`,\n    HEALTH= `HEALTH`,\n    SCIENCE= `SCIENCE`,\n    SPORTS= `SPORTS`,\n    TECHNOLOGY= `TECHNOLOGY`,\n    SEARCH=`SEARCH`,\n    ANALYTICS='ANALYTICS',\n    TOPIC='TOPIC'\n}\n\nexport type Categories = Array<Category>;\n\nexport const categories: Categories = [\n    Category.HEADLINE, Category.BUSINESS, Category.ENTERTAINMENT, Category.HEALTH, Category.SCIENCE, Category.SPORTS, Category.TECHNOLOGY\n];\n\nexport enum CategoryActionsType {\n    SET_CATEGORY = 'SET_CATEGORY'\n}\n\nexport interface CategoryActions {\n    type: CategoryActionsType,\n    category: Category\n}\n\nconst setCategory: ActionCreator<CategoryActions> = (category: Category) => {\n    return {\n        type: CategoryActionsType.SET_CATEGORY,\n        category\n    }\n};\n\nexport function goToSearchPanel() {\n    return {\n        type: CategoryActionsType.SET_CATEGORY,\n        category: Category.SEARCH\n    }\n}\n\nexport function goToAnalyticsPanel() {\n    return {\n        type: CategoryActionsType.SET_CATEGORY,\n        category: Category.ANALYTICS\n    }\n}\n\nexport function goToTopicPanel() {\n    return {\n        type: CategoryActionsType.SET_CATEGORY,\n        category: Category.TOPIC\n    }\n}\n\nconst setCategoryAndFetchArticles = (category: Category) => {\n    return (dispatch: ThunkDispatch<State, null, AnyAction>) => {\n        dispatch(setCategory(category));\n        dispatch(fetchArticles(category));\n    };\n};\n\nexport function setNextCategory() {\n    return (dispatch: ThunkDispatch<State, null, AnyAction>, getState: () => State) => {\n        const currentCategory = getState().category;\n        const currentIndex = categories.indexOf(currentCategory);\n        const isLast = currentIndex === categories.length - 1;\n        if (isLast) {\n            dispatch(setCategoryAndFetchArticles(Category[categories[0]]));\n        } else {\n            dispatch(setCategoryAndFetchArticles(Category[categories[currentIndex + 1]]));\n        }\n    };\n}\n\nexport function setPreviousCategory() {\n    return (dispatch: ThunkDispatch<State, null, AnyAction>, getState: () => State) => {\n        const currentCategory = getState().category;\n        const currentIndex = categories.indexOf(currentCategory);\n        const isFirst = currentIndex === 0;\n        if (isFirst) {\n            dispatch(setCategoryAndFetchArticles(Category[categories[categories.length - 1]]));\n        } else {\n            dispatch(setCategoryAndFetchArticles(Category[categories[currentIndex - 1]]));\n        }\n    };\n}\n\nexport function setCategoryIfNeeded(category: Category) {\n    return (dispatch: ThunkDispatch<State, null, AnyAction>, getState: () => State) => {\n        if (getState().category === category) return;\n        dispatch(setCategoryAndFetchArticles(category));\n    };\n}\n","import {Category} from \"./actions/category\";\nimport {Article} from \"./actions/articles\";\n\nexport interface State {\n    category: Category,\n    articles: {\n        isError: boolean,\n        isFetching: boolean,\n        articles: Array<Article>\n    },\n    copyLinkSnackBar: {\n        isActive: boolean\n    },\n    searchKeyword: string\n}\n\nexport const initState: State = {\n    category: Category.HEADLINE,\n    articles: {\n        isError: false,\n        isFetching: true,\n        articles: []\n    },\n    copyLinkSnackBar: {\n        isActive: false\n    },\n    searchKeyword: ''\n};","import {initState, State} from \"../state\";\nimport {Category, CategoryActions, CategoryActionsType} from \"../actions/category\";\n\nfunction category(state = initState.category, action: CategoryActions): State['category'] {\n    switch (action.type) {\n        case CategoryActionsType.SET_CATEGORY:\n            return Category[action.category];\n        default:\n            return state\n    }\n}\n\nexport default category;","import {initState, State} from \"../state\";\nimport {ArticleActionsTypes, ArticlesActions} from \"../actions/articles\";\n\nfunction articles(state = initState.articles, actions: ArticlesActions): State['articles'] {\n    switch(actions.type) {\n        case ArticleActionsTypes.IS_ERROR:\n            return Object.assign({}, state, {isError: true});\n        case ArticleActionsTypes.REQUEST_ARTICLES:\n            return Object.assign({}, state, {\n                isError: false,\n                isFetching: true\n            });\n        case ArticleActionsTypes.RECEIVE_ARTICLES:\n            return Object.assign({}, {\n                isError: false,\n                isFetching: false,\n                articles: actions.articles.slice()\n            });\n        default:\n            return state\n    }\n}\n\nexport default articles;","export enum CopyLinkSnackbarActionsTypes {\n    CLOSE_SNACKBAR = 'CLOSE_SNACKBAR',\n    OPEN_SNACKBAR = 'OPEN_SNACKBAR'\n}\n\nexport interface CopyLinkSnackBarActions {\n    type: CopyLinkSnackbarActionsTypes\n}\n\nexport function closeCopyLinkSnackBar() {\n    return {\n        type: CopyLinkSnackbarActionsTypes.CLOSE_SNACKBAR\n    }\n}\n\nexport function openCopyLinkSnackBar() {\n    return {\n        type: CopyLinkSnackbarActionsTypes.OPEN_SNACKBAR\n    }\n}","import {CopyLinkSnackBarActions, CopyLinkSnackbarActionsTypes} from \"../actions/copy-link-snackbar\";\nimport {State, initState} from \"../state\";\n\nfunction copyLinkSnackbar(state = initState.copyLinkSnackBar, actions: CopyLinkSnackBarActions): State['copyLinkSnackBar'] {\n    switch(actions.type) {\n        case CopyLinkSnackbarActionsTypes.CLOSE_SNACKBAR:\n            return {\n                isActive: false\n            };\n        case CopyLinkSnackbarActionsTypes.OPEN_SNACKBAR:\n            return {\n                isActive: true\n            };\n        default:\n            return state\n    }\n}\n\nexport default copyLinkSnackbar","export enum SearchKeywordTypes {\n    SET_KEYWORD = 'SET_KEYWORD'\n}\n\nexport interface SearchKeywordActions {\n    type: SearchKeywordTypes,\n    keyword: string\n}\n\nexport function setSearchKeyword(keyword: string) {\n    return {\n        type: SearchKeywordTypes.SET_KEYWORD,\n        keyword\n    }\n}","import {CopyLinkSnackBarActions, CopyLinkSnackbarActionsTypes} from \"../actions/copy-link-snackbar\";\nimport {State, initState} from \"../state\";\nimport {SearchKeywordActions, SearchKeywordTypes} from \"../actions/search-keyword\";\n\nfunction searchKeyword(state = initState.searchKeyword, actions: SearchKeywordActions): State['searchKeyword'] {\n    switch(actions.type) {\n        case SearchKeywordTypes.SET_KEYWORD:\n            return actions.keyword;\n        default:\n            return state\n    }\n}\n\nexport default searchKeyword","import {combineReducers} from \"redux\";\nimport category from \"./category\";\nimport articles from \"./articles\";\nimport copyLinkSnackBar from \"./copy-link-snackbar\";\nimport searchKeyword from \"./search-keyword\";\n\nconst rootReducers = combineReducers({\n    category,\n    articles,\n    copyLinkSnackBar,\n    searchKeyword\n});\n\nexport default rootReducers;","import { createStore, applyMiddleware } from 'redux'\nimport thunkMiddleware from 'redux-thunk'\nimport {initState} from \"./state\";\nimport rootReducers from \"./reducers/root-reducers\";\n\n// import { createLogger } from 'redux-logger'\n// const loggerMiddleware = createLogger();\n\nconst preloadedState = initState;\nexport default function configureStore() {\n    return createStore(\n        rootReducers,\n        preloadedState,\n        applyMiddleware(thunkMiddleware)\n        // applyMiddleware(thunkMiddleware, loggerMiddleware)\n    )\n}","import {createMuiTheme, responsiveFontSizes} from \"@material-ui/core/styles\";\n\nlet theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: '#333333',\n            contrastText: '#fff',\n        },\n        secondary: {\n            main: '#1EB980',\n            contrastText: '#fff',\n        },\n    },\n});\ntheme = responsiveFontSizes(theme);\ntheme.typography.h1 = {\n    fontFamily: [\n        'Anton',\n        'sans-serif',\n    ].join(','),\n    fontWeight: 400,\n    fontSize: '2rem',\n    [theme.breakpoints.up('md')]: {\n        fontSize: '2.5rem',\n    },\n    fontStyle: \"normal\",\n    color: \"inherit\"\n};\n\nexport default theme;","import React, {useEffect, useState} from \"react\";\n\n// @param triggerPoint in range (0, 1)\nexport default function useLazyLoad(ref: React.RefObject<HTMLDivElement>, triggerPoint?: number) {\n    const [isVisible, setIsVisible] = useState(false);\n    let scrollHandlerLastCalledAt = Date.now() - 1000;\n\n    function checkIsVisible() {\n        const calledAt = Date.now();\n        if (calledAt - scrollHandlerLastCalledAt < 20) {\n            return\n        } else {\n            scrollHandlerLastCalledAt = calledAt\n        }\n        if (!ref.current) return;\n\n        const rect = ref.current.getBoundingClientRect();\n        const isBefore = rect.top + rect.height < 0;\n        const isAfter = triggerPoint ?\n            rect.top > window.innerHeight * triggerPoint :\n            rect.top > window.innerHeight;\n        if (!isBefore && !isAfter) setIsVisible(true);\n    }\n\n    useEffect(() => {\n        if (isVisible) return;\n        checkIsVisible();\n        document.addEventListener('scroll', checkIsVisible);\n        return () => {\n            document.removeEventListener('scroll', checkIsVisible);\n        }\n    }, [isVisible, ref]);\n\n    return isVisible\n}","function copyToClipboard(string: string) {\n    const el = document.createElement('textarea');\n    el.value = string;\n    el.setAttribute('readonly', '');\n    el.style.position = 'absolute';\n    el.style.left = '-9999px';\n    document.body.appendChild(el);\n    el.select();\n    document.execCommand('copy');\n    document.body.removeChild(el);\n}\n\nexport default copyToClipboard;","function useDebounce(debounceInterval: number) {\n    let lastExecuted = Date.now();\n\n    function shouldBeExecuted() {\n        const now = Date.now();\n        if (now - lastExecuted > debounceInterval) {\n            lastExecuted = now;\n            return true\n        } else {\n            return false\n        }\n    }\n\n    return shouldBeExecuted;\n}\n\nexport default useDebounce;","import {RefObject, useEffect, useState} from \"react\";\nimport useDebounce from \"./use-debounce\";\n\nexport enum UseSwipeableDirections {\n    NULL= 'NULL',\n    LEFT = 'LEFT',\n    RIGHT = 'RIGHT'\n}\n\nenum UserAction {\n    NULL = 'NULL',\n    SWIPE = 'SWIPE',\n    SCROLL = 'SCROLL'\n}\n\nconst DEBOUNCER = 10;\n\nfunction useSwipeable(ref: RefObject<HTMLInputElement>, threshholdPx: number) {\n    const [x1, setX1] = useState(0);\n    const [y1, setY1] = useState(0);\n    const [userAction, setUserAction] = useState(UserAction.NULL);\n    const [direction, setDirection] = useState(UseSwipeableDirections.NULL);\n    const [dragDistance, setDragDistance] = useState(0);\n    const shouldBeExecuted = useDebounce(DEBOUNCER);\n\n    function touchStartHandler(e: TouchEvent) {\n        setX1(e.changedTouches[0].clientX);\n        setY1(e.changedTouches[0].clientY)\n    }\n\n    function touchMoveHandler(e: TouchEvent) {\n        if (!shouldBeExecuted()) return;\n        const currentX = e.changedTouches[0].clientX;\n        const currentY = e.changedTouches[0].clientY;\n\n        if (userAction === 'SWIPE') {\n            if (e.cancelable) e.preventDefault();\n            setDragDistance(e.changedTouches[0].clientX - x1);\n        } else if (userAction === 'NULL' && Math.abs(currentX - x1) > Math.abs(currentY - y1)) {\n            setUserAction(UserAction.SWIPE)\n        } else if (userAction === 'NULL' && Math.abs(currentX - x1) <= Math.abs(currentY - y1)) {\n            setUserAction(UserAction.SCROLL)\n        }\n\n    }\n\n    function touchEndHandler(e: TouchEvent) {\n        const currentX = e.changedTouches[0].clientX;\n        const currentY = e.changedTouches[0].clientY;\n        if (\n            Math.abs(currentX - x1) > Math.abs(currentY - y1) &&\n            Math.abs(currentX - x1) > threshholdPx &&\n            userAction === UserAction.SWIPE\n        ) {\n            setDirection(currentX > x1 ? UseSwipeableDirections.RIGHT : UseSwipeableDirections.LEFT);\n        }\n        setDragDistance(0);\n        setUserAction(UserAction.NULL)\n    }\n\n    function resetSwipeStatus() {\n        setDirection(UseSwipeableDirections.NULL);\n    }\n\n    useEffect(() => {\n        const currentElement = ref.current;\n        if (!currentElement) return;\n        currentElement.addEventListener('touchstart', touchStartHandler);\n\n        return () => {\n            currentElement.removeEventListener('touchstart', touchStartHandler);\n        }\n    }, [ref]);\n\n    useEffect(() => {\n        const currentElement = ref.current;\n        if (!currentElement) return;\n        currentElement.addEventListener('touchmove', touchMoveHandler);\n\n        return () => {\n            currentElement.removeEventListener('touchmove', touchMoveHandler);\n        }\n    }, [y1, userAction, ref]);\n\n    useEffect(() => {\n        const currentElement = ref.current;\n        if (!currentElement) return;\n        currentElement.addEventListener('touchend', touchEndHandler);\n\n        return () => {\n            currentElement.removeEventListener('touchend', touchEndHandler);\n        }\n    }, [y1, userAction, ref]);\n\n    return {\n        direction,\n        dragDistance,\n        resetSwipeStatus\n    }\n}\n\nexport default useSwipeable","import React, {useEffect, useRef} from \"react\";\nimport useSwipeable, {UseSwipeableDirections} from \"../../tools/use-swipeable\";\nimport {connect} from \"react-redux\";\nimport {setNextCategory, setPreviousCategory} from \"../../redux/actions/category\";\n\ninterface SwipeableProps {\n    goPrevious: () => void,\n    goNext: () => void,\n}\n\nconst Swipeable: React.FC<SwipeableProps> = (props) => {\n    const containerRef = useRef(null);\n    const {\n        direction,\n        dragDistance,\n        resetSwipeStatus\n    } = useSwipeable(containerRef, 50);\n\n    useEffect(() => {\n        if (direction === UseSwipeableDirections.RIGHT) {\n            props.goPrevious()\n        } else if (direction === UseSwipeableDirections.LEFT) {\n            props.goNext()\n        }\n        return () => {\n            resetSwipeStatus();\n        }\n    }, [direction]);\n\n    return (\n        <div\n            style={{\n                width: '100%',\n                transform: `translateX(${dragDistance}px)`,\n                // it affects snackbar fixed behavior\n                // left: `${dragDistance}px`,\n                // position: 'relative'\n            }}\n            ref={containerRef}\n        >\n            { props.children }\n        </div>\n    )\n};\n\nfunction mapDispatchToProps(dispatch: any) {\n    return {\n        goPrevious: () => dispatch(setPreviousCategory()),\n        goNext: () => dispatch(setNextCategory())\n    }\n}\n\nconst SwipeableContainer = connect(\n    null,\n    mapDispatchToProps\n)(Swipeable);\n\nexport default SwipeableContainer","import React, {CSSProperties, useEffect, useMemo, useRef, useState} from \"react\";\nimport {\n    Box,\n    Button,\n    Card,\n    CardActions,\n    CardContent,\n    CardMedia,\n    createStyles,\n    Grid,\n    Link,\n    makeStyles,\n    Theme,\n    Typography,\n    useMediaQuery,\n    useTheme,\n    Zoom,\n} from \"@material-ui/core\";\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport useLazyLoad from \"../../tools/use-lazy-load\";\nimport getPublishTime from \"../../tools/get-publish-time\";\nimport copyToClipboard from \"../../tools/copy-to-clipboard\";\nimport {ThemeStyle} from \"@material-ui/core/styles/createTypography\";\nimport Swipeable from '../utility-components/swipeable';\nimport { Article as ArticleType} from \"../../redux/actions/articles\";\nimport {State} from \"../../redux/state\";\n\nconst useStyles = makeStyles((theme) => createStyles({\n    wrapper: {\n        width: '100%',\n        padding: '20px 20px 150px 20px',\n    },\n    [theme.breakpoints.down(\"sm\")]: {\n        wrapper: {\n            padding: '8px 8px 150px 8px'\n        },\n    },\n}));\n\nfunction calcHeight(lines: number, variant: ThemeStyle, theme: Theme): CSSProperties['height'] {\n    return `calc(${lines} * ${theme.typography[variant].fontSize} * ${theme.typography[variant].lineHeight})`;\n}\n\nfunction ellipsis(variant: ThemeStyle, theme: Theme) {\n    return createStyles({\n        root: {\n            position: 'relative',\n            '&:after': {\n                content: \"''\",\n                position: 'absolute',\n                bottom: 0,\n                right: 0,\n                width: '20%',\n                height: calcHeight(1, variant, theme),\n                backgroundImage: 'linear-gradient(to right, rgba(255, 255, 255, 0) , rgba(255, 255, 255, 1))',\n                zIndex: 10\n            },\n        }\n    })\n}\n\nconst overFlowHidden: CSSProperties = {\n    width: '100%',\n    overflow: 'hidden',\n    position: 'relative'\n};\n\nconst cardCommonStyles = (theme: Theme) => ({\n    buttons: {\n        ...overFlowHidden,\n    },\n    imageContain: {\n        backgroundSize: 'contain',\n        backgroundColor: theme.palette.primary.main\n    }\n});\n\nconst usePrimaryCardStyles = makeStyles((theme) => createStyles({\n    ...cardCommonStyles(theme),\n    media: {\n        height: '550px',\n        ...overFlowHidden,\n    },\n    skeleton: {\n        height: '550px',\n        ...overFlowHidden,\n    },\n    title: {\n        height: calcHeight(1, 'body1', theme),\n        ...ellipsis('body1', theme).root,\n        ...overFlowHidden,\n    },\n    source: {\n        height: calcHeight(1, 'body2', theme),\n        ...overFlowHidden,\n    },\n    articleContent: {\n        height: calcHeight(2, 'body2', theme),\n        ...ellipsis('body2', theme).root,\n        ...overFlowHidden,\n    },\n    [theme.breakpoints.down(\"sm\")]: {\n        media: {\n            height: '200px',\n        },\n        skeleton: {\n            height: '200px',\n        },\n    }\n}));\n\n\n\nconst useSecondaryCardStyles = makeStyles((theme) => createStyles({\n    ...cardCommonStyles(theme),\n    media: {\n        height: '200px',\n        ...overFlowHidden,\n    },\n    skeleton: {\n        height: '200px',\n        ...overFlowHidden,\n    },\n    title: {\n        height: calcHeight(2, 'body1', theme),\n        ...ellipsis('body1', theme).root,\n        ...overFlowHidden,\n    },\n    source: {\n        height: calcHeight(1, 'body2', theme),\n        ...overFlowHidden,\n    },\n    articleContent: {\n        height: calcHeight(3, 'body2', theme),\n        ...ellipsis('body2', theme).root,\n        ...overFlowHidden,\n    },\n    buttons: {\n        ...overFlowHidden,\n    },\n    imageContain: {\n        backgroundSize: 'contain',\n        backgroundColor: theme.palette.primary.main\n    },\n    [theme.breakpoints.down(\"sm\")]: {\n\n    }\n}));\n\ninterface ButtonsProps {\n    url: string,\n    className: string,\n    openCopyLinkSnackBar: () => void\n}\n\n\nfunction Buttons(props: ButtonsProps) {\n\n    function copyLinkHandler() {\n        copyToClipboard(props.url);\n        props.openCopyLinkSnackBar();\n    }\n\n    return (\n        <CardActions className={props.className}>\n            <Link href={props.url} target={'_blank'} rel=\"noopener\" underline={\"none\"}>\n                <Button size=\"small\" color=\"primary\">\n                    Learn more\n                </Button>\n            </Link>\n            <Button size=\"small\" color=\"primary\" onClick={copyLinkHandler}>Share</Button>\n        </CardActions>\n    )\n}\n\ninterface ArticleProps extends ArticleType {\n    id: number,\n    openCopyLinkSnackBar: () => void\n}\n\nfunction Article(props: ArticleProps) {\n    const ref = useRef(null);\n    const isVisible = useLazyLoad(ref);\n    const isTransitionAnimationNeeded = !useMediaQuery(useTheme().breakpoints.down('sm'));\n\n    const isPrimaryCard = props.id === 0 || props.id === 1;\n    const cardPrimaryClasses = usePrimaryCardStyles();\n    const cardSecondaryClasses = useSecondaryCardStyles();\n    const cardClasses = isPrimaryCard ? cardPrimaryClasses : cardSecondaryClasses;\n\n    const content = useMemo(\n        () => {\n            let image;\n            if (props.urlToImage) {\n                if (isVisible) {\n                    image = <CardMedia\n                        component=\"img\"\n                        alt={props.title}\n                        className={cardClasses.media}\n                        image={props.urlToImage}\n                        title={props.title}\n                    />\n                } else {\n                    image = <Skeleton variant={\"rect\"} className={cardClasses.skeleton} />\n                }\n            } else {\n                image = <CardMedia\n                    className={`${cardClasses.media} ${cardClasses.imageContain}`}\n                    image={process.env.PUBLIC_URL + '/xiaoxihome-news.jpg'}\n                    title={'No image'}\n                />\n            }\n\n            return (\n                <Grid\n                    item\n                    xs={12}\n                    md={isPrimaryCard ? 6 : 3}\n                    ref={ref}\n                >\n                    <Card raised>\n                        { image }\n\n                        <CardContent>\n                            <Typography gutterBottom variant=\"body1\" component=\"h2\" className={cardClasses.title}>\n                                <Box fontWeight={700}>\n                                    { props.title }\n                                </Box>\n                            </Typography>\n                            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" className={cardClasses.source}>\n                                <Box component={'span'} fontWeight={700}>\n                                    { props.source ? props.source + ' - ' : props.author ? props.author + ' - ' : '' }\n                                    { getPublishTime(new Date(props.publishedAt)) }\n                                </Box>\n                            </Typography>\n                            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" className={cardClasses.articleContent}>\n                                { props.content && props.content.replace(/\\[\\+[0-9]+\\schars\\]/ig, '') }\n                            </Typography>\n                        </CardContent>\n                        <Buttons url={props.url} className={cardClasses.buttons} openCopyLinkSnackBar={props.openCopyLinkSnackBar} />\n                    </Card>\n                </Grid>\n            )}, [props, isVisible]\n    );\n\n    return isTransitionAnimationNeeded ? (\n        <Zoom in={isVisible}>\n            { content }\n        </Zoom>\n    ) : content;\n}\n\ninterface LoadedArticlesProps {\n    articles: Array<ArticleType>,\n    openCopyLinkSnackBar: () => void\n}\n\nfunction LoadedArticles(props: LoadedArticlesProps) {\n    return (\n        <>\n            {\n                props.articles.map((article, i) => {\n                    return (\n                        <Article {...article} key={i} id={i} openCopyLinkSnackBar={props.openCopyLinkSnackBar}/>\n                    )\n                })\n            }\n        </>\n    )\n}\n\ninterface ArticlesProps extends Pick<State, 'articles'> {\n    openCopyLinkSnackBar: () => void\n}\n\nfunction Articles(props: ArticlesProps) {\n    const classes = useStyles();\n\n    // scroll to top after is category changed\n    useEffect(() => {\n        window.scrollTo(0, 0);\n    });\n\n    let content;\n    if (props.articles.isError) {\n        content = (\n            <div style={{\n                width: '100%'\n            }}>\n                error\n            </div>\n        )\n    } else if (props.articles.isFetching) {\n        content = (\n            <>\n                {\n                    Array.from(Array(10), (_, i) => {\n                        return (\n                            <Grid item key={i}>\n                                <Box width={500} height={300} maxWidth={'100%'}>\n                                    <Skeleton variant={\"rect\"} width={500} height={200}/>\n                                    <Skeleton width={500}/>\n                                    <Skeleton width={500}/>\n                                </Box>\n                            </Grid>\n                        )\n                    })\n                }\n            </>\n        )\n    } else {\n        content = <LoadedArticles articles={props.articles.articles} openCopyLinkSnackBar={props.openCopyLinkSnackBar}/>\n    }\n\n    return (\n        <Swipeable>\n            <Box className={classes.wrapper}>\n                <Grid container direction={\"row\"} alignContent={\"center\"} justify={\"center\"} spacing={2}>\n                    { content }\n                </Grid>\n            </Box>\n        </Swipeable>\n    )\n}\n\nexport {Article, Articles as default}","export default function getPublishTime(date: Date): string{\n    const timePast = Date.now() - date.getTime();\n    if (timePast < 0) {\n        return 'now'\n    }\n    const minutes = Math.floor(timePast / (60 * 1000));\n    if (minutes <= 59) {\n        return `${minutes} ${minutes === 1 ? 'minute' : 'minutes'} ago`\n    }\n    const hours = Math.floor(timePast / (60 * 60 * 1000));\n    if (hours <= 23) {\n        return `${hours} ${hours === 1 ? 'hour' : 'hours'} ago`\n    }\n    const days = Math.floor(timePast / (24 * 60 * 60 * 1000));\n    if (days <= 30) {\n        return `${days} ${days === 1 ? 'day' : 'days'} ago`\n    }\n    const months = Math.floor(timePast / (30 * 24 * 60 * 60 * 1000));\n    if (months <= 12) {\n        return `${months} ${months === 1 ? 'month' : 'months'} ago`\n    }\n    const years = Math.floor(timePast / (365 * 24 * 60 * 60 * 1000));\n    return `${years} ${years === 1 ? 'year' : 'years'} ago`\n}","import {openCopyLinkSnackBar} from \"../redux/actions/copy-link-snackbar\";\nimport {connect} from \"react-redux\";\nimport Articles from \"../components/articles/articles\";\nimport {Dispatch} from \"redux\";\n\nfunction mapDispatchToProps(dispatch: Dispatch) {\n    return {\n        openCopyLinkSnackBar: () => dispatch(openCopyLinkSnackBar())\n    }\n}\n\nconst ArticlesContainer = connect(\n    null,\n    mapDispatchToProps\n)(Articles);\n\nexport default ArticlesContainer;\n","import React from \"react\";\nimport {Avatar, Box, Chip, Grid, Link} from \"@material-ui/core\";\n\nfunction Attribution() {\n    return (\n        <Box m={2}>\n            <Grid container direction={'row'} spacing={2}>\n                <Grid item>\n                    <Link href={'https://www.xiaoxihome.com/'} target={'_blank'} rel=\"noopener\" underline={\"none\"}>\n                        <Chip\n                            avatar={<Avatar>X</Avatar>}\n                            label=\"🔧 with ❤️ by XiaoxiHome\"\n                            color=\"primary\"\n                            clickable\n                        />\n                    </Link>\n                </Grid>\n                <Grid item>\n                    <Link href={'https://newsapi.org/'} target={'_blank'} rel=\"noopener\" underline={\"none\"}>\n                        <Chip\n                            avatar={<Avatar>N</Avatar>}\n                            label=\"News data courtesy of NewsAPI.org\"\n                            color=\"secondary\"\n                            clickable\n                        />\n                    </Link>\n                </Grid>\n            </Grid>\n        </Box>\n    )\n}\n\nexport default Attribution;","import React from \"react\";\nimport {\n    createStyles,\n    IconButton,\n    Snackbar,\n    SnackbarContent,\n} from \"@material-ui/core\";\nimport Close from '@material-ui/icons/Close';\nimport {green} from '@material-ui/core/colors';\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\n\nconst useStyles = makeStyles(() => createStyles({\n    successSnackBar: {\n        backgroundColor: green[600]\n    },\n}));\n\ninterface CopyLinkSnackbarProps {\n    isActive: boolean,\n    closeCopyLinkSnackBar: () => void\n}\n\nfunction CopyLinkSnackbar(props: CopyLinkSnackbarProps) {\n    const classes = useStyles();\n\n    function closeHandler() {\n        props.closeCopyLinkSnackBar()\n    }\n\n    return (\n        <Snackbar\n            anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'center',\n            }}\n            open={props.isActive}\n            autoHideDuration={3000}\n            onClose={closeHandler}\n        >\n            <SnackbarContent\n                className={classes.successSnackBar}\n                message={\n                    <span id=\"client-snackbar\">\n                        Link copied to clipboard\n                    </span>\n                }\n                action={[\n                        <IconButton key=\"close\" aria-label=\"close\" color=\"inherit\" onClick={closeHandler}>\n                    <Close/>\n                    </IconButton>,\n            ]}\n            />\n    </Snackbar>\n    )\n}\n\nexport default CopyLinkSnackbar;","import {State} from \"../redux/state\";\nimport {closeCopyLinkSnackBar} from \"../redux/actions/copy-link-snackbar\";\nimport {connect} from \"react-redux\";\nimport CopyLinkSnackbar from \"../components/copy-link-snackbar\";\nimport {Dispatch} from \"redux\";\n\nfunction mapDispatchToProps(dispatch: Dispatch) {\n    return {\n        closeCopyLinkSnackBar: () => dispatch(closeCopyLinkSnackBar())\n    }\n}\n\nfunction mapStateToProps(state: State) {\n    return {\n        isActive: state.copyLinkSnackBar.isActive\n    }\n}\n\nconst CopyLinkSnackBarContainer = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(CopyLinkSnackbar);\n\nexport default CopyLinkSnackBarContainer;","import React, {useEffect, useState} from \"react\";\n\nexport enum AnalyticsPageStatus {\n    loading='loading',\n    loaded='loaded',\n    error='error'\n}\n\nexport interface SummaryStatisticsData {\n    totalDocuments: number,\n    earliestDocumentDate: string,\n    latestDocumentDate: string,\n    documentsCountByCategory: Array<{\n        count: number,\n        category: string\n    }>,\n    documentsCountByDay: {\n        count: number[],\n        time: number[]\n    },\n    wordCloud: Array<{\n        count: number,\n        word: string\n    }>,\n    documentsCountByDayAndCategory: {\n        documentCount: number[][],\n        series: string[],\n        category: string[]\n    }\n}\n\nconst useGetAnalytics = () => {\n    const [status, setStatus] = useState(AnalyticsPageStatus.loading);\n    const [summaryStatisticsData, setSummaryStatisticsData] = useState<SummaryStatisticsData | null>(null);\n\n    useEffect(() => {\n        fetch('https://www.xiaoxihome.com/api/news-analytics')\n            .then(res => res.json())\n            .then(json => {\n                if (json.status !== 'ok') {\n                    console.log(json);\n                    setStatus(AnalyticsPageStatus.error)\n                } else {\n                    setSummaryStatisticsData({\n                        totalDocuments: json.summaryStatistics.totalDocuments,\n                        earliestDocumentDate: json.summaryStatistics.earliestDocumentDate,\n                        latestDocumentDate: json.summaryStatistics.latestDocumentDate,\n                        documentsCountByCategory: json.summaryStatistics.documentsCountByCategory,\n                        documentsCountByDay: {\n                            time: json.summaryStatistics.series.map((_: string) => (new Date(_).getTime())),\n                            count: json.summaryStatistics.documentsCountByDay\n                        },\n                        wordCloud: json.summaryStatistics.wordCloud,\n                        documentsCountByDayAndCategory: {\n                            documentCount: json.summaryStatistics.documentsCountByDayAndCategory.documentCount,\n                            series: json.summaryStatistics.series,\n                            category: json.summaryStatistics.documentsCountByDayAndCategory.category\n                        }\n                    } as SummaryStatisticsData);\n                    setStatus(AnalyticsPageStatus.loaded)\n                }\n            })\n            .catch(e => {\n                console.log(e);\n                setStatus(AnalyticsPageStatus.error)\n            })\n    }, []);\n\n    return {status, summaryStatisticsData}\n};\n\nexport default useGetAnalytics","import React, {useEffect, useRef, useState} from \"react\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\n\nconst easeInQuad = (t: number) => t*t;\n\nexport enum AnimationSlideInDirection {\n    left= 'left',\n    right='right'\n}\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        position: 'relative',\n        zIndex: 1,\n        width: '100%',\n    },\n    children: {\n        position: 'absolute',\n        zIndex: -1,\n        top: 0,\n        left: 0,\n        willChange: 'transform',\n        width: '100%'\n    },\n    placeholder: {\n        position: 'relative',\n        zIndex: -2\n    },\n}));\n\ninterface AnimationSlideInProps {\n    direction: AnimationSlideInDirection\n}\n\nconst AnimationSlideIn: React.FC<AnimationSlideInProps> = ({children, direction}) => {\n    const classes = useStyles();\n    const containerRef = useRef<HTMLDivElement>(null);\n    const childrenRef = useRef<HTMLDivElement>(null);\n    const placeholderRef = useRef<HTMLDivElement>(null);\n\n    const [dimension, setDimension] = useState({\n        width: `0px`,\n        height: `0px`\n    });\n    const [target, setTarget] = useState({\n        start: 0,\n        end: 0\n    });\n    const [translate, setTranslate] = useState({\n        xMax: 0,\n        x: 0,\n        y: 0\n    });\n\n    const scrollHandler = () => {\n        const isBefore = window.scrollY + window.innerHeight < target.start;\n        const isAfter = window.scrollY + window.innerHeight * 0.5 > target.end; // center of the element aligns center of the viewport\n        if (!isBefore && !isAfter) {\n            const percentage = (window.scrollY - target.start + window.innerHeight) / (target.end - target.start + 0.5 * window.innerHeight); // window.scrollY subtract isBefore and isAfter\n            setTranslate((prevTranslate) => ({\n                ...prevTranslate,\n                x: prevTranslate.xMax * easeInQuad(1 - percentage)\n            }))\n        } else if (isBefore) {\n            if (translate.x !== translate.xMax) {\n                setTranslate((prevTranslate) => ({\n                    ...prevTranslate,\n                    x: prevTranslate.xMax\n                }))\n            }\n        } else if (isAfter) {\n            if (translate.x !== 0) {\n                setTranslate((prevTranslate) => ({\n                    ...prevTranslate,\n                    x: 0\n                }))\n            }\n        }\n    };\n\n    useEffect(() => {\n        if (!childrenRef.current || !placeholderRef.current || dimension.width !== '0px') return;\n        setDimension({\n            width: `${childrenRef.current.getBoundingClientRect().width}px`,\n            height: `${childrenRef.current.getBoundingClientRect().height}px`\n        });\n    }, [dimension]);\n\n    useEffect(() => {\n        if (!containerRef.current || dimension.width === '0px' || target.start !== 0) return;\n        const rect = containerRef.current.getBoundingClientRect();\n        setTarget({\n            start: window.scrollY + rect.top,\n            end: window.scrollY + rect.top + rect.height * 0.5\n        });\n        const xMax = direction === AnimationSlideInDirection.left ? -(rect.left + rect.width) : rect.right + rect.width;\n        setTranslate({\n            xMax,\n            x: xMax,\n            y: 0\n        })\n    }, [dimension, target, translate]);\n\n    useEffect(() => {\n        document.addEventListener('scroll', scrollHandler);\n        return () => document.removeEventListener('scroll', scrollHandler);\n    }, [target, translate]);\n\n\n\n    return (\n        <div className={classes.root} ref={containerRef}>\n            <div className={classes.children} ref={childrenRef} style={{transform: `translate(${translate.x}px, ${translate.y}px)`}}>\n                { children }\n            </div>\n            <div className={classes.placeholder} ref={placeholderRef} style={{...dimension}}>\n\n            </div>\n        </div>\n    )\n};\n\nexport default AnimationSlideIn","import React, {useRef, useState} from \"react\";\nimport CountUp from 'react-countup';\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport Fade from \"@material-ui/core/Fade\";\nimport useLazyLoad from \"../../../tools/use-lazy-load\";\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        width: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        // padding: theme.spacing(10, 2),\n        // [theme.breakpoints.down('sm')]: {\n        //     padding: theme.spacing(2, 2),\n        // }\n    }\n}));\n\ninterface SectionWrapperProps {\n\n}\n\nconst SectionWrapper: React.FC<SectionWrapperProps> = ({children}) => {\n    const classes = useStyles();\n    const containerRef = useRef<HTMLDivElement>(null);\n    // const isVisible = useLazyLoad(containerRef, 0.8);\n    const [fullHeight, setFullHeight] = useState(window.innerHeight - 100);\n\n    return (\n        <div className={classes.root} ref={containerRef} style={{minHeight: `${fullHeight}px`}}>\n            { children }\n        </div>\n    )\n};\n\nexport default SectionWrapper","import * as d3 from \"d3\";\n\nexport type PieChartData = ArcData[];\n\ntype ArcData = {\n    title: string,\n    value: number\n}\n\nclass PieChartD3 {\n\n    readonly getColor = (index: number) => {\n        // const colors = ['#003f5c', '#374c80', '#7a5195' ,'#bc5090' ,'#ef5675' ,'#ff764a' ,'#ffa600'];\n        const colors = ['#ffa600', '#ff764a', '#ef5675' ,'#bc5090' ,'#7a5195' ,'#374c80' ,'#003f5c'];\n        return colors[index > colors.length - 1 ? 0 : index]\n    };\n    hasAnimated = false;\n    id: string;\n    params: {\n        width: number,\n        height: number,\n        startAngle: number,\n        endAngle: number\n        rx: number,\n        ry: number,\n        h: number,\n        ir: number,\n    };\n    svg: d3.Selection<SVGSVGElement, unknown, HTMLElement, any>;\n    references: {\n        pie: d3.Selection<SVGGElement, unknown, HTMLElement, any>,\n        innerSlice: d3.Selection<SVGPathElement, d3.PieArcDatum<ArcData>, SVGGElement, any>,\n        topSlice: d3.Selection<SVGPathElement, d3.PieArcDatum<ArcData>, SVGGElement, any>,\n        outerSlice: d3.Selection<SVGPathElement, d3.PieArcDatum<ArcData>, SVGGElement, any>,\n        text: d3.Selection<SVGTextElement, d3.PieArcDatum<ArcData>, SVGGElement, any>,\n        text1: d3.Selection<SVGTextElement, d3.PieArcDatum<ArcData>, SVGGElement, any>,\n        text2: d3.Selection<SVGTextElement, d3.PieArcDatum<ArcData>, SVGGElement, any>,\n    };\n    data: {\n        pieZero: d3.PieArcDatum<ArcData>[],\n        pie: d3.PieArcDatum<ArcData>[],\n        totalValue: number\n    };\n\n    constructor(id: string, data: PieChartData, width: number) {\n        this.id = id;\n        this.params = this.getParams(width);\n        this.svg = d3.select(`#${id}`).append(\"svg\");\n        this.data = {\n            pieZero: this.getPieData(data.map((_,i)=>({\n                value: i === 0 ? 100 : 0,\n                title: _.title\n            }))),\n            pie: this.getPieData(data),\n            totalValue: this.getPieData(data).reduce((a, b) => a + b.data.value, 0)\n        };\n        this.references = this.createReferences();\n    }\n\n    getParams(width: number) {\n        const height = width * 0.6;\n        return {\n            width,\n            height: height,\n            startAngle: Math.PI,\n            endAngle: Math.PI * 3,\n            rx: width / 2 * 0.8,\n            ry: height / 2 - 0.1 * height,\n            h: 0.1 * height,\n            ir: 0.4\n        }\n    };\n\n    getPieData(data: PieChartData) {\n        const _data =d3.pie<ArcData>()\n            .value((d) => d.value)\n            .sort((a, b) => - a.value + b.value)\n            .startAngle(this.params.startAngle)\n            .endAngle(this.params.endAngle)\n            (data);\n        return _data\n    }\n\n    createReferences() {\n        const pie = this.svg.append('g');\n\n        const innerSlice = pie\n            .selectAll().data(this.data.pie).enter().append(\"path\");\n\n        const topSlice = pie\n            .selectAll().data(this.data.pie).enter().append(\"path\");\n\n        const outerSlice = pie\n            .selectAll().data(this.data.pie).enter().append(\"path\");\n\n        const text = pie\n            .selectAll().data(this.data.pie).enter().append(\"text\");\n\n        const text1 = text.append('tspan');\n\n        const text2 = text.append('tspan');\n\n        return {\n            pie,\n            innerSlice,\n            topSlice,\n            outerSlice,\n            text,\n            text1,\n            text2\n        }\n    }\n\n    // @param x center x\n    // @param y center y\n    // @param rx radius x\n    // @param ry radius y\n    // @param h height x\n    // @param ir inner radius x\n    drawPie(x: number, y: number, rx: number, ry: number, h: number, ir: number) {\n        this.references.pie.attr(\"transform\", \"translate(\" + x + \",\" + y + \")\");\n\n        this.references.innerSlice\n            .style(\"fill\", (d) => d3.hsl(this.getColor(d.index)).darker().toString())\n            .attr(\"d\", (d) => this.pieInner(this.data.pieZero.filter(obj=>obj.index===d.index)[0], rx+0.5, ry+0.5, 0, ir));\n\n        this.references.topSlice\n            .style(\"fill\", (d) => this.getColor(d.index))\n            .attr(\"d\", (d) => this.pieTop(this.data.pieZero.filter(obj=>obj.index===d.index)[0], rx, ry, ir));\n\n        this.references.outerSlice\n            .style(\"fill\", (d) => d3.hsl(this.getColor(d.index)).darker().toString())\n            .attr(\"d\", (d) => this.pieOuter(this.data.pieZero.filter(obj=>obj.index===d.index)[0], rx-.5, ry-.5, 0));\n\n        this.references.text\n            .attr(\"x\",'0')\n            .attr(\"y\",'0')\n            .attr(\"text-anchor\", \"middle\")\n            .style('fill', 'white')\n            .style('opacity', 0);\n\n        this.references.text1\n            .attr(\"dy\",0)\n            .style(\"font-weight\", 700)\n            .text(d => d.data.title.toUpperCase());\n        this.references.text2.attr(\"dy\",'1.2em').text(d => ((d.data.value / this.data.totalValue) * 100).toFixed(2)+'%')\n    }\n\n    pieTransition(rx: number, ry: number, h: number, ir: number, initData: d3.PieArcDatum<ArcData>[], targetData: d3.PieArcDatum<ArcData>[]) {\n        const thisClass = this;\n        const duration = 2000;\n        const raiseDuration = 2000;\n\n        const iRaise = d3.interpolate(0, h);\n\n        function arcTweenInner(d: d3.PieArcDatum<ArcData>) {\n            return (t: number) => thisClass.pieInner(d, rx+0.5, ry+0.5, iRaise(t), ir);\n        }\n        function arcTweenTop(d: d3.PieArcDatum<ArcData>) {\n            const i = d3.interpolate(initData.filter(obj => obj.index === d.index)[0], targetData.filter(obj => obj.index === d.index)[0]);\n            return (t: number) => thisClass.pieTop(i(t), rx, ry, ir);\n        }\n        function arcTweenOuter(d: d3.PieArcDatum<ArcData>) {\n            return (t: number) => thisClass.pieOuter(d, rx-.5, ry-.5, iRaise(t));\n        }\n        function textTweenX(d: d3.PieArcDatum<ArcData>) {\n            const i = d3.interpolate(initData.filter(obj => obj.index === d.index)[0], targetData.filter(obj => obj.index === d.index)[0]);\n            return (t: number) => `${0.5*(1+ir)*rx*Math.cos(0.5*(i(t).startAngle+i(t).endAngle))}`;\n        }\n        function textTweenY(d: d3.PieArcDatum<ArcData>) {\n            const i = d3.interpolate(initData.filter(obj => obj.index === d.index)[0], targetData.filter(obj => obj.index === d.index)[0]);\n            return (t: number) => `${0.5*(1+ir)*ry*Math.sin(0.5*(i(t).startAngle+i(t).endAngle))}`;\n        }\n\n\n        this.references.innerSlice\n            .transition()\n            .duration(raiseDuration)\n            .delay(duration)\n            .attrTween('d', arcTweenInner);\n        this.references.topSlice\n            .transition()\n            .duration(duration)\n            .attrTween('d', arcTweenTop);\n        this.references.outerSlice\n            .transition()\n            .duration(raiseDuration)\n            .delay(duration)\n            .attrTween('d', arcTweenOuter);\n\n        this.references.text.style(\"opacity\", 0);\n        this.references.text\n            .transition()\n            .duration(duration)\n            .attrTween('x', textTweenX)\n            .attrTween('y', textTweenY)\n            .style(\"opacity\", 1);\n        this.references.text1.transition()\n            .duration(duration)\n            .attrTween('x', textTweenX);\n        this.references.text2.transition()\n            .duration(duration)\n            .attrTween('x', textTweenX);\n    }\n\n    pieTop(d: d3.PieArcDatum<ArcData>, rx: number, ry: number, ir: number){\n        if(d.endAngle - d.startAngle === 0 ) return \"M 0 0\";\n        const sx = rx*Math.cos(d.startAngle),\n            sy = ry*Math.sin(d.startAngle),\n            ex = rx*Math.cos(d.endAngle),\n            ey = ry*Math.sin(d.endAngle);\n\n        const ret =[];\n        ret.push(\"M\",sx,sy,\"A\",rx,ry,\"0\",(d.endAngle-d.startAngle > Math.PI? 1: 0),\"1\",ex,ey,\"L\",ir*ex,ir*ey);\n        ret.push(\"A\",ir*rx,ir*ry,\"0\",(d.endAngle-d.startAngle > Math.PI? 1: 0), \"0\",ir*sx,ir*sy,\"z\");\n        return ret.join(\" \");\n    }\n\n    pieOuter(d: d3.PieArcDatum<ArcData>, rx: number, ry: number, h: number){\n        const _startAngle = (d.startAngle < 2 * Math.PI ? 2 * Math.PI : d.startAngle);\n        const _endAngle = (d.endAngle < 2 *  Math.PI ? 2 * Math.PI : d.endAngle);\n\n        const sx = rx*Math.cos(_startAngle),\n            sy = ry*Math.sin(_startAngle),\n            ex = rx*Math.cos(_endAngle),\n            ey = ry*Math.sin(_endAngle);\n\n        const ret =[];\n        ret.push(\"M\",sx,h+sy,\"A\",rx,ry,\"0 0 1\",ex,h+ey,\"L\",ex,ey,\"A\",rx,ry,\"0 0 0\",sx,sy,\"z\");\n        return ret.join(\" \");\n    }\n\n    pieInner(d: d3.PieArcDatum<ArcData>, rx: number, ry: number, h: number, ir: number){\n        const startAngle = (d.startAngle < Math.PI ? Math.PI : d.startAngle);\n        const endAngle = (d.endAngle < Math.PI ? Math.PI : d.endAngle);\n\n        const sx = ir*rx*Math.cos(startAngle),\n            sy = ir*ry*Math.sin(startAngle),\n            ex = ir*rx*Math.cos(endAngle),\n            ey = ir*ry*Math.sin(endAngle);\n\n        const ret =[];\n        ret.push(\"M\",sx, sy,\"A\",ir*rx,ir*ry,\"0 0 1\",ex,ey, \"L\",ex,h+ey,\"A\",ir*rx, ir*ry,\"0 0 0\",sx,h+sy,\"z\");\n        return ret.join(\" \");\n    }\n\n    styleSvg() {\n        this.svg\n            .attr(\"width\", this.params.width)\n            .attr(\"height\", this.params.height);\n    }\n\n    animate() {\n        if (this.hasAnimated) return;\n        this.pieTransition(this.params.rx, this.params.ry, this.params.h, this.params.ir, this.data.pieZero, this.data.pie);\n        this.hasAnimated = true;\n    }\n\n    main() {\n        this.styleSvg();\n        this.drawPie(this.params.width / 2, this.params.height / 2, this.params.rx, this.params.ry, this.params.h, this.params.ir);\n    }\n}\n\nexport default PieChartD3","import {Theme} from \"@material-ui/core\";\nimport {CSSProperties} from \"react\";\n\nexport const bigNumber = (theme: Theme): CSSProperties => ({\n    width: '100%',\n    fontFamily: 'Open Sans,sans-serif',\n    fontSize: '6rem',\n    fontWeight: 800,\n    margin: 0,\n    lineHeight: 1,\n    [theme.breakpoints.down('sm')]: {\n        fontSize: '3rem',\n    }\n});\n\nexport const header = (theme: Theme): CSSProperties => ({\n    textAlign: 'start',\n    width: '70%',\n    fontFamily: 'Open Sans,sans-serif',\n    textTransform: 'uppercase',\n    fontSize: '2rem',\n    fontWeight: 800,\n    margin: theme.spacing(0, 0),\n    lineHeight: 1,\n    [theme.breakpoints.down('sm')]: {\n        fontSize: '1rem',\n    }\n});\n\nexport const content = (theme: Theme): CSSProperties => ({\n    color: 'grey',\n    textAlign: 'start',\n    width: '70%',\n    fontFamily: 'Open Sans,sans-serif',\n    fontSize: '1rem',\n    fontWeight: 800,\n    margin: theme.spacing(2, 0),\n    [theme.breakpoints.down('sm')]: {\n        fontSize: '0.875rem',\n    }\n});\n\nexport const bigNumberTitle = (theme: Theme): CSSProperties => ({\n    width: '100%',\n    fontFamily: 'Open Sans,sans-serif',\n    fontSize: '1rem',\n    fontWeight: 800,\n    margin: 0,\n    [theme.breakpoints.down('sm')]: {\n        fontSize: '0.875rem',\n    }\n});","import React from \"react\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport {header} from \"../styles/analytics-styles\";\n\nconst useStyles = makeStyles(theme => ({\n    title: {\n        ...header(theme)\n    }\n}));\n\ninterface TitleProps {\n    value: string | string[]\n}\n\nconst Title: React.FC<TitleProps> = ({value}) => {\n    const classes = useStyles();\n\n    if (Array.isArray(value)) {\n        return (\n            <>\n                {\n                    value.map((str, i) =>\n                        <h2 className={classes.title} key={i}>\n                            { str }\n                        </h2>\n                    )\n                }\n            </>\n        )\n    } else {\n        return (\n            <>\n                {\n                    value.split(' ').map((str, i) =>\n                        <h2 className={classes.title} key={i}>\n                            { str }\n                        </h2>\n                    )\n                }\n            </>\n        )\n    }\n};\n\nexport default Title","import React from \"react\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport {content} from \"../styles/analytics-styles\";\n\nconst useStyles = makeStyles(theme => ({\n    content: {\n        ...content(theme)\n    }\n}));\n\ninterface ContentProps {\n    value: string\n}\n\nconst Content: React.FC<ContentProps> = ({value}) => {\n    const classes = useStyles();\n\n    return (\n        <p className={classes.content}>\n            { value }\n        </p>\n    )\n};\n\nexport default Content","import React, {useEffect, useRef, useState} from \"react\";\nimport PieChartD3, {PieChartData} from \"../../d3-charts/pie-chart-d3\";\nimport useLazyLoad from \"../../tools/use-lazy-load\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport Title from \"./utilitis/title\";\nimport Content from \"./utilitis/content\";\n\nconst useStyles = makeStyles(theme => ({\n\n}));\n\ninterface DocumentsByCategoryBarChartProps {\n    isLoaded: boolean,\n    data: PieChartData,\n    animate: boolean\n    width?: number\n}\n\nconst id = 'analytics-documents-count-by-category-pie-chart';\n\nconst DocumentsByCategoryPieChart: React.FC<DocumentsByCategoryBarChartProps> = ({isLoaded, data, animate, width}) => {\n    const ref = useRef<HTMLDivElement>(null);\n    const [pieChart, setPieChart] = useState<null | PieChartD3>(null);\n\n    useEffect(() => {\n        if (isLoaded && data && width && pieChart === null) {\n            const barChart = new PieChartD3(\n                id,\n                data,\n                width\n            );\n            barChart.main();\n            setPieChart(barChart);\n        }\n    }, [isLoaded, data, width]);\n\n    useEffect(() => {\n        if (pieChart && animate) {\n            pieChart.animate();\n        }\n    }, [pieChart, animate]);\n\n    return (\n        <>\n            <Title value={'News archived by category'} />\n            <Content value={`Overall I'd say the news are pretty well balanced.`}/>\n            <div id={id} ref={ref}/>\n        </>\n    )\n};\n\nexport default DocumentsByCategoryPieChart","import * as d3 from \"d3\";\n\nexport interface HeatMapData {\n    count: number[],\n    time: number[]\n}\n\nclass HeatMapD3 {\n\n    readonly getColor = (index: number) => {\n        const colors = ['#FFF3E0', '#FFE0B2', '#FFB74D', '#FB8C00', '#E65100'];\n        return colors[index > colors.length - 1 ? 0 : index]\n    };\n    readonly dayOfWeekStrings = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n    readonly monthStrings = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n    readonly targetRectSize = 70;\n    readonly rectPadding = 0.1;\n    id: string;\n    params: {\n        width: number,\n        height: number,\n        m: {t: number, r: number, b: number, l: number},\n        chart: {\n            width: number,\n            height: number,\n            x: number,\n            y: number\n        };\n    };\n    svg: d3.Selection<SVGSVGElement, unknown, HTMLElement, any>;\n    references: {\n        xAxis: d3.Selection<SVGGElement, unknown, HTMLElement, any>,\n        yAxis: d3.Selection<SVGGElement, unknown, HTMLElement, any>,\n        rects: d3.Selection<SVGRectElement, {count: number, time: number}, SVGGElement, any>,\n        tooltipBackground: d3.Selection<SVGRectElement, unknown, HTMLElement, any>,\n        tooltip: d3.Selection<SVGTextElement, unknown, HTMLElement, any>,\n        tooltipText1: d3.Selection<SVGTextElement, unknown, HTMLElement, any>,\n        tooltipText2: d3.Selection<SVGTextElement, unknown, HTMLElement, any>,\n    };\n    data: {\n        x: number[], // # of week\n        y: number[], // # of day of week\n        xScaleDomain: string[],\n        xScaleGuide: number[],\n        yScaleDomain: string[],\n        data: Array<{\n            count: number,\n            time: number\n        }>,\n        maxCount: number\n    };\n    scales: {\n        x: d3.ScaleBand<string>,\n        y: d3.ScaleBand<string>,\n        color: d3.ScaleQuantize<number>\n    };\n    axis: {\n        x: d3.Axis<string>,\n        y: d3.Axis<string>,\n    };\n\n    constructor(id: string, data: HeatMapData, width: number) {\n        this.id = id;\n        this.data = this.getData(data);\n        this.params = this.getParams(width);\n        this.svg = d3.select(`#${id}`).append(\"svg\");\n        this.references = this.createReferences();\n        this.scales = this.getScales();\n        this.axis = this.getAxis();\n    }\n\n    getParams(width: number) {\n        const m = {t: 50, r: 20, b: 10, l: 50};\n\n        const xBands = this.data.xScaleDomain.length;\n        const maxRectSize = Math.floor((width - m.l - m.r) / xBands);\n        const rectSize = Math.min(maxRectSize, this.targetRectSize);\n\n        const chart = {\n            width: this.data.xScaleDomain.length * rectSize,\n            height: 7 * rectSize,\n            x: m.l,\n            y: m.t\n        };\n        const _width = chart.width + m.l + m.r;\n        const height = chart.height + m.t + m.b;\n\n        return {\n            width: _width,\n            height,\n            m,\n            chart\n        }\n    };\n\n    getScales() {\n        return {\n            x: d3.scaleBand()\n                .domain(this.data.xScaleDomain)\n                .range([0, this.params.chart.width])\n                .padding(this.rectPadding),\n            y: d3.scaleBand()\n                .domain(this.data.yScaleDomain)\n                .range([0, this.params.chart.height])\n                .padding(this.rectPadding),\n            color: d3.scaleQuantize()\n                .domain([0, this.data.maxCount])\n                .range([0, 1, 2, 3, 4])\n        }\n    }\n\n    getAxis() {\n        return {\n            x: d3.axisTop(this.scales.x)\n                .tickFormat((d, i) => {\n                    if (i === 0) {\n                        return this.monthStrings[(new Date(this.data.xScaleGuide[i]).getUTCMonth())]\n                    } else {\n                        const thisOne = this.monthStrings[(new Date(this.data.xScaleGuide[i]).getUTCMonth())];\n                        const lastOne = this.monthStrings[(new Date(this.data.xScaleGuide[i-1]).getUTCMonth())];\n                        return thisOne === lastOne ? '' : thisOne\n                    }\n                })\n                .tickSize(0)\n                .tickPadding(5),\n            y: d3.axisLeft(this.scales.y)\n                .tickFormat((d) => this.dayOfWeekStrings[parseInt(d)])\n                .tickValues(['1', '3', '5'])\n                .tickSize(0)\n                .tickPadding(5)\n        }\n    }\n\n    getData(data: HeatMapData) {\n        // compensate the data array with empty data first, making the first day of the data array is Sunday.\n        const _data = data.time.map((_, i) => ({\n            count: data.count[i],\n            time: _\n        }));\n        const aDay = 1000 * 60 * 60 * 24;\n        const firstActualData = new Date(_data[0].time);\n        let compensation = firstActualData.getUTCDay();\n        let time = _data[0].time;\n        while (compensation > 0) {\n            compensation--;\n            time -= aDay\n            _data.unshift({\n                count: 0,\n                time\n            });\n        }\n        //\n        const getY = (time: number[]) => {\n            // day of week\n            return time.map(_ => (new Date(_)).getUTCDay())\n        };\n\n        const getX = (time: number[]) => {\n            return time.map((_, i) => Math.floor(i / 7))\n        };\n\n        const timeArray = _data.map(_=>_.time);\n        const computedX = getX(timeArray);\n        const xScaleDomain = [];\n        const xScaleGuide = [];\n        for (let i=0; i<=computedX[computedX.length - 1]; i++) {\n            xScaleDomain.push(i.toString());\n            xScaleGuide.push(_data[i*7].time);\n        }\n        //\n        const computedY = getY(timeArray);\n        const yScaleDomain = [];\n        for (let i=0; i<7; i++) {\n            yScaleDomain.push(i.toString())\n        }\n        //\n        const maxCount = Math.max.apply(Math, _data.map(_=>_.count));\n        return {\n            x: computedX,\n            y: computedY,\n            xScaleDomain,\n            xScaleGuide,\n            yScaleDomain,\n            data: _data,\n            maxCount\n        }\n    }\n\n    createReferences() {\n        const xAxis = this.svg.append('g');\n        const yAxis = this.svg.append('g');\n        const rects = this.svg.append('g')\n                .selectAll('rect').data(this.data.data)\n                .enter().append('rect');\n        // tooltips has to be here to be rendered on top\n        const tooltipGroup = this.svg.append('g');\n        const tooltipBackground = tooltipGroup.append('rect');\n        const tooltip = tooltipGroup.append('text');\n\n        return {\n            xAxis,\n            yAxis,\n            rects,\n            tooltipBackground,\n            tooltip,\n            tooltipText1: tooltip.append('tspan'),\n            tooltipText2: tooltip.append('tspan'),\n        }\n    }\n\n    styleSvg() {\n        this.svg\n            .attr(\"width\", this.params.width)\n            .attr(\"height\", this.params.height);\n    }\n\n    styleAxisX() {\n        this.axis.x(this.references.xAxis);\n\n        this.references.xAxis.selectAll('.domain').remove();\n\n        this.references.xAxis\n            .style('transform', `translate(${this.params.chart.x}px, ${this.params.chart.y}px)`)\n            .style('font-size', '0.875rem')\n            .style('font-weight', '700');\n\n        this.references.xAxis.selectAll('text')\n            .style('fill', 'grey');\n\n    }\n\n    styleAxisY() {\n        this.axis.y(this.references.yAxis);\n\n        this.references.yAxis.selectAll('.domain').remove();\n\n        this.references.yAxis\n            .style('transform', `translate(${this.params.chart.x}px, ${this.params.chart.y}px)`)\n            .style('font-size', '0.875rem')\n            .style('font-weight', '700');\n\n        this.references.yAxis.selectAll('text')\n            .style('fill', 'grey');\n            // .attr('text-anchor', 'start')\n    }\n\n    styleRects() {\n        this.references.rects\n            .style('transform', `translate(${this.params.chart.x}px, ${this.params.chart.y}px)`)\n            .attr('width', this.scales.x.bandwidth())\n            .attr('height', this.scales.y.bandwidth())\n            .attr('x', (d, i) => this.scales.x(this.data.x[i].toString()) || 0)\n            .attr('y', (d, i) => this.scales.y(this.data.y[i].toString()) || 0);\n    }\n\n    styleTooltip() {\n        this.references.tooltip\n            .style('transform', `translate(${this.params.chart.x}px, ${this.params.chart.y}px)`)\n            .attr('text-anchor', 'middle')\n            .attr('alignment-baseline', 'middle');\n\n        this.references.tooltipText1\n            .style('font-weight', 700)\n            .style('fill', 'white');\n\n        this.references.tooltipText2\n            .style('fill', 'white');\n\n        this.references.tooltipBackground\n            .style('transform', `translate(${this.params.chart.x}px, ${this.params.chart.y}px)`)\n            .style('fill', '#000')\n            .style('opacity', 0.8)\n            .attr('rx', '5')\n            .attr('ry', '5');\n    }\n\n    addMouseEventToRects() {\n        const thisClass = this;\n        // tooltip padding\n        const px = 1.2;\n        const py = 2.5;\n\n        this.references.rects\n            .on('mouseover', function(this: SVGRectElement, d) {\n                const x = parseInt(this.getAttribute(\"x\") || '0');\n                const y = parseInt(this.getAttribute(\"y\") || '0');\n                const width = parseInt(this.getAttribute(\"width\") || '0');\n                const height = parseInt(this.getAttribute(\"height\") || '0');\n\n                // append texts to tspans first\n                thisClass.references.tooltipText1.text(`${d.count} news archived on `);\n\n                const date = new Date(d.time);\n                thisClass.references.tooltipText2.text(`${thisClass.monthStrings[date.getUTCMonth()]} ${date.getUTCDate()}, ${date.getUTCFullYear()}`)\n\n                // get dimension of text\n                // tooltip has text-anchor: middle\n                const bBox = thisClass.references.tooltip.node()?.getBBox();\n                const textWidth = bBox?.width || 0;\n                const textHeight = bBox?.height || 0;\n                const tooltipWidth = textWidth * px;\n                const tooltipHeight = textHeight * py;\n                let toolTipX = x + 0.5 * width;\n                let toolTipY = y - 0.5 * tooltipHeight;\n                const borderX0 = -thisClass.params.m.l;\n                const borderX1 = thisClass.params.width - thisClass.params.m.l;\n                const borderY0 = -thisClass.params.m.t;\n                const borderY1 = thisClass.params.height - thisClass.params.m.t;\n                // handle if x of tooltip is out of border\n                if (toolTipX - 0.5 * tooltipWidth < borderX0) {\n                    toolTipX = borderX0 + 0.5 * tooltipWidth\n                } else if (toolTipX + 0.5 * tooltipWidth > borderX1) {\n                    toolTipX = borderX1 - 0.5 * tooltipWidth;\n                }\n                // handle if y of tooltip is out of border\n                if (toolTipY - tooltipHeight < borderY0) {\n                    toolTipY = borderY0 + tooltipHeight\n                } else if (toolTipY + tooltipHeight > borderY1) {\n                    toolTipY = borderY1 - 0.5 * tooltipHeight;\n                }\n                thisClass.references.tooltip\n                    .attr(\"x\", toolTipX)\n                    .attr(\"y\", toolTipY);\n\n                // move tooltipBackground\n                thisClass.references.tooltipBackground\n                    .attr(\"x\", toolTipX - 0.5 * tooltipWidth)\n                    .attr(\"y\", toolTipY - 0.4 * textHeight - 0.5 * tooltipHeight)\n                    .attr(\"width\", tooltipWidth)\n                    .attr(\"height\", tooltipHeight);\n            })\n            .on('mouseleave', function(this: SVGRectElement, d){\n                thisClass.references.tooltip\n                    .attr(\"x\", -1000)\n                    .attr(\"y\", -1000);\n                thisClass.references.tooltipBackground\n                    .attr(\"x\", -1000)\n                    .attr(\"y\", -1000);\n            })\n    }\n\n    prepareForAnimation() {\n        this.references.rects\n            .style('fill', this.getColor(3))\n    }\n\n    animate() {\n        this.references.rects.transition()\n            .style('fill', \"rgba(255, 255, 255, 0)\")\n            .duration(500);\n\n        this.references.rects.transition()\n            .style('fill', (d) => this.getColor(this.scales.color(d.count)))\n            .delay((d) => 500 + this.scales.color(d.count) * 1000)\n            .duration(800)\n    }\n\n    main() {\n        this.styleSvg();\n        this.styleAxisX();\n        this.styleAxisY();\n        this.styleRects();\n        this.styleTooltip();\n        this.addMouseEventToRects();\n        this.prepareForAnimation();\n    }\n}\n\nexport default HeatMapD3\n","import React, {useEffect, useRef, useState} from \"react\";\nimport useLazyLoad from \"../../tools/use-lazy-load\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport HeatMapD3, {HeatMapData} from \"../../d3-charts/heat-map-d3\";\nimport Title from \"./utilitis/title\";\nimport Content from \"./utilitis/content\";\n\nconst useStyles = makeStyles(theme => ({\n\n}));\n\ninterface DocumentsHeatMapProps {\n    isLoaded: Boolean,\n    data: HeatMapData,\n    width: number\n}\n\nconst DocumentsHeatMap: React.FC<DocumentsHeatMapProps> = ({isLoaded, data, width}) => {\n    const ref = useRef<HTMLDivElement>(null);\n    const isVisible = useLazyLoad(ref, 0.5);\n    const [heatMap, setHeatMap] = useState<null | HeatMapD3>(null);\n\n    useEffect(() => {\n        if (isLoaded && data && heatMap === null) {\n            const heatMap = new HeatMapD3(\n                'analytics-documents-heat-map',\n                data,\n                width\n            );\n            heatMap.main();\n            setHeatMap(heatMap);\n        }\n    }, [isLoaded, data]);\n\n    useEffect(() => {\n        if (heatMap && isVisible) {\n            heatMap.animate();\n        }\n    }, [heatMap, isVisible]);\n\n    return (\n        <>\n            <Title value={'News archived each day'} />\n            <Content value={`Glad to see that people enjoyed their weekends.`}/>\n            <div id='analytics-documents-heat-map' ref={ref}/>\n        </>\n    )\n};\n\nexport default DocumentsHeatMap","import React, {useState} from \"react\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport {useCountUp} from \"react-countup\";\nimport {bigNumber, bigNumberTitle} from \"./styles/analytics-styles\";\n\nconst monthStrings = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        textAlign: 'center',\n        width: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        color: '#F2F2F2'\n    },\n    section: {\n        margin: theme.spacing(5, 0),\n        [theme.breakpoints.down('sm')]: {\n            margin: theme.spacing(2, 0)\n        }\n    },\n    title: {\n        ...bigNumberTitle(theme)\n    },\n    number: {\n        ...bigNumber(theme)\n    }\n}));\n\ninterface DocumentsTextSummaryProps {\n    totalDocuments: number,\n    earliestDocumentDate: string,\n    latestDocumentDate: string\n}\n\nconst DocumentsTextSummary = React.forwardRef<HTMLDivElement, DocumentsTextSummaryProps>(({totalDocuments, earliestDocumentDate, latestDocumentDate}, forwardedRef) => {\n\n    const classes = useStyles();\n    const [fullHeight, setFullHeight] = useState(window.innerHeight - 100);\n    const total = useCountUp({start: totalDocuments*0.9, end: totalDocuments, duration: 5});\n\n    const earliestMs = (new Date(earliestDocumentDate)).getTime();\n    const latestMs = (new Date(latestDocumentDate)).getTime();\n    const earliest = useCountUp({start: earliestMs*0.9, end: earliestMs, duration: 5});\n    const latest = useCountUp({start: latestMs*0.9, end: latestMs, duration: 5});\n\n    const title = (value: string) => (\n        <h2 className={classes.title}>{value}</h2>\n    );\n    const date = (number: number) => {\n        const dateObj = new Date(number);\n        return (\n            <p className={classes.number}>{dateObj.getUTCDate()} {monthStrings[dateObj.getUTCMonth()]}, {dateObj.getUTCFullYear()}</p>\n        )\n    };\n\n    return (\n        <>\n            <div className={classes.root} style={{minHeight: `${fullHeight}px`}}>\n                <div className={classes.section}>\n                    { title('Total news articles archived') }\n                    <p className={classes.number}>{total.countUp}</p>\n                </div>\n                <div className={classes.section}>\n                    { title('First news article archived') }\n                    { date(+earliest.countUp) }\n                </div>\n                <div className={classes.section}>\n                    { title('Most recent news article archived') }\n                    { date(+latest.countUp) }\n                </div>\n                <div ref={forwardedRef}> </div>\n            </div>\n        </>\n    )\n});\n\nexport default DocumentsTextSummary","import {useState, CSSProperties, useEffect, RefObject} from \"react\";\nimport useDebounce from \"./use-debounce\";\n\n\nenum Style {\n    FIXED = 'FIXED',\n    RELATIVE = 'RELATIVE'\n}\n\nconst getStyle = (styleName: Style) => {\n    const style = {\n        FIXED: {\n            position: \"fixed\",\n            top: 0,\n            left: 0,\n            width: \"100%\"\n        } as CSSProperties,\n        RELATIVE: {\n            position: \"relative\",\n            width: \"100%\"\n        } as CSSProperties,\n    };\n\n    return {...style[styleName]};\n};\n\n// set sticky when scroll passed ref element's bottom\nfunction useSticky(anchorRef: RefObject<HTMLElement>) {\n    const [style, setStyle] = useState(Style.RELATIVE);\n    const shouldBeExecuted = useDebounce(10);\n\n    function scrollHandler() {\n        const scrolled = window.scrollY;\n        if (scrolled === 0 && style !== Style.RELATIVE) {\n            // don't debounce when fast scrolling to top\n            setStyle(Style.RELATIVE);\n            return;\n        }\n\n        if (!anchorRef.current) return;\n        const fixedStartHeight = anchorRef.current.offsetTop + anchorRef.current.offsetHeight;\n\n        if (!shouldBeExecuted()) return;\n        if (scrolled >= fixedStartHeight && style !== Style.FIXED) {\n            setStyle(Style.FIXED);\n        } else if (scrolled < fixedStartHeight && style !== Style.RELATIVE) {\n            setStyle(Style.RELATIVE);\n        }\n    }\n\n    useEffect(() => {\n        document.addEventListener('scroll', scrollHandler);\n\n        return () => {\n            document.removeEventListener('scroll', scrollHandler);\n        }\n    }, [style, anchorRef]);\n\n    return {\n        style: getStyle(style),\n        isFixed: style === Style.FIXED\n    };\n}\n\nexport default useSticky;","import * as d3 from \"d3\";\nimport d3Cloud from \"d3-cloud\";\n\nexport type WordCloudData = Array<{\n    count: number,\n    word: string\n}>\n\nclass WordCloudD3 {\n    colors = ['#003f5c', '#374c80', '#7a5195' ,'#bc5090' ,'#ef5675' ,'#ff764a' ,'#ffa600'];\n    id: string;\n    data: {\n        data: WordCloudData,\n        words: string[],\n        counts: number[],\n        maxCount: number\n    };\n    params: {\n        width: number,\n        height: number\n    };\n    scale: d3.ScaleLinear<number, number>;\n\n    constructor(data: WordCloudData, width: number, id: string) {\n        this.id = id;\n        this.data = this.getData(data);\n        this.params = {\n            width,\n            height: width * 0.6\n        };\n        this.scale = this.getScale();\n        this.styleSvg = this.styleSvg.bind(this);\n    }\n\n    getData(data: WordCloudData) {\n        const counts = data.map(obj => obj.count);\n        return {\n            data,\n            words: data.map(obj => obj.word),\n            counts,\n            maxCount: Math.max.apply(Math, counts)\n        }\n    }\n\n    getScale() {\n        return d3.scaleLinear()\n            .domain([0, this.data.maxCount])\n            .range([10, this.params.width >= 1000 ? 100 : this.params.width >= 800 ? 70 : 36]);\n    }\n\n    draw() {\n        d3Cloud<{\n            text: string,\n            size: number\n        }>().size([this.params.width, this.params.height])\n            .timeInterval(20)\n            .words(this.data.data.map((d) => ({\n                text: d.word,\n                size: this.scale(d.count)\n            })))\n            .fontSize((d: any) => d.size)\n            .rotate(function() { return ~~(Math.random() * 2) * 90; })\n            .font(\"Anton\")\n            .on(\"end\", this.styleSvg)\n            .start();\n    }\n\n    styleSvg(words: any) {\n        d3.select(`#${this.id}`).append(\"svg\")\n            .attr(\"width\", this.params.width)\n            .attr(\"height\", this.params.height)\n            .append(\"g\")\n            .attr(\"transform\", \"translate(\" + [this.params.width >> 1, this.params.height >> 1] + \")\")\n            .selectAll(\"text\")\n            .data(words)\n            .enter().append(\"text\")\n            .style(\"font-size\", (d: any) => { return d.size + \"px\"})\n            .style(\"font-family\", \"Anton\")\n            .style(\"fill\", () => this.colors[Math.floor(Math.random() * this.colors.length)])\n            .attr(\"text-anchor\", \"middle\")\n            .attr(\"transform\", function(d: any) {\n                return \"translate(\" + [d.x, d.y] + \")rotate(\" + d.rotate + \")\";\n            })\n            .text(function(d: any) { return d.text; });\n    }\n\n    main() {\n        this.draw();\n    }\n}\n\nexport default WordCloudD3","import React, {useEffect, useRef, useState} from \"react\";\nimport useLazyLoad from \"../../tools/use-lazy-load\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport HeatMapD3, {HeatMapData} from \"../../d3-charts/heat-map-d3\";\nimport Title from \"./utilitis/title\";\nimport Content from \"./utilitis/content\";\nimport WordCloudD3, {WordCloudData} from \"../../d3-charts/word-cloud-d3\";\n\nconst useStyles = makeStyles(theme => ({\n\n}));\n\ninterface WordCloudProps {\n    isLoaded: Boolean,\n    data: WordCloudData,\n    width?: number\n}\n\nconst WordCloud: React.FC<WordCloudProps> = ({isLoaded, data, width}) => {\n    const ref = useRef<HTMLDivElement>(null);\n    const isVisible = useLazyLoad(ref, 0.5);\n    const [wordCloud, setWordCloud] = useState<null | WordCloudD3>(null);\n\n    useEffect(() => {\n        if (isLoaded && data && width && wordCloud === null) {\n            const wordCloud = new WordCloudD3(\n                data,\n                width,\n                'analytics-documents-word-cloud',\n            );\n            wordCloud.main();\n            setWordCloud(wordCloud);\n        }\n    }, [isLoaded, data, width]);\n\n    // useEffect(() => {\n    //     if (heatMap && isVisible) {\n    //         heatMap.animate();\n    //     }\n    // }, [heatMap, isVisible]);\n\n    return (\n        <>\n            <Title value={'Word it out'} />\n            <Content value={`The power of words.`}/>\n            <div id='analytics-documents-word-cloud' ref={ref}/>\n        </>\n    )\n};\n\nexport default WordCloud","import React, {CSSProperties, useEffect, useRef, useState} from \"react\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        position: 'relative',\n        width: '100%',\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'center',\n        // backgroundColor: 'rgba(0,255,0,0.5)'\n    },\n    fixedWrapper: {\n        position: 'relative',\n        overflow: 'hidden',\n        width: '100%',\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'center',\n        willChange: 'transform',\n        // backgroundColor: 'rgba(255,0,0,0.5)'\n    },\n    children: {\n        width: '100%',\n        position: 'absolute',\n        minHeight: 800,\n        willChange: 'transform'\n    },\n    childrenSize: {\n        width: '100%'\n    },\n    placeholder: {\n        position: 'relative',\n    },\n}));\n\ninterface AnimationFixedProps {\n\n}\n\nconst AnimationFixed: React.FC<AnimationFixedProps> = ({children}) => {\n    const classes = useStyles();\n    const containerRef = useRef<HTMLDivElement>(null);\n    const childrenRef = useRef<HTMLDivElement>(null);\n    const placeholderRef = useRef<HTMLDivElement>(null);\n    const fixedWrapperRef = useRef<HTMLDivElement>(null);\n\n    const [dimension, setDimension] = useState({\n        isSet: false,\n        width: '0',\n        height: '0',\n        left: '0'\n    });\n    const [target, setTarget] = useState({\n        isSet: false,\n        start: 0,\n        end: 0\n    });\n    const [isFrozen, setIsFrozen] = useState(false);\n\n    const scrollHandler = () => {\n        if (!fixedWrapperRef.current || !placeholderRef.current || !childrenRef.current) return;\n\n        const isBefore = window.scrollY + window.innerHeight < target.start;\n        const isAfter = window.scrollY > target.end;\n        if (!isBefore && !isAfter) {\n            // const percentage = (window.scrollY - target.start + window.innerHeight) / (target.end - target.start + window.innerHeight); // window.scrollY subtract isBefore and isAfter\n            // childrenRef.current.style.transform = `translateY(${-(0.5 - percentage) * (window.innerHeight - 110)}px)`;\n            const offset = placeholderRef.current.getBoundingClientRect().top;\n            childrenRef.current.style.top = `${offset}px`;\n            fixedWrapperRef.current.style.top = `${offset}px`;\n            if (isFrozen) {\n                setIsFrozen(false);\n            }\n        } else if (isBefore) {\n            if (!isFrozen) return;\n            fixedWrapperRef.current.style.top = `${window.scrollY + placeholderRef.current.getBoundingClientRect().top}px`;\n            setIsFrozen(true);\n        } else if (isAfter) {\n            if (!isFrozen) return;\n            fixedWrapperRef.current.style.top = `${window.scrollY + placeholderRef.current.getBoundingClientRect().bottom}px`;\n            setIsFrozen(true);\n        }\n    };\n\n    useEffect(() => {\n        // use the children dimension to set placeholder's dimension\n        if (!childrenRef.current || dimension.isSet) return;\n        setDimension({\n            isSet: true,\n            width: `${childrenRef.current.getBoundingClientRect().width}px`,\n            height: `${childrenRef.current.getBoundingClientRect().height}px`,\n            left: `${childrenRef.current.getBoundingClientRect().left}px`\n        });\n        scrollHandler();\n    }, [dimension]);\n\n    useEffect(() => {\n        // wait until dimension is set\n        // use placeholder's position to set scrolling targets\n        if (!placeholderRef.current || !dimension.isSet || target.isSet) return;\n        const rect = placeholderRef.current.getBoundingClientRect();\n        setTarget({\n            isSet: true,\n            start: window.scrollY + rect.top,\n            end: window.scrollY + rect.top + rect.height\n        });\n    }, [dimension, target]);\n\n    useEffect(() => {\n        document.addEventListener('scroll', scrollHandler);\n        return () => document.removeEventListener('scroll', scrollHandler);\n    }, [target, isFrozen]);\n\n    const fixedWrapperStyle: CSSProperties = {\n        left: dimension.left,\n        height: dimension.height,\n        width: dimension.width,\n        position: 'fixed',\n    };\n\n    return (\n        <div className={classes.root} ref={containerRef}>\n            <div className={classes.fixedWrapper} ref={fixedWrapperRef} style={dimension.isSet ? fixedWrapperStyle : {}}>\n                <div className={classes.children} ref={childrenRef}>\n                    { children }\n                </div>\n            </div>\n            <div className={classes.placeholder} ref={placeholderRef} style={{width: dimension.width, height: dimension.height}}>\n\n            </div>\n        </div>\n    )\n\n};\n\nexport default AnimationFixed","import * as d3 from \"d3\";\n\nconst getAccumulativeSum = (array: number[]) => {\n    // TODO O(n^2)\n    const result: number[] = [];\n    const sumHash: {[key: string]: number} = {};\n    array.forEach((num, index, arr) => {\n        let i = index - 1;\n        let sum = 0;\n        while (i >= 0) {\n            if (sumHash[i] !== undefined) {\n                sum += sumHash[i];\n                break\n            } else {\n                sum += arr[i];\n                i--\n            }\n        }\n        sumHash[index - 1] = sum;\n        result.push(sum)\n    });\n\n    return result\n};\n\nexport interface StackedLineChartD3Data {\n    quantity: number[][],\n    series: string[],\n    order: string[]\n}\n\nclass StackedLineChartD3 {\n    readonly monthStrings = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n    colors = {\n        getAreaColor: (index: number) => {\n            const colors = ['#003f5c', '#374c80', '#7a5195' ,'#bc5090' ,'#ef5675' ,'#ff764a' ,'#ffa600'];\n            // const colors = ['#ffa600', '#ff764a', '#ef5675' ,'#bc5090' ,'#7a5195' ,'#374c80' ,'#003f5c'];\n            return colors[index > colors.length - 1 ? 0 : index]\n        },\n        textColor: '#555',\n        domainColor: 'red'\n    };\n    svg: d3.Selection<SVGSVGElement, unknown, HTMLElement, any>;\n    dimensions: {\n        svgWidth: number,\n        svgHeight: number,\n        m: {t: number, r: number, b: number, l: number},\n        chartWidth: number,\n        chartHeight: number\n    };\n    scales: {\n        y: d3.ScaleLinear<number, number>,\n        x: d3.ScaleLinear<number, number>,\n        xBand: d3.ScaleBand<string>,\n        xPoint: d3.ScalePoint<string>\n    };\n    axes: {\n        y: d3.Axis<number>,\n        x: d3.Axis<string>,\n        yAreaTitle: d3.Axis<number>,\n        xHover: d3.Axis<string>,\n        yHoverText: d3.Axis<number>,\n        yHoverLines: d3.Axis<number>,\n    };\n    references: {\n        axisX: d3.Selection<SVGGElement, unknown, HTMLElement, any> | null,\n        axisY: d3.Selection<SVGGElement, unknown, HTMLElement, any> | null,\n        axisYAreaTitle: d3.Selection<SVGGElement, unknown, HTMLElement, any> | null,\n        axisXHover: d3.Selection<SVGGElement, unknown, HTMLElement, any> | null,\n        axisYHoverText: d3.Selection<SVGGElement, unknown, HTMLElement, any> | null,\n        axisYHoverLines: d3.Selection<SVGGElement, unknown, HTMLElement, any> | null,\n        paths: d3.Selection<SVGPathElement, d3.Series<{ [key: string]: number; }, string>, SVGGElement, any> | null,\n        detectionRects: d3.Selection<SVGRectElement, number[], SVGGElement, any> | null,\n    };\n    data: {\n        stackData: {[key: string]: number}[],\n        maxQuantity: number\n    } & StackedLineChartD3Data;\n    shapes: {\n        stack: d3.Stack<number, {[key: string]: number}, string>,\n        getArea: (t: number) => d3.Area<any>\n    };\n\n\n    constructor(id: string, data: StackedLineChartD3Data, width: number, height: number) {\n        this.svg = d3.select(`#${id}`).append(\"svg\");\n        this.data = this.getData(data, true);\n        this.dimensions = this.getDimension(width, height);\n        this.scales = this.getScales();\n        this.references = {\n            axisX: null,\n            axisY: null,\n            axisYAreaTitle: null,\n            axisXHover: null,\n            axisYHoverText: null,\n            axisYHoverLines: null,\n            paths: null,\n            detectionRects: null\n        };\n        this.shapes = this.getShapes();\n        this.axes = this.getAxes();\n    }\n\n    getData(data: StackedLineChartD3Data, convertToPercentage: boolean) {\n        let maxQuantity: number;\n        // percentage convert the daily quantity from absolute value to percentage of the sum of quantity in that day\n        // curve can be more readable in this way\n        if (convertToPercentage) {\n            const percentage = data.quantity.map(arr => {\n                const arrayLength = arr.length;\n                const sum = arr.reduce((a, b) => a + b);\n                return arr.map(num => sum === 0 ? (1 / arrayLength) : (num / sum))\n            });\n            data = Object.assign({}, data, {quantity: percentage});\n            maxQuantity = 1;\n        } else {\n            const maxS = data.quantity.map(arr => arr.reduce((a, b) => a + b));\n            maxQuantity = Math.max.apply(Math, maxS);\n        }\n\n        const stackData = data.quantity.map(arr => {\n            const obj: {[key: string]: number} = {};\n            arr.forEach((_, i) => obj[`${i}`] = _);\n            return obj\n        });\n\n        return {\n            ...data,\n            stackData,\n            maxQuantity\n        }\n    }\n\n    getDimension(width: number, height: number) {\n        const m = {t: 10, r: 150, b: 50, l: 60};\n        const chartWidth = width - m.l - m.r;\n        const chartHeight = height - m.t - m.b;\n        return {\n            svgWidth: width,\n            svgHeight: height,\n            m,\n            chartWidth,\n            chartHeight\n        }\n    }\n\n    getScales() {\n        const xRange: [number, number] = [this.dimensions.m.l, this.dimensions.m.l + this.dimensions.chartWidth];\n        const x = d3.scaleLinear()\n            .domain([0, this.data.series.length - 1])\n            .range(xRange);\n        const y = d3.scaleLinear()\n            .domain([0, this.data.maxQuantity])\n            .range([this.dimensions.chartHeight + this.dimensions.m.t, this.dimensions.m.t]);\n        const xBand = d3.scaleBand<string>()\n            .domain(this.data.quantity.map((_, i) => i.toString()))\n            .range(xRange);\n        const xPoint = d3.scalePoint()\n            .domain(this.data.quantity.map((_, i) => `${i}`))\n            .range(xRange);\n        return {\n            x,\n            y,\n            xBand,\n            xPoint\n        }\n    }\n\n    getAxes() {\n        const xTickValues = this.dimensions.chartWidth >= 300 ?\n            [0, Math.floor(this.data.series.length * 0.25), Math.floor(this.data.series.length * 0.5), Math.floor(this.data.series.length * 0.75), this.data.series.length - 1].map(_=>`${_}`) :\n            [0, this.data.series.length - 1].map(_=>`${_}`);\n        const x = d3.axisBottom(this.scales.xBand)\n            .tickValues(xTickValues)\n            .tickFormat((d, i) => {\n                const isoString = this.data.series[parseInt(`${d}`)];\n                const date = new Date(isoString);\n                return `${date.getUTCDate()} ${this.monthStrings[date.getUTCMonth()]}, ${date.getUTCFullYear()}`\n            });\n        const y = d3.axisLeft<number>(this.scales.y)\n            .tickValues([0, this.data.maxQuantity])\n            .tickFormat((i) => ['0%', '100%'][parseInt(`${i}`)]);\n\n        const lastDayQuantities = this.data.quantity[this.data.quantity.length - 1].slice();\n        const yAreaTitleTickValues = getAccumulativeSum(lastDayQuantities);\n        yAreaTitleTickValues.forEach((num, i , arr) => arr[i] = num + 0.5 * lastDayQuantities[i]);\n        const yAreaTitle = d3.axisRight<number>(this.scales.y)\n            .tickValues(yAreaTitleTickValues)\n            .tickFormat((d, i) => this.data.order[parseInt(`${i}`)]);\n\n        const xHover = d3.axisBottom(this.scales.xPoint)\n            .tickValues([])\n            .tickFormat((d, i) => {\n                const isoString = this.data.series[parseInt(`${d}`)];\n                const date = new Date(isoString);\n                return `${date.getUTCDate()} ${this.monthStrings[date.getUTCMonth()]}, ${date.getUTCFullYear()}`\n            });\n\n        [x, y, yAreaTitle, xHover].forEach((_)=>{\n            _.tickPadding(10);\n            _.tickSize(0);\n        });\n\n        const yHoverText = d3.axisLeft<number>(this.scales.y)\n            .tickValues([]);\n        const yHoverLines = d3.axisLeft<number>(this.scales.y)\n            .tickValues([]);\n        \n        return {\n            x,\n            y,\n            yAreaTitle,\n            xHover,\n            yHoverText,\n            yHoverLines\n        }\n    }\n\n    initAxes() {\n        this.references.axisX = this.svg.append('g');\n        this.references.axisY = this.svg.append('g');\n        this.references.axisYAreaTitle = this.svg.append('g');\n        this.references.axisXHover = this.svg.append('g');\n        this.references.axisYHoverText = this.svg.append('g');\n        this.references.axisYHoverLines = this.svg.append('g');\n\n        this.axes.x(this.references.axisX);\n        this.axes.y(this.references.axisY);\n        this.axes.yAreaTitle(this.references.axisYAreaTitle);\n        this.axes.xHover(this.references.axisXHover);\n        this.axes.yHoverText(this.references.axisYHoverText);\n        this.axes.yHoverLines(this.references.axisYHoverLines);\n\n        this.references.axisX.style('transform', `translate(0px, ${this.dimensions.m.t + this.dimensions.chartHeight}px)`);\n        this.references.axisY.style('transform', `translate(${this.dimensions.m.l}px, 0px)`);\n        this.references.axisYAreaTitle.style('transform', `translate(${this.dimensions.m.l + this.dimensions.chartWidth}px, 0px)`);\n        this.references.axisXHover.style('transform', `translate(0px, ${this.dimensions.m.t + this.dimensions.chartHeight}px)`);\n        this.references.axisYHoverText.style('transform', `translate(${this.dimensions.m.l}px, 0px)`);\n        this.references.axisYHoverLines.style('transform', `translate(${this.dimensions.m.l}px, 0px)`);\n\n        const allAxes = [this.references.axisX, this.references.axisY, this.references.axisYAreaTitle, this.references.axisXHover, this.references.axisYHoverText, this.references.axisYHoverLines];\n\n        allAxes.forEach(_ => {\n            _\n                .selectAll('text')\n                .style('font-size', '0.875rem')\n                .style('font-weight', 700)\n                .style('fill', this.colors.textColor)\n        });\n        allAxes.forEach(_ => {\n            _\n                .selectAll('.domain')\n                .remove()\n        });\n        allAxes.forEach(_ => {\n            _.style('opacity', 1)\n        });\n\n        this.references.axisYAreaTitle\n            .selectAll('text')\n            .style('fill', (d, i) => this.colors.getAreaColor(i))\n            .style('text-transform', 'uppercase');\n    }\n\n    getShapes() {\n        const keys: string[] = this.data.order.map((_,i) => `${i}`);\n        const stack = d3.stack()\n            .keys(keys)\n            .order(d3.stackOrderNone)\n            .offset(d3.stackOffsetNone);\n\n        const getArea = (t: number) => {\n            return d3.area()\n                .x((d, i) => {\n                    return this.scales.xPoint(`${i}`) || 0\n                })\n                .y0((d) => {\n                    return this.scales.y(d[0] + (this.data.maxQuantity) * (1 - t))\n                })\n                .y1((d) => this.scales.y(d[1] + (this.data.maxQuantity) * (1 - t)))\n                // .curve(d3.curveNatural)\n        };\n\n        return {\n            stack,\n            getArea\n        }\n    }\n\n    initSvg() {\n        this.svg\n            .attr('width', this.dimensions.svgWidth)\n            .attr('height', this.dimensions.svgHeight)\n    }\n\n    initLineChart() {\n        this.references.paths = this.svg.append('g')\n            .selectAll('path')\n            .data(this.shapes.stack(this.data.stackData))\n            .enter()\n            .append('path')\n            .attr('d', (d) => this.shapes.getArea(0)(d))\n            .attr('fill', (d, i) => this.colors.getAreaColor(i))\n            .style('transform', `translateX(${this.scales.xBand.bandwidth()})`)\n    }\n\n    initDetectionRects() {\n        this.references.detectionRects = this.svg.append('g')\n            .selectAll('rect')\n            .data(this.data.quantity)\n            .enter()\n            .append('rect')\n            .attr('x', (d, i) => {\n                return (this.scales.xPoint(i.toString()) || 0) - this.scales.xBand.bandwidth() * 0.5\n            })\n            .attr('y', this.dimensions.m.t)\n            .attr('width', this.scales.xBand.bandwidth)\n            .attr('height', this.dimensions.chartHeight)\n            .style('fill', '#fff')\n            .style('opacity', 0)\n    }\n\n    animate() {\n        if (!this.references.paths) return;\n\n        this.references.paths.transition()\n            .delay((d, i) => i * 100)\n            .duration(1200)\n            .attrTween('d', (d) => {\n                return (t: number) => {\n                    return this.shapes.getArea(t)(d) || ''\n                }\n            })\n            .ease(d3.easeCubicIn);\n\n        setTimeout(() => {\n            // this.appendMouseEventToSvg();\n            this.toggleAllAxes(true)\n        }, this.data.order.length * 200 + 1000 + 200)\n    }\n\n    toggleAllAxes(on: boolean) {\n        const opacity = on ? 1 : 0;\n        [\n            this.references.axisYAreaTitle,\n            this.references.axisX,\n            this.references.axisY\n        ].forEach(_ => {\n            _?.transition()\n                .duration(500)\n                .style('opacity', opacity)\n        })\n    }\n\n    appendMouseEventToSvg() {\n        this.svg\n            .on('mouseover', () => {\n                this.toggleAllAxes(true)\n            })\n            .on('mouseleave', () => {\n                this.toggleAllAxes(false)\n            })\n    }\n\n    appendMouseEventToDetectionRects() {\n        const thisClass = this;\n\n        const updateHoverXBg = () => {\n            if (!this.references.axisXHover) return;\n\n            const bBox = this.references.axisXHover.select<SVGTextElement>('text').node()?.getBBox();\n            if (!bBox) return;\n\n            this.references.axisXHover.selectAll('g.tick').insert('rect',\n                ':first-child')\n                .attr('width', bBox.width*1.2)\n                .attr('height', bBox.height)\n                .attr('x', bBox.x-0.1*bBox.width)\n                .attr('y', bBox.y)\n                .style('fill', '#fefefe');\n\n        };\n\n        const updateHoverAxes = (percentages?: number[], seriesIndex?: number) => {\n            if (percentages !== undefined && seriesIndex !== undefined) {\n                const accumulativeSum = getAccumulativeSum(percentages);\n                const areaMidPosition = accumulativeSum.map((num, i) => num + 0.5 * percentages[i]);\n                this.axes.yHoverText\n                    .tickValues(areaMidPosition)\n                    .tickFormat((_d, _i) => `${(percentages[_i] * 100).toFixed(2)}%`)\n\n                this.axes.yHoverLines\n                    .tickValues(accumulativeSum.slice(1))\n                    .tickFormat(() => '')\n                    .tickSizeInner(-thisClass.dimensions.chartWidth)\n\n                this.axes.xHover\n                    .tickValues([`${seriesIndex}`])\n                if (this.references.axisXHover && this.references.axisYHoverText && this.references.axisYHoverLines) {\n                    this.axes.xHover(this.references.axisXHover);\n                    this.axes.yHoverText(this.references.axisYHoverText);\n                    this.axes.yHoverLines(this.references.axisYHoverLines);\n\n                    this.references.axisYHoverLines\n                        .selectAll('line')\n                        .style('stroke', 'rgba(255,255,255,0.6)')\n                        .style('stroke-width', 2);\n\n                    this.references.axisYHoverText\n                        .selectAll('text')\n                        .style('font-size', '0.875rem')\n                        .style('font-weight', '700')\n                        .style('fill', (d, i) => this.colors.getAreaColor(i));\n                    this.references.axisYHoverText.select('.domain').remove();\n                    this.references.axisYHoverText.selectAll('line')\n                        .style('stroke', (d, i) => this.colors.getAreaColor(i))\n                        .style('stroke-width', 5);\n\n                    this.references.axisXHover\n                        .selectAll('text')\n                        .style('font-size', '0.875rem')\n                        .style('font-weight', '700')\n                        .style('fill', this.colors.textColor);\n\n                    updateHoverXBg();\n                }\n            } else {\n                [this.axes.xHover, this.axes.yHoverText, this.axes.yHoverLines].forEach(_ => {\n                    _.tickValues([]);\n                });\n                if (this.references.axisXHover && this.references.axisYHoverText && this.references.axisYHoverLines) {\n                    this.axes.xHover(this.references.axisXHover);\n                    this.axes.yHoverText(this.references.axisYHoverText);\n                    this.axes.yHoverLines(this.references.axisYHoverLines);\n                }\n            }\n\n            if (this.references.axisXHover && this.references.axisYHoverText && this.references.axisYHoverLines) {\n                [this.references.axisXHover, this.references.axisYHoverText, this.references.axisYHoverLines].forEach(_ => {\n                    _.select('.domain').remove()\n                });\n            }\n        };\n\n        this.references.detectionRects\n            ?.on('mouseover', function(d, i) {\n                d3.select(this).style('opacity', 0.3);\n                updateHoverAxes(d, i)\n             })\n            .on('mouseleave', function(d, i) {\n                d3.select(this).style('opacity', 0);\n                updateHoverAxes()\n            })\n    }\n\n    main() {\n        this.initSvg();\n        this.initLineChart();\n        this.initAxes();\n        this.initDetectionRects();\n        this.appendMouseEventToDetectionRects();\n    }\n}\n\nexport default StackedLineChartD3","import React, {useEffect, useRef, useState} from \"react\";\nimport useLazyLoad from \"../../tools/use-lazy-load\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport Title from \"./utilitis/title\";\nimport Content from \"./utilitis/content\";\nimport StackedLineChartD3, {StackedLineChartD3Data} from \"../../d3-charts/stacked-line-chart-d3\";\n\nconst useStyles = makeStyles(theme => ({\n\n}));\n\ninterface DocumentsHeatMapProps {\n    isLoaded: Boolean,\n    data: StackedLineChartD3Data,\n    width: number,\n    height: number\n}\n\nconst id = 'analytics-documents-count-stacked-bar-chart';\n\nconst DocumentsCountStackedLineChart: React.FC<DocumentsHeatMapProps> = ({isLoaded, data, width, height}) => {\n    const ref = useRef<HTMLDivElement>(null);\n    const isVisible = useLazyLoad(ref, 0.5);\n    const [stackedBarChart, setStackedBarChart] = useState<null | StackedLineChartD3>(null);\n\n    useEffect(() => {\n        if (isLoaded && data && stackedBarChart === null) {\n            const stackedBarChart = new StackedLineChartD3(\n                id,\n                data,\n                width,\n                height\n            );\n            stackedBarChart.main();\n            setStackedBarChart(stackedBarChart);\n        }\n    }, [isLoaded, data]);\n\n    useEffect(() => {\n        if (stackedBarChart && isVisible) {\n            stackedBarChart.animate();\n        }\n    }, [stackedBarChart, isVisible]);\n\n    return (\n        <>\n            <Title value={['News', 'archived', 'by', 'day & category']} />\n            <Content value={`Art made of data.`}/>\n            <div id={id} ref={ref}/>\n        </>\n    )\n};\n\nexport default DocumentsCountStackedLineChart","import React, {useEffect, useState} from \"react\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport {ExpansionPanel, ExpansionPanelDetails, ExpansionPanelSummary, withStyles} from \"@material-ui/core\";\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nimport Title from \"./utilitis/title\";\nimport Content from \"./utilitis/content\";\n\nconst contentParagraphs = [\n    'The band height of each category is the percentage of news count in that category to the total news count in that day. ' +\n    'Given the number of news archived each day often fluctuates and follows a weekly pattern, the percentage tells a better story that how people\\'s interests in different news change over time.',\n    'Some patterns can be observed from the graph: due to the spreading of the novel coronavirus at the beginning of 2020, more and more health news were being reported.',\n    'Since the early March of 2020, many countries and cities in Europe and North America starts to lockdown, at the same time we see a decline in sport and entertainment news.'\n];\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        width: '100%',\n        boxShadow: 'none',\n        backgroundColor: 'transparent',\n        '&:before': {\n            height: 0\n        },\n        '&$rootExpanded': {\n            margin: 0\n        }\n    },\n    rootExpanded: {},\n    summaryWrapper: {\n        width: '100%',\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'center',\n        color: '#999',\n        fontSize: '2rem'\n    },\n    line: {\n        width: '30%',\n        height: 2,\n        margin: '0 12px',\n        backgroundColor: '#999'\n    },\n    detailWrapper: {\n        width: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n}));\n\nconst summaryStyle = () => {\n    return {\n        root: {\n            minHeight: 48,\n            '&$expanded': {\n                minHeight: 48,\n            },\n        },\n        expanded: {},\n        content: {\n            margin: '12px 0',\n            '&$expanded': {\n                margin: '12px 0',\n            },\n        },\n    };\n};\n\nconst StyledExpansionPanelSummary = withStyles(summaryStyle)(\n    ExpansionPanelSummary\n);\n\n\ninterface ExpansionPanelNoteProps {\n\n}\n\nconst StackedLineChartExpansionPanelNote: React.FC<ExpansionPanelNoteProps> = () => {\n    const classes = useStyles();\n    const [expanded, setExpanded] = useState(false);\n\n    const handleChange = () => {\n        setExpanded((prevState) => !prevState)\n    };\n\n    useEffect(() => {\n        // the component after this has scroll linked animation\n        setTimeout(() => {\n            window.scrollTo(window.scrollX, window.scrollY + 1);\n            window.scrollTo(window.scrollX, window.scrollY - 1)\n        }, 300)\n    }, [expanded]);\n\n    return (\n        <ExpansionPanel\n            expanded={expanded}\n            onChange={handleChange}\n            classes={{\n                root: classes.root,\n                expanded: classes.rootExpanded\n            }}>\n            <StyledExpansionPanelSummary>\n                <div className={classes.summaryWrapper}>\n                    <div className={classes.line}> </div>\n                    <AddCircleOutlineIcon\n                        style={{\n                            fontSize: '2rem',\n                            transition: 'transform 0.3s',\n                            transform: expanded ? 'rotate(135deg)' : 'rotate(0deg)'\n                        }}\n                    />\n                    <div className={classes.line}> </div>\n                </div>\n            </StyledExpansionPanelSummary>\n            <ExpansionPanelDetails className={classes.detailWrapper}>\n                <Title value={['How to use this graph?']}/>\n                {\n                    contentParagraphs.map((str, i) => <Content value={str} key={i}/>)\n                }\n            </ExpansionPanelDetails>\n        </ExpansionPanel>\n    )\n};\n\nexport default StackedLineChartExpansionPanelNote","import React, {useEffect, useRef, useState} from \"react\";\nimport useGetAnalytics, {AnalyticsPageStatus} from \"./utilitis/use-get-analytics\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport {CircularProgress, Typography} from \"@material-ui/core\";\nimport SectionWrapper from \"./utilitis/section-wrapper\";\nimport Box from \"@material-ui/core/Box\";\nimport DocumentsByCategoryBarChart from \"./documents-by-category-bar-chart\";\nimport DocumentsHeatMap from \"./documents-heat-map\";\nimport DocumentsTextSummary from \"./documents-text-summary\";\nimport Fade from \"@material-ui/core/Fade\";\nimport AnimationSlideIn, {AnimationSlideInDirection} from \"./utilitis/animation-slide-in\";\nimport WordCloud from \"./documents-word-cloud\";\nimport AnimationFixed from \"./utilitis/animation-fixed\";\nimport DocumentsCountStackedLineChart from \"./documents-count-stacked-line-chart\";\nimport StackedLineChartExpansionPanelNote from \"./stacked-line-chart-expansion-panel-note\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        overflowX: 'hidden',\n        width: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'flex-start',\n        paddingBottom: '200px',\n        position: 'relative',\n        [theme.breakpoints.down('sm')]: {\n            paddingBottom: '250px',\n        }\n    },\n    widthWrapper: {\n        width: '1000px',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'flex-start',\n        [theme.breakpoints.down('sm')]: {\n            width: '100%'\n        }\n    },\n}));\n\ninterface AnalyticsProps {\n\n}\n\nconst Analytics: React.FC<AnalyticsProps> = () => {\n    const classes = useStyles();\n    const wrapperRef = useRef<HTMLDivElement>(null);\n    const {\n        status,\n        summaryStatisticsData\n    } = useGetAnalytics();\n\n    const bgColorChangeRef = useRef<HTMLDivElement>(null);\n    const [bgBlack, setBgBlack] = useState(false);\n    const changeBgColor = () => {\n        if (!bgColorChangeRef.current) return;\n        const target = bgColorChangeRef.current.getBoundingClientRect().top - 100;\n        if (target <= 0 && bgBlack) {\n            setBgBlack(false);\n            document.body.style.backgroundColor = '';\n        } else if (target > 0 && !bgBlack) {\n            setBgBlack(true);\n            document.body.style.backgroundColor = 'black'\n        }\n    };\n    useEffect(() => {\n        changeBgColor();\n        document.addEventListener('scroll', changeBgColor);\n        return () => {\n            document.removeEventListener('scroll', changeBgColor);\n        }\n    }, [status, bgBlack]);\n\n    useEffect(() => {\n        return () => {\n            document.body.style.backgroundColor = ''\n        };\n    }, []);\n\n    const isLoaded = status === AnalyticsPageStatus.loaded;\n    const width = wrapperRef?.current?.getBoundingClientRect().width || 100;\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.widthWrapper} ref={wrapperRef}>\n                {\n                    status === AnalyticsPageStatus.loading &&\n                    <SectionWrapper>\n                        <CircularProgress color={\"secondary\"}/>\n                    </SectionWrapper>\n                }\n                {\n                    status === AnalyticsPageStatus.loaded &&\n                    summaryStatisticsData &&\n                    <>\n\n                        <DocumentsTextSummary\n                            totalDocuments={summaryStatisticsData.totalDocuments}\n                            earliestDocumentDate={summaryStatisticsData.earliestDocumentDate}\n                            latestDocumentDate={summaryStatisticsData.latestDocumentDate}\n                            ref={bgColorChangeRef}\n                        />\n\n                        <Fade in={!bgBlack} timeout={2000}>\n                            <SectionWrapper>\n                                <DocumentsByCategoryBarChart\n                                    isLoaded={isLoaded}\n                                    data={summaryStatisticsData.documentsCountByCategory.map(obj => ({\n                                        title: obj.category,\n                                        value: obj.count\n                                    }))}\n                                    animate={!bgBlack}\n                                    width={width}/>\n                            </SectionWrapper>\n                        </Fade>\n\n                        <AnimationSlideIn direction={AnimationSlideInDirection.left}>\n                            <SectionWrapper>\n                                <DocumentsHeatMap isLoaded={isLoaded} data={summaryStatisticsData.documentsCountByDay} width={width}/>\n                            </SectionWrapper>\n                        </AnimationSlideIn>\n\n                        <AnimationSlideIn direction={AnimationSlideInDirection.right}>\n                            <SectionWrapper>\n                                <DocumentsCountStackedLineChart\n                                    isLoaded={isLoaded}\n                                    data={{\n                                        quantity: summaryStatisticsData.documentsCountByDayAndCategory.documentCount,\n                                        series: summaryStatisticsData.documentsCountByDayAndCategory.series,\n                                        order: summaryStatisticsData.documentsCountByDayAndCategory.category\n                                    }}\n                                    width={width}\n                                    height={width >= 1000 ? 600 : width / 2}\n                                />\n                            </SectionWrapper>\n                        </AnimationSlideIn>\n\n                        <StackedLineChartExpansionPanelNote />\n\n                        <AnimationFixed>\n                            <SectionWrapper>\n                                <WordCloud isLoaded={isLoaded} data={summaryStatisticsData.wordCloud} width={width}/>\n                            </SectionWrapper>\n                        </AnimationFixed>\n                        {/*<div style={{width: 100, height: 3000, backgroundColor: 'rgba(255,0,0,0.5)'}}> </div>*/}\n                    </>\n                }\n                {\n                    status === AnalyticsPageStatus.error &&\n                    <Typography variant={'body2'} component={'h1'}>\n                        <Box fontWeight={700}>Server error, please try again later</Box>\n                    </Typography>\n                }\n            </div>\n        </div>\n    )\n};\n\nexport default Analytics","import React, {RefObject, useRef} from \"react\";\nimport useSticky from \"../../tools/use-sticky\";\n\ninterface StickyComponentProps {\n    anchorRef: RefObject<HTMLDivElement>,\n    zIndex?: number,\n}\n\nconst StickyComponent: React.FC<StickyComponentProps> = (props) => {\n    const {\n        style,\n        isFixed\n    } = useSticky(props.anchorRef);\n\n    const elementRef = useRef<HTMLDivElement>(null);\n\n    return (\n        <>\n            {\n                isFixed && elementRef.current &&\n                <div style={{\n                    width: `${elementRef.current.offsetWidth}px`,\n                    height: `${elementRef.current.offsetHeight}px`\n                }}>\n                </div>\n            }\n            <div style={{...style, zIndex: props.zIndex ? props.zIndex : 'auto'}} ref={elementRef}>\n                { props.children }\n            </div>\n        </>\n    )\n};\n\nexport default StickyComponent;","import React, {FormEvent, useEffect, useState} from \"react\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Button from '@material-ui/core/Button';\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport {Tooltip} from \"@material-ui/core\";\nimport Zoom from \"@material-ui/core/Zoom\";\n\nconst useStyles = makeStyles(theme => ({\n    dialog: {\n        minWidth: '50vw'\n    }\n}));\n\ninterface HeaderSearchProps {\n    goToSearch: (keyword: string) => void\n}\n\nconst HeaderSearch: React.FC<HeaderSearchProps> = ({goToSearch}) => {\n\n    const classes = useStyles();\n\n    const [open, setOpen] = useState(false);\n    const [input, setInput] = useState('');\n    const [isEmpty, setIsEmpty] = useState(false);\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setInput('');\n        setOpen(false);\n    };\n\n    const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        if (isEmpty) setIsEmpty(false);\n        setInput(e.target.value)\n    };\n\n    const handleSubmit = (e: FormEvent) => {\n        e.preventDefault();\n        if (!input.length) {\n            setIsEmpty(true);\n        } else {\n            goToSearch(input);\n            handleClose();\n        }\n    };\n\n    return (\n        <div>\n            <Tooltip title=\"Search\" TransitionComponent={Zoom}>\n                <IconButton aria-label=\"search\" color={\"inherit\"} onClick={handleClickOpen}>\n                    <SearchIcon/>\n                </IconButton>\n            </Tooltip>\n            <Dialog open={open} onClose={handleClose} fullWidth maxWidth='sm'>\n                <form action='/' onSubmit={handleSubmit}>\n                    <DialogTitle>Search from archived news</DialogTitle>\n                    <DialogContent>\n                        <TextField\n                            error={isEmpty}\n                            autoFocus\n                            margin=\"dense\"\n                            label=\"Keywords\"\n                            type=\"news keyword\"\n                            fullWidth\n                            value={input}\n                            onChange={handleInputChange}\n                            helperText={isEmpty ? 'Keyword cannot be empty.' : ' '}\n                        />\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={handleClose} color=\"primary\" aria-label='cancel'>\n                            Cancel\n                        </Button>\n                        <Button type=\"submit\" color=\"primary\" aria-label='submit search'>\n                            Search\n                        </Button>\n                    </DialogActions>\n                </form>\n            </Dialog>\n        </div>\n    )\n};\n\nexport default HeaderSearch","import React, {useRef} from \"react\";\nimport {AppBar, Grid, Tab, Tabs, Theme, Toolbar, Tooltip, Typography,} from \"@material-ui/core\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport {Categories, Category} from \"../../redux/actions/category\";\nimport StickyComponent from \"../utility-components/sticky-component\";\nimport IconButton from '@material-ui/core/IconButton';\nimport AssessmentIcon from '@material-ui/icons/Assessment';\nimport CollectionsBookmarkIcon from '@material-ui/icons/CollectionsBookmark';\nimport Zoom from \"@material-ui/core/Zoom\";\nimport HeaderSearch from \"./header-search\";\nimport useTheme from \"@material-ui/core/styles/useTheme\";\n\n\nconst useStyles = makeStyles((theme: Theme) => ({\n    tab: {\n        flexShrink: 0,\n        flexGrow: 1,\n        color: theme.palette.primary.contrastText\n    },\n    heading: {\n        textTransform: 'uppercase',\n        height: '100%',\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'center',\n        whiteSpace: 'nowrap'\n    },\n    appBarNoBoxShadow: {\n        boxShadow: 'none'\n    },\n    appBarBottomBoxShadow: {\n        boxShadow: '0px 4px 4px -1px rgba(0,0,0,0.2), 0px 5px 5px 0px rgba(0,0,0,0.14), 0px 10px 10px 0px rgba(0,0,0,0.12)'\n    },\n    trendIcon: {\n        color: '#FFF'\n    }\n}));\n\ninterface HeaderProps {\n    headers: Categories,\n    category: Category,\n    goToSearch: (keyword: string) => void,\n    goToAnalytics: () => void,\n    goToTopic: () => void,\n    setCategory: (category: Category) => void\n}\n\nconst Header: React.FC<HeaderProps> = ({headers, category, goToSearch, goToAnalytics, setCategory, goToTopic}) => {\n    const classes = useStyles();\n    const appBarRef = useRef<HTMLDivElement>(null);\n    const theme = useTheme();\n\n    return (\n        <>\n        <AppBar color=\"primary\" position={'static'} ref={appBarRef} className={classes.appBarNoBoxShadow}>\n            <Toolbar>\n                <Grid container>\n                    <Grid item xs={1} md={3}>\n\n                    </Grid>\n                    <Grid item xs={5} md={6}>\n                        <Typography align={\"center\"} className={classes.heading} variant={\"h1\"} component={'h1'}>\n                            News Canada\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={6} md={3}>\n                        <Grid container alignItems={'center'} justify={\"flex-end\"}>\n                            <Grid item>\n                                <HeaderSearch goToSearch={goToSearch}/>\n                            </Grid>\n                            <Grid item>\n                                <Tooltip title=\"Topic: COVID-19\" TransitionComponent={Zoom}>\n                                    <IconButton aria-label=\"Topic: COVID-19\" color={\"inherit\"} onClick={goToTopic}>\n                                        <CollectionsBookmarkIcon/>\n                                    </IconButton>\n                                </Tooltip>\n                            </Grid>\n                            <Grid item>\n                                <Tooltip title=\"Analytics\" TransitionComponent={Zoom}>\n                                    <IconButton aria-label=\"news trend\" color={\"inherit\"} onClick={goToAnalytics}>\n                                        <AssessmentIcon/>\n                                    </IconButton>\n                                </Tooltip>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Toolbar>\n        </AppBar>\n        <StickyComponent\n            anchorRef={appBarRef}\n            zIndex={theme.zIndex.appBar}>\n            <AppBar color=\"primary\" position={'static'} className={classes.appBarBottomBoxShadow}>\n                <Tabs\n                    value={headers.indexOf(category) === -1 ? false : headers.indexOf(category)}\n                    indicatorColor=\"secondary\"\n                    textColor=\"secondary\"\n                    variant=\"scrollable\"\n                    scrollButtons=\"auto\"\n                >\n                    {\n                        headers.map((_, i) => <Tab label={_} key={i} className={classes.tab} onClick={() => setCategory(Category[_])}/>)\n                    }\n                </Tabs>\n            </AppBar>\n        </StickyComponent>\n        </>\n    )\n}\n\nexport default Header;","import {connect} from \"react-redux\";\nimport {Dispatch} from \"redux\";\nimport {\n    categories,\n    Category,\n    goToAnalyticsPanel,\n    goToSearchPanel, goToTopicPanel,\n    setCategoryIfNeeded\n} from \"../redux/actions/category\";\nimport {setSearchKeyword} from \"../redux/actions/search-keyword\";\nimport Header from \"../components/header/header\";\nimport {State} from \"../redux/state\";\n\nfunction mapStateToProps(state: State) {\n    return {\n        headers: categories,\n        category: state.category,\n    }\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch) {\n    return {\n        goToSearch: (keyword: string) => {\n            dispatch(setSearchKeyword(keyword));\n            dispatch(goToSearchPanel())\n        },\n        goToAnalytics: () => {\n            dispatch(goToAnalyticsPanel())\n        },\n        goToTopic: () => {\n            dispatch(goToTopicPanel())\n        },\n        setCategory: (category: Category) => {\n            // @ts-ignore\n            dispatch(setCategoryIfNeeded(category));\n        }\n    }\n}\n\nconst HeaderContainer = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Header);\n\nexport default HeaderContainer;","enum SortTypes {\n    relevance='relevance',\n    date='date'\n}\n\nexport default SortTypes","import * as d3 from \"d3\";\n\nexport interface CovidCaseData {\n    countries: {\n        [key: string]: {\n            cases: number[],\n            deaths: number[],\n            recovered: number[],\n        }\n    }\n    series: string[],\n    totals: {\n        cases: number[],\n        deaths: number[],\n        recovered: number[],\n    },\n    lastUpdated: string\n}\n\ninterface FeatureProperties {\n    name: string,\n    case: {\n        cases: number[],\n        deaths: number[],\n        recovered: number[],\n    } | null\n}\n\nclass WorldMapD3 {\n    color = {\n        red: '#ef5350',\n        transparent: 'rgba(0,0,0,0)',\n        getMapColor: (percentage: number) => `rgba(55, 76, 128, ${percentage.toFixed(1)})`,\n        grey: \"#eee\",\n        mapStrokeNormal: '#ccc',\n        mapStrokeHoverHighlight: '#222',\n        case: '#ffb140',\n        death: '#f16a67',\n        recovered: '#78c37b',\n        timeBarHighlight: '#7a5195',\n        timeBarNormal: '#af96bf',\n        timeBarLight: '#e4dbe8'\n    };\n    monthStrings = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n    getStrokeWidth = () => this.dimension.svgWidth >= 1000 ? 1 : 0.5;\n    animations = {\n        zoomIn: {\n          delay: 0,\n          duration: 3000,\n        },\n        changeMapColor: {\n          delay: 3000,\n          duration: 1000,\n        },\n        timeLapse: {\n          delay: 4000,\n        },\n        timeLapseGap: 500\n    };\n    id: string;\n    dimension: {\n        svgWidth: number,\n        svgHeight: number,\n        m: {t: number, r: number, b: number, l: number},\n        mapX: number,\n        mapY: number\n        mapWidth: number,\n        mapHeight: number\n    };\n    themeColor: string;\n    data: {\n        aggregate: d3.ExtendedFeatureCollection<d3.ExtendedFeature<d3.GeoGeometryObjects, FeatureProperties>> | null,\n        case: CovidCaseData,\n        caseMax: number\n    };\n    references: {\n        svg: d3.Selection<SVGSVGElement, unknown, HTMLElement, any> | null,\n        map: {\n            paths: d3.Selection<SVGPathElement, d3.ExtendedFeature<d3.GeoGeometryObjects, FeatureProperties>, SVGGElement, any> | null,\n            pathHighlightGroup: d3.Selection<SVGGElement, unknown, HTMLElement, any> | null,\n            pathHighlight: d3.Selection<SVGPathElement | null, unknown, HTMLElement, any> | null,\n        }\n        tooltip: {\n            bg: d3.Selection<SVGRectElement, unknown, HTMLElement, any>,\n            tooltipGroup: d3.Selection<SVGGElement, unknown, HTMLElement, any>\n            tooltip: d3.Selection<SVGTextElement, unknown, HTMLElement, any>,\n            tspanCountry: d3.Selection<SVGTextElement, unknown, HTMLElement, any>,\n            tspanDate: d3.Selection<SVGTextElement, unknown, HTMLElement, any>,\n            tspanCaseAccumulative: d3.Selection<SVGTextElement, unknown, HTMLElement, any>,\n            tspanDeathAccumulative: d3.Selection<SVGTextElement, unknown, HTMLElement, any>,\n            tspanRecoveredAccumulative: d3.Selection<SVGTextElement, unknown, HTMLElement, any>,\n            tspanCaseNew: d3.Selection<SVGTextElement, unknown, HTMLElement, any>,\n            tspanDeathNew: d3.Selection<SVGTextElement, unknown, HTMLElement, any>,\n            tspanRecoveredNew: d3.Selection<SVGTextElement, unknown, HTMLElement, any>,\n            caseLineChart: d3.Selection<SVGPathElement, unknown | [number, number][], HTMLElement, any>,\n            deathLineChart: d3.Selection<SVGPathElement, unknown | [number, number][], HTMLElement, any>,\n            recoveredLineChart: d3.Selection<SVGPathElement, unknown | [number, number][], HTMLElement, any>,\n            stackBarChartCase: d3.Selection<SVGRectElement, unknown, HTMLElement, any>,\n            stackBarChartDeath: d3.Selection<SVGRectElement, unknown, HTMLElement, any>,\n            stackBarChartRecovered: d3.Selection<SVGRectElement, unknown, HTMLElement, any>,\n        } | null,\n        timeControl: {\n            group: d3.Selection<SVGGElement, unknown, HTMLElement, any>,\n            dateText: d3.Selection<SVGTextElement, unknown, HTMLElement, any>,\n            timeBarBg: d3.Selection<SVGRectElement, string, SVGGElement, any>,\n            timeBar: d3.Selection<SVGRectElement, string, SVGGElement, any>,\n            playButton: d3.Selection<SVGTextElement, unknown, HTMLElement, any>,\n            startOverButton: d3.Selection<SVGTextElement, unknown, HTMLElement, any>,\n        } | null\n    };\n    scales: {\n        timeBarXScale: d3.ScaleBand<string>\n    };\n    state: {\n        time: number,\n        timeMax: number,\n        tooltipData: {\n            inputX: number, // top left x of map path rect, used as primary anchor\n            inputXSecondary: number, // top right x of map path rect, used in case primary anchor causing tooltip overlaps map rect\n            inputY: number, // top right y of map path rect\n            inputYSecondary: number, // bottom right y of map path rect\n            data: {\n                country: string,\n                case: {\n                    cases: number[],\n                    deaths: number[],\n                    recovered: number[],\n                } | undefined | null\n            }\n        }\n    };\n    timeLapse: {\n        timeoutID: number | null\n    };\n\n    constructor(id: string, width: number, height: number, themeColor: string, caseData: CovidCaseData) {\n        this.id = id;\n        this.dimension = this.getDimension(width, height);\n        this.themeColor = themeColor;\n        this.data = {\n            aggregate: null,\n            case: caseData,\n            caseMax: 0\n        };\n        this.references = {\n            svg: null,\n            map: {\n                paths: null,\n                pathHighlightGroup: null,\n                pathHighlight: null\n            },\n            tooltip: null,\n            timeControl: null\n        };\n        this.scales = {\n            timeBarXScale: d3.scaleBand()\n        };\n        this.state = {\n            time: 0,\n            timeMax: 0,\n            tooltipData: {\n                inputX: -1000,\n                inputXSecondary: -1000,\n                inputY: -1000,\n                inputYSecondary: -1000,\n                data: {\n                    country: '',\n                    case: undefined\n                }\n            }\n        };\n        this.timeLapse = {\n            timeoutID: null\n        }\n    }\n\n    getDimension(width: number, height: number) {\n        const svgWidth = width;\n        const svgHeight = height;\n        const m = {t: 0, r: 10, b: 75, l: 10};\n        return {\n            svgWidth,\n            svgHeight,\n            m,\n            mapX: m.l,\n            mapY: m.t,\n            mapWidth: svgWidth - m.l - m.r,\n            mapHeight: svgHeight - m.t - m.b\n        }\n    }\n\n    async getData() {\n        try {\n            const module = await import('./world-map-data');\n            let caseMax = 0;\n            const mapData: any = module.default;\n            mapData.features.forEach((obj: any) => {\n                if (!obj.properties) return;\n                obj.properties.case = this.data.case.countries[obj.properties.name] ?\n                    Object.assign({}, this.data.case.countries[obj.properties.name]) :\n                    null;\n\n                this.data.case.countries[obj.properties.name]?.cases.forEach(num => {\n                    if (num > caseMax) caseMax = num\n                })\n            });\n            this.data.aggregate = mapData;\n            this.data.caseMax = caseMax;\n            this.state.timeMax = this.data.case.series.length - 1;\n\n            // const casesCountries = Object.keys(this.data.case.countries).sort((a, b) => a.localeCompare(b));\n            // const mapCountries = this.data.map.features.map(obj=>obj.properties!.name).sort((a, b) => a.localeCompare(b));\n            // console.log(casesCountries, mapCountries);\n            //\n            // const casesCountriesFiltered: string[] = [];\n            // const mapCountriesFiltered: string[] = [];\n            //\n            // casesCountries.forEach(str => {\n            //     if (mapCountries.indexOf(str) === -1) {\n            //         casesCountriesFiltered.push(str)\n            //     }\n            // })\n            //\n            // mapCountries.forEach(str => {\n            //     if (casesCountries.indexOf(str) === -1) {\n            //         mapCountriesFiltered.push(str)\n            //     }\n            // })\n            // console.log(casesCountriesFiltered, mapCountriesFiltered)\n        } catch (e) {\n            throw (e)\n        }\n    }\n\n    initSvg() {\n        this.references.svg = d3.select(`#${this.id}`)\n            .append('svg')\n            .attr('width', this.dimension.svgWidth)\n            .attr('height', this.dimension.svgHeight)\n        // .style('background-color', 'rgba(255,0,0,0.5');\n    }\n\n    initTooltip() {\n        if (!this.references.svg) return;\n        const tooltipGroup = this.references.svg.append('g');\n        const bg = tooltipGroup.append('rect');\n        const tooltip = tooltipGroup.append('text');\n        const tspanCountry = tooltip.append('tspan');\n        const tspanDate = tooltip.append('tspan');\n        const tspanCaseAccumulative = tooltip.append('tspan');\n        const tspanCaseNew = tooltip.append('tspan');\n        const tspanDeathAccumulative = tooltip.append('tspan');\n        const tspanDeathNew = tooltip.append('tspan');\n        const tspanRecoveredAccumulative = tooltip.append('tspan');\n        const tspanRecoveredNew = tooltip.append('tspan');\n        const caseLineChart = tooltipGroup.append('path');\n        const deathLineChart = tooltipGroup.append('path');\n        const recoveredLineChart = tooltipGroup.append('path');\n        const stackBarChartGroup = tooltipGroup.append('g');\n        const stackBarChartCase = stackBarChartGroup.append('rect');\n        const stackBarChartDeath = stackBarChartGroup.append('rect');\n        const stackBarChartRecovered = stackBarChartGroup.append('rect');\n        tooltip\n            .style('font-weight', 700)\n            .style('font-size', '0.875rem')\n            .style('fill', '#fff')\n            .attr(\"text-anchor\", \"middle\")\n            // .attr('alignment-baseline', 'bottom')\n        // tspanCountry\n        // tspanDate\n        // tspanCaseAccumulative\n        // tspanDeathAccumulative\n        // tspanRecoveredAccumulative\n        tspanCaseNew\n            .style('fill', this.color.case);\n        tspanDeathNew\n            .style('fill', this.color.death)\n        tspanRecoveredNew\n            .style('fill', this.color.recovered)\n\n        bg\n            .style('fill', 'rgba(0,0,0,0.8)')\n            .attr('rx', '5px');\n\n        [caseLineChart, deathLineChart, recoveredLineChart].forEach(_ => {\n            _\n                .style('stroke-width', 2)\n                .style('fill', 'none')\n        });\n        caseLineChart.style('stroke', this.color.case);\n        deathLineChart.style('stroke', this.color.death);\n        recoveredLineChart.style('stroke', this.color.recovered);\n        //\n        stackBarChartCase.style('fill', this.color.case);\n        stackBarChartDeath.style('fill', this.color.death);\n        stackBarChartRecovered.style('fill', this.color.recovered);\n\n\n        this.references.tooltip = {\n            bg,\n            tooltipGroup,\n            tooltip,\n            tspanCountry,\n            tspanDate,\n            tspanCaseAccumulative,\n            tspanDeathAccumulative,\n            tspanRecoveredAccumulative,\n            tspanCaseNew,\n            tspanDeathNew,\n            tspanRecoveredNew,\n            caseLineChart,\n            deathLineChart,\n            recoveredLineChart,\n            stackBarChartCase,\n            stackBarChartDeath,\n            stackBarChartRecovered\n        };\n        this.updateTooltip()\n\n    }\n\n    updateTooltip() {\n        const {\n            inputX, // top left x of map path rect, used as primary anchor\n            inputXSecondary, // top right x of map path rect, used in case primary anchor causing tooltip overlaps map rect\n            inputY, // top right y of map path rect\n            inputYSecondary, // bottom right y of map path rect\n            data\n        } = this.state.tooltipData;\n        if (!this.references.tooltip) return;\n\n        const currentT = this.state.time;\n        const getNew = (num: number) => {\n            return num >= 0 ? ` (+${num})` : ` (${num})`\n        };\n\n        const getTooltipsDimensions = () => {\n            if (!this.references.tooltip) return;\n\n            const bBox = this.references.tooltip.tooltip.node()?.getBBox();\n            if (!bBox) return;\n            const p = 0.3;\n            const shift = 5;\n            const textWidth = bBox.width;\n            const textHeight = bBox.height;\n            const lineChartHeight = 20;\n            const stackBarChartMarginTop = 10;\n            const stackBarChartHeight = 15;\n            const chartWidth = 150;\n            const tooltipWidth = (1+p)*Math.max(chartWidth, textWidth);\n            const tooltipHeight = (1+p)*(textHeight + lineChartHeight * 3 + stackBarChartHeight + stackBarChartMarginTop);\n\n            const xBg = inputX - tooltipWidth - shift;\n            const xBgFloored = Math.max(this.dimension.m.l, xBg);\n            let textX, tooltipX;\n            let _inputY = inputY;\n            if (xBgFloored + tooltipWidth > inputX) {\n                // overlapping with map rect\n                tooltipX = inputXSecondary + shift;\n                if (tooltipX + tooltipWidth > this.dimension.svgWidth) {\n                    // tooltip overflows viewport right edge now\n                    // fallback to use primary x and use secondary y\n                    tooltipX = xBgFloored;\n                    textX = tooltipX + 0.5*tooltipWidth;\n                    _inputY = inputYSecondary\n                } else {\n                    textX = tooltipX + 0.5*tooltipWidth\n                }\n            } else {\n                tooltipX = xBgFloored;\n                textX = tooltipX + 0.5*tooltipWidth\n            }\n\n            let tooltipY = _inputY - p/2*bBox.height;\n            tooltipY = Math.min(tooltipY, this.dimension.svgHeight - tooltipHeight);\n            tooltipY = Math.max(tooltipY, 0);\n            const lineChartStartY = tooltipY+0.5*p*tooltipHeight+textHeight;\n            const stackBarChartY = lineChartStartY + 3 * lineChartHeight + stackBarChartMarginTop;\n\n            return {\n                tooltipX,\n                tooltipY,\n                tooltipWidth,\n                tooltipHeight,\n                textX,\n                textY: tooltipY + p/2*bBox.height,\n                chartX: textX - chartWidth/2,\n                chartWidth,\n                lineChartStartY,\n                lineChartHeight,\n                stackBarChartY,\n                stackBarChartHeight\n            }\n        };\n\n        const updateTexts = () => {\n            if (!this.references.tooltip) return;\n\n            const date = new Date(this.data.case.series[currentT]);\n            const dateText = `${date.getDate()} ${this.monthStrings[date.getMonth()]}, ${date.getFullYear()}`;\n            const noData = 'Unknown';\n\n            this.references.tooltip.tspanCountry.text(data.country);\n            this.references.tooltip.tspanDate.text(dateText);\n            if (!data.case) {\n                // no data\n                this.references.tooltip.tspanCaseAccumulative.text(`Confirmed: ${noData}`);\n                this.references.tooltip.tspanCaseNew.text('');\n                this.references.tooltip.tspanDeathAccumulative.text(`Death: ${noData}`);\n                this.references.tooltip.tspanDeathNew.text('');\n                this.references.tooltip.tspanRecoveredAccumulative.text(`Recovered: ${noData}`);\n                this.references.tooltip.tspanRecoveredNew.text('');\n            } else {\n                this.references.tooltip.tspanCaseAccumulative.text(`Confirmed: ${data.case.cases[currentT]}`);\n                this.references.tooltip.tspanCaseNew.text(currentT === 0 ? getNew(0) : getNew(data.case.cases[currentT] - data.case.cases[currentT - 1]));\n                this.references.tooltip.tspanDeathAccumulative.text(`Death: ${data.case.deaths[currentT]}`);\n                this.references.tooltip.tspanDeathNew.text(currentT === 0 ? getNew(0) : getNew(data.case.deaths[currentT] - data.case.deaths[currentT - 1]));\n                this.references.tooltip.tspanRecoveredAccumulative.text(`Recovered: ${data.case.recovered[currentT]}`);\n                this.references.tooltip.tspanRecoveredNew.text(currentT === 0 ? getNew(0) : getNew(data.case.recovered[currentT] - data.case.recovered[currentT - 1]));\n            }\n        };\n\n        const updateDimensionAndPosition = (\n            textX: number,\n            textY: number,\n            tooltipX: number,\n            toolTipY: number,\n            tooltipWidth: number,\n            tooltipHeight: number\n        ) => {\n            if (!this.references.tooltip) return;\n\n            this.references.tooltip.tooltip\n                .attr('x', textX)\n                .attr('y', textY);\n            this.references.tooltip.tspanCountry\n                .attr('x', textX)\n                .attr('dy', '0.875em');\n            this.references.tooltip.tspanDate\n                .attr('x', textX)\n                .attr('dy', '1em');\n            this.references.tooltip.tspanCaseAccumulative\n                .attr('x', textX)\n                .attr('dy', '1em');\n\n            this.references.tooltip.tspanDeathAccumulative\n                .attr('x', textX)\n                .attr('dy', '1em');\n\n            this.references.tooltip.tspanRecoveredAccumulative\n                .attr('x', textX)\n                .attr('dy', '1em');\n\n            this.references.tooltip.bg\n                .attr('x', tooltipX)\n                .attr('y', toolTipY)\n                .attr('width', tooltipWidth)\n                .attr('height', tooltipHeight);\n        };\n\n        const updateLineCharts = (\n            chartX: number,\n            chartWidth: number,\n            lineChartStartY: number,\n            lineChartHeight: number\n        ) => {\n            if (!this.references.tooltip) return;\n\n            const updateLineChartsHelper = (\n                dataArray: number[],\n                reference: d3.Selection<SVGPathElement, unknown | [number, number][], HTMLElement, any>,\n                yMax: number,\n                x: number,\n                y: number\n            ) => {\n                const data: [number, number][] = dataArray.map((num, i) => [i, num]);\n                const scaleX = d3.scaleLinear()\n                    .domain([0, this.data.case.series.length-1])\n                    .range([0, chartWidth]);\n                const scaleY = d3.scaleLinear()\n                    .domain([0, yMax])\n                    .range([20, 0]);\n\n                reference\n                    .datum(data)\n                    .attr('d', d3.line()\n                        .x((d) => scaleX(d[0]))\n                        .y((d) => scaleY(d[1]))\n                        .defined((d, i) => i <= currentT)\n                    )\n                    .style('transform', `translate(${x}px, ${y}px)`)\n            };\n\n            if (this.state.tooltipData.data.case) {\n                // has data\n                const lineChartYMax = Math.max.apply(Math, this.state.tooltipData.data.case.cases);\n                updateLineChartsHelper(this.state.tooltipData.data.case.cases, this.references.tooltip.caseLineChart, lineChartYMax, chartX, lineChartStartY);\n                updateLineChartsHelper(this.state.tooltipData.data.case.deaths, this.references.tooltip.deathLineChart, lineChartYMax, chartX, lineChartStartY + lineChartHeight);\n                updateLineChartsHelper(this.state.tooltipData.data.case.recovered, this.references.tooltip.recoveredLineChart, lineChartYMax, chartX, lineChartStartY + lineChartHeight*2);\n            } else {\n                // either no data or mouse is leaving, need to move line chart out\n                const nullData: number[] = [];\n                updateLineChartsHelper(nullData, this.references.tooltip.caseLineChart, 0, chartX, lineChartStartY);\n                updateLineChartsHelper(nullData, this.references.tooltip.deathLineChart, 0, chartX, lineChartStartY + lineChartHeight);\n                updateLineChartsHelper(nullData, this.references.tooltip.recoveredLineChart, 0, chartX, lineChartStartY + lineChartHeight*2);\n            }\n        };\n\n        const updateStackBarChart = (\n            chartX: number,\n            chartWidth: number,\n            stackBarChartY: number,\n            stackBarChartHeight: number\n        ) => {\n            if (!this.references.tooltip) return;\n\n            if (this.state.tooltipData.data.case) {\n                // has data\n                const currentCase = this.state.tooltipData.data.case.cases[currentT];\n                const currentDeath = this.state.tooltipData.data.case.deaths[currentT];\n                const currentRecovered = this.state.tooltipData.data.case.recovered[currentT];\n                const deathWidth = currentCase === 0 ? 0 : (currentDeath / currentCase) * chartWidth;\n                const recoveredWidth = currentCase === 0 ? 0 : (currentRecovered / currentCase) * chartWidth;\n                this.references.tooltip.stackBarChartCase\n                    .attr('x', chartX)\n                    .attr('width', () => currentCase === 0 ? 0 : chartWidth)\n                    .attr('height', stackBarChartHeight)\n                    .attr('y', stackBarChartY);\n                this.references.tooltip.stackBarChartDeath\n                    .attr('x', chartX + chartWidth - deathWidth)\n                    .attr('width', deathWidth)\n                    .attr('height', stackBarChartHeight)\n                    .attr('y', stackBarChartY);\n                this.references.tooltip.stackBarChartRecovered\n                    .attr('x', chartX)\n                    .attr('width', recoveredWidth)\n                    .attr('height', stackBarChartHeight)\n                    .attr('y', stackBarChartY)\n            } else {\n                // either no data or mouse is leaving, need to move line chart out\n                [this.references.tooltip.stackBarChartCase, this.references.tooltip.stackBarChartDeath, this.references.tooltip.stackBarChartRecovered].forEach(_ => {\n                        _\n                            .attr('x', chartX)\n                            .attr('width', 0)\n                            .attr('height', 0)\n                            .attr('y', stackBarChartY);\n                });\n            }\n        };\n\n        // update texts first so that the dimensions can change base on the max text width\n        updateTexts();\n        const dimensions = getTooltipsDimensions();\n        if (dimensions) {\n            updateDimensionAndPosition(dimensions.textX, dimensions.textY, dimensions.tooltipX, dimensions.tooltipY, dimensions.tooltipWidth, dimensions.tooltipHeight);\n            updateLineCharts(dimensions.chartX, dimensions.chartWidth, dimensions.lineChartStartY, dimensions.lineChartHeight);\n            updateStackBarChart(dimensions.chartX, dimensions.chartWidth, dimensions.stackBarChartY, dimensions.stackBarChartHeight);\n        }\n    }\n\n    initMap() {\n        if (!this.data.aggregate || !this.references.svg) return;\n\n        const projection = d3.geoNaturalEarth1()\n            .fitExtent([[this.dimension.mapX, this.dimension.mapY], [this.dimension.mapWidth, this.dimension.mapHeight]], this.data.aggregate);\n\n        this.references.map.paths = this.references.svg.append(\"g\")\n            .selectAll(\"path\")\n            .data(this.data.aggregate.features)\n            .enter().append(\"path\")\n            .attr(\"fill\", this.color.grey)\n            .attr(\"d\", d3.geoPath()\n                .projection(projection)\n            )\n            .style(\"stroke\", this.color.mapStrokeNormal)\n            .style(\"stroke-width\", this.getStrokeWidth())\n            .style('opacity', 0)\n            .style('transform', 'scale(5)')\n            .style('transform-origin', '50% 50%');\n\n        this.references.map.pathHighlightGroup = this.references.svg.append(\"g\");\n    }\n\n    mapZoomIn() {\n        if (!this.references.map.paths) return;\n        this.references.map.paths.transition()\n            .delay((d, i) => (i % 10) * 200)\n            .duration(1000)\n            .style('opacity', 1)\n            .style('transform', 'scale(1)');\n\n        // change map color from grey to white\n        this.references.map.paths.transition()\n            .delay(this.animations.changeMapColor.delay)\n            .duration(this.animations.changeMapColor.duration)\n            .style('fill', this.color.getMapColor(0))\n    }\n\n    initTimeControl() {\n        if (!this.references.svg) return;\n        // dimensions\n        const margin = 4;\n        const timeControlStartY = this.dimension.svgHeight - this.dimension.m.b;\n        const timeControlStartX = 0.2*this.dimension.svgWidth;\n        const dateTextHeight = 16;\n        const timeBarStartY = timeControlStartY + dateTextHeight + margin;\n        const timeBarHeight = 10;\n        const buttonStartY = timeBarStartY + timeBarHeight + margin;\n        const buttonHeight = 16;\n        //\n        const dateArray = this.data.case.series;\n        this.scales.timeBarXScale = d3.scaleBand()\n            .domain(dateArray)\n            .range([timeControlStartX, 0.8*this.dimension.svgWidth]);\n\n        const group = this.references.svg.append(\"g\");\n        const dateText = group.append(\"text\")\n            .attr('x', timeControlStartX)\n            .attr('y', timeControlStartY + dateTextHeight)\n            .attr('font-size', `${dateTextHeight}px`)\n            .attr('font-weight', 700)\n            .style('fill', this.color.timeBarHighlight);\n        const [timeBarBg, timeBar] = [0, 1].map(_=>{\n            const selection = group.append('g')\n                .selectAll('rect')\n                .data(dateArray)\n                .enter()\n                .append('rect')\n                .style('cursor', 'pointer')\n                .attr('y', timeBarStartY)\n                .attr('x', (d) => `${this.scales.timeBarXScale(d)}`)\n                .attr('width', this.scales.timeBarXScale.bandwidth())\n                .attr('height', timeBarHeight)\n                .style('opacity', 0);\n            selection\n                .transition()\n                .delay(2000)\n                .duration(1000)\n                .style('opacity', 1);\n            return selection\n        });\n        timeBarBg\n            .style('fill', this.color.timeBarLight)\n            .style('stroke', `#fff`)\n            .style('stroke-width', 1);\n        timeBar\n            .style('fill', this.color.transparent);\n\n        const buttonGroup = group.append('g');\n        const [playButton, startOverButton] = [\n            {\n                y: buttonStartY + buttonHeight,\n                text: 'Pause'\n            },\n            {\n                y: buttonStartY + buttonHeight * 2,\n                text: 'Start Over'\n            }\n        ].map(_=>{\n            const selection = buttonGroup\n                .append('text')\n                .style('cursor', 'pointer')\n                .style('opacity', '0')\n                .style('fill', this.color.timeBarNormal)\n                .attr('font-weight', 700)\n                .attr('x', timeControlStartX)\n                .attr('y', _.y)\n                .text(_.text);\n            selection.transition()\n                .delay(this.animations.timeLapse.delay)\n                .duration(1000)\n                .style('opacity', 1);\n            selection\n                .on('mouseenter', () => {\n                selection.style('fill', this.color.timeBarHighlight)\n                })\n                .on('mouseleave', () => {\n                selection.style('fill', this.color.timeBarNormal)\n                });\n            return selection\n        });\n        this.references.timeControl = {\n            group,\n            dateText,\n            timeBarBg,\n            timeBar,\n            playButton,\n            startOverButton\n        };\n    }\n\n    updateTimeControl() {\n        if (!this.references.timeControl) return;\n\n        const currentT = this.state.time;\n        const date = new Date(this.data.case.series[currentT]);\n        this.references.timeControl.dateText.text(`${date.getDate()} ${this.monthStrings[date.getMonth()]}, ${date.getFullYear()}`)\n\n        this.references.timeControl.timeBar\n            .style('fill', (d, i) => i <= this.state.time ? this.color.timeBarNormal : this.color.transparent)\n            // .style('stroke', this.color.transparent)\n        this.references.timeControl.timeBar.filter((d, i) => i === this.state.time)\n            .transition()\n            .duration(this.animations.timeLapseGap)\n            .attrTween('width', (d) => (t: number) => `${t*this.scales.timeBarXScale.bandwidth()}px`)\n            .ease(d3.easeLinear)\n    }\n\n    updateMap() {\n        const caseMaxLog = Math.log(this.data.caseMax);\n        const emptyColor = this.color.getMapColor(0);\n\n        if (!this.references.map.paths) return;\n        this.references.map.paths\n            .style('fill', (d) => {\n                if (!d.properties.case) {\n                    // no data\n                    return emptyColor\n                } else {\n                    const currentCases = d.properties.case.cases[this.state.time];\n                    if (currentCases < 1) {\n                        return emptyColor\n                    } else {\n                        return this.color.getMapColor(Math.log(currentCases) / caseMaxLog)\n                    }\n                }\n            })\n    }\n\n    setTimeState(time: number) {\n        this.state.time = time;\n        this.updateMap();\n        this.updateTimeControl();\n        this.updateTooltip();\n    }\n\n    setToolTipDataState(\n        x: number,\n        xSecondary: number,\n        y : number,\n        ySecondary: number,\n        country: string,\n        newCase: typeof WorldMapD3.prototype.state.tooltipData.data.case\n    ) {\n        let _case = null;\n        if (newCase) {\n            _case = {\n                cases: newCase.cases.slice(),\n                deaths: newCase.deaths.slice(),\n                recovered: newCase.recovered.slice()\n            }\n        }\n        this.state.tooltipData = Object.assign(\n            this.state.tooltipData,\n            {\n                inputX: x,\n                inputXSecondary: xSecondary,\n                inputY: y,\n                inputYSecondary: ySecondary,\n                data: {\n                    country: country,\n                    case: _case\n                }\n            })\n    }\n\n    startTimeLapse(isWaitFirstTick?: boolean) {\n        const tick = () => {\n            if (this.state.time < this.state.timeMax) {\n                this.setTimeState(this.state.time+1);\n                this.timeLapse.timeoutID = window.setTimeout(tick, this.animations.timeLapseGap)\n            } else {\n                this.stopTimeLapse()\n            }\n        };\n\n        this.references.timeControl?.playButton.text('Pause');\n        if (isWaitFirstTick) {\n            this.timeLapse.timeoutID = window.setTimeout(() => tick(), this.animations.timeLapseGap)\n        } else {\n            tick();\n        }\n    }\n\n    stopTimeLapse() {\n        this.references.timeControl?.playButton.text('Start');\n\n        if (this.timeLapse.timeoutID !== null) {\n            window.clearTimeout(this.timeLapse.timeoutID);\n            this.timeLapse.timeoutID = null;\n        }\n    }\n\n    appendTimeBarMouseEvent() {\n        if (!this.references.timeControl) return;\n\n        const thisClass = this;\n        this.references.timeControl.timeBar\n            .on('mouseenter', function() {\n            d3.select(this).style('fill', thisClass.color.timeBarHighlight)\n            })\n            .on('mouseleave', function(d, i) {\n                d3.select(this).style('fill', i <= thisClass.state.time ? thisClass.color.timeBarNormal : thisClass.color.transparent)\n            })\n            .on('click', function(d, i) {\n                thisClass.stopTimeLapse();\n                thisClass.setTimeState(i)\n            })\n    }\n\n    appendTimeControlButtonEvent() {\n        if (!this.references.timeControl) return;\n\n        this.references.timeControl.playButton.on('click', () => {\n            if (this.timeLapse.timeoutID !== null) {\n                this.stopTimeLapse();\n            } else {\n                this.startTimeLapse();\n            }\n        });\n\n        this.references.timeControl.startOverButton.on('click', () => {\n            this.stopTimeLapse();\n            this.setTimeState(0);\n            this.startTimeLapse(true);\n        });\n    }\n\n    appendMapPathMouseEvent() {\n        // when mouse enter a country:\n        // 1. use d3.selection.clone() to clone the country path, the cloned path will be append right after the original path.\n        // 2. remove this path and append it into the pathHighlightGroup using d3.selection.append(() => clonedNode.node())\n        // 3. the cloned the path will be on the top of all the paths therefore the stroke on it will be totally visible.\n        // 4. however this cloned path is on the top of is origin too, therefore will trigger it's origin's mouseleave listener\n        // 5. remove the clone in the clone's mouseleave listener\n        // 6. sometimes the mouseover listener will be triggered before clone's mouseleave listener, therefore always remove the clone at the beginning of mouseover listener\n\n        // TODO: Known bug: on smaller screen, the tooltips may overlaps current mouse position, therefore the mouse is never gonna enter the cloned map path,\n        //  so the mouseleave will never be triggered and tooltips won't be repositioned.\n\n        if (!this.references.map.paths) return;\n        const thisClass = this;\n\n        const removeHighlightAndMoveTooltip = () => {\n            thisClass.setToolTipDataState(-1000, -1000, -1000, -1000, '', null);\n            thisClass.updateTooltip();\n            thisClass.references.map.pathHighlight?.remove();\n        };\n\n        this.references.map.paths.on('mouseenter', function(d) {\n            removeHighlightAndMoveTooltip();\n\n            const bBox = this.getBBox();\n            const x = bBox.x;\n            const y = bBox.y;\n            const xSecondary = bBox.x + bBox.width;\n            const ySecondary = bBox.y + bBox.height;\n\n            // tooltip\n            if (!d.properties.case) {\n                // no data for this country\n                thisClass.setToolTipDataState(x, xSecondary, y, ySecondary, d.properties.name, null);\n            } else {\n                thisClass.setToolTipDataState(x, xSecondary, y, ySecondary, d.properties.name, {...d.properties.case});\n            }\n            thisClass.updateTooltip();\n\n            // country path\n            const clonedNode = d3.select(this).clone().remove();\n            if (thisClass.references.map.pathHighlightGroup) {\n                const movedClonedNode = thisClass.references.map.pathHighlightGroup.append(() => clonedNode.node());\n                if (movedClonedNode) {\n                    thisClass.references.map.pathHighlight = movedClonedNode;\n                    movedClonedNode\n                        .style('stroke', thisClass.color.mapStrokeHoverHighlight)\n                        .style('stroke-width', thisClass.getStrokeWidth()*2)\n                        .style('fill', thisClass.color.transparent);\n                    movedClonedNode.on('mouseleave', function() {\n                        removeHighlightAndMoveTooltip()\n                    })\n                }\n            }\n        })\n    }\n\n    async main() {\n        try {\n            await this.getData();\n            this.initSvg();\n            this.initMap();\n            this.initTimeControl();\n            this.initTooltip();\n            this.mapZoomIn();\n            this.appendMapPathMouseEvent();\n            this.appendTimeBarMouseEvent();\n            setTimeout(\n                () => {\n                    this.startTimeLapse();\n                    this.appendTimeControlButtonEvent();\n                }, this.animations.timeLapse.delay);\n        } catch (e) {\n            console.log(e);\n        }\n    }\n}\n\nexport default WorldMapD3","import React, {useEffect, useRef} from \"react\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport WorldMapD3 from \"../../d3-charts/world-map-d3\";\nimport useTheme from \"@material-ui/core/styles/useTheme\";\n\nconst id = 'topic-covid19-map';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        width: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'flex-start',\n        // paddingBottom: '200px',\n        // position: 'relative',\n        // [theme.breakpoints.down('sm')]: {\n        //     paddingBottom: '250px',\n        // }\n    }\n}));\n\ninterface TopicCovid19MapProps {\n\n}\n\nconst TopicCovid19Map: React.FC<TopicCovid19MapProps> = () => {\n    const classes = useStyles();\n    const theme = useTheme();\n    const containerRef = useRef<HTMLDivElement>(null);\n    const height = window.innerHeight - 240;\n\n    useEffect(() => {\n        import('./data/topic-covid19-data').then((dataFile) => {\n            if (!containerRef.current) return;\n            const map = new WorldMapD3(id, containerRef.current.getBoundingClientRect().width, containerRef.current.getBoundingClientRect().height, theme.palette.secondary.main, dataFile.default);\n            map.main();\n        });\n    }, []);\n\n    return (\n        <div className={classes.root} ref={containerRef} style={{height: `${height}px`}}>\n            <div id={id}> </div>\n        </div>\n    )\n};\n\nexport default TopicCovid19Map","import React, {useEffect, useRef, useState} from \"react\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport TopicCovid19Map from \"./topic-covid19-map\";\nimport Link from '@material-ui/core/Link';\nimport Typography from '@material-ui/core/Typography';\nimport {Box} from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        width: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'flex-start',\n        padding: theme.spacing(2, 0, 10, 0),\n        [theme.breakpoints.down('sm')]: {\n            padding: theme.spacing(2, 0, 20, 0)\n        }\n\n    },\n    widthWrapper: {\n        width: '1000px',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'flex-start',\n        [theme.breakpoints.down('sm')]: {\n            width: '100%'\n        }\n    },\n    heading: {\n        fontFamily: 'Open Sans,sans-serif',\n        fontSize: '1.25rem',\n        textTransform: 'capitalize',\n        color: theme.palette.primary.main,\n        margin: theme.spacing(0,0,2,0)\n    }\n}));\n\ninterface TopicProps {\n\n}\n\nconst Topic: React.FC<TopicProps> = () => {\n    const classes = useStyles();\n\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.widthWrapper}>\n                <h1 className={classes.heading}>The spread of COVID-19</h1>\n            </div>\n            <TopicCovid19Map/>\n            <div className={classes.widthWrapper}>\n                <Box mx={5}>\n                    <p>\n                        <span>Data retrieved from </span>\n                        <span>\n                            <Link href='https://graphics.reuters.com/CHINA-HEALTH-MAP/0100B59S39E/index.html' target='_blank' rel=\"noopener noreferrer\" style={{color: '#f35c19'}}>\n                                Reuters.com\n                            </Link>\n                        </span>\n                        <span>, not updated in realtime.</span>\n                    </p>\n                </Box>\n            </div>\n        </div>\n    )\n};\n\nexport default Topic","enum Status {\n    LOADING='LOADING',\n    LOADED_NORMAL='LOADED_NORMAL',\n    LOADED_EMPTY='LOADED_EMPTY',\n    LOADED_NO_MORE='LOADED_NO_MORE',\n    ERROR='ERROR',\n}\n\nexport default Status","import SortTypes from \"../filters/sort-types\";\nimport {IResponse} from \"./response-types\";\n\nconst baseUrl = 'https://www.xiaoxihome.com/api/search-news';\n\nconst requestSearchNews = (\n    keyword: string,\n    skip: number,\n    frequency: boolean,\n    sort?: SortTypes,\n    date?: number\n) => {\n    return new Promise<IResponse>((resolve, reject) => {\n        const dateComponent = date ? `&date=${date}` : '';\n        sort = sort || SortTypes.relevance;\n        const url = `${baseUrl}?keyword=${keyword}&frequency=${frequency}&skip=${skip}&sort=${sort}${dateComponent}`;\n\n        fetch(url)\n            .then(res => res.json())\n            .then(json => {\n                if (json.status === 'ok') {\n                    resolve(json);\n                } else {\n                    console.log(json);\n                    reject(json);\n                }\n            })\n            .catch(e => {\n                console.log(e);\n                reject(e)\n            })\n    });\n};\n\nexport default requestSearchNews","import {useEffect, useState} from \"react\";\nimport requestSearchNews from \"./request-search-news\";\nimport Status from \"../utilities/status\";\nimport SortTypes from \"../filters/sort-types\";\nimport {ISearchedArticle, IResponse, IFrequencyData} from \"./response-types\";\n\nconst useSearchNews = (keyword: string) => {\n\n    const [status, setStatus] = useState(Status.LOADING);\n    const [data, setData] = useState<ISearchedArticle[]>([]);\n    const [sortType, setSortType] = useState(SortTypes.relevance);\n    const [totalCount, setTotalCount] = useState(0);\n    const [frequencyData, setFrequencyData] = useState<IFrequencyData | null>(null);\n    const [pendingDateFilter, _setPendingDateFilter] = useState<number>(0);\n    const [dateFilter, _setDateFilter] = useState<number>(0);\n\n    const newSearch = async () => {\n        try {\n            setData([]);\n            setFrequencyData(null);\n            setTotalCount(0);\n            setSortType(SortTypes.relevance);\n            _setPendingDateFilter(0);\n            _setDateFilter(0);\n\n\n            setStatus(Status.LOADING);\n            const json: IResponse = await requestSearchNews(keyword, 0, true);\n            setData(json.data);\n            setFrequencyData({\n                bin: json.series.slice(),\n                frequency: json.frequency.slice()\n            });\n            setTotalCount(json.totalCount);\n            setLoadedStatus(json.data.length, json.totalCount);\n        } catch (e) {\n            setStatus(Status.ERROR)\n        }\n    };\n\n    const loadMore = async () => {\n        try {\n            if (status === Status.LOADING) return;\n\n            setStatus(Status.LOADING);\n            const json: IResponse = await requestSearchNews(keyword, data.length, false, sortType, dateFilter);\n\n            let updatedDataLength = 0;\n            setData((prevData) => {\n                updatedDataLength = prevData.length + json.data.length;\n                return [...prevData, ...json.data]\n            });\n            setLoadedStatus(updatedDataLength, json.totalCount)\n        } catch (e) {\n            setStatus(Status.ERROR)\n        }\n    };\n\n    const toggleSort = async (type: SortTypes) => {\n        try {\n            if (status === Status.LOADING) return;\n            if (type === sortType) return;\n            // reset\n            setData([]);\n            setSortType(type);\n\n            //\n            setStatus(Status.LOADING);\n            const json: IResponse = await requestSearchNews(keyword, 0, false, type, dateFilter);\n            setData(json.data);\n            setLoadedStatus(json.data.length, json.totalCount)\n        } catch (e) {\n            setStatus(Status.ERROR)\n        }\n    };\n\n    const setPendingDateFilter = (date: number) => {\n        _setPendingDateFilter(date);\n    };\n\n    const setDateFilter = async (date: number) => {\n        try {\n            if (status === Status.LOADING) return;\n            if (date === dateFilter) return;\n            // reset\n            setData([]);\n            setTotalCount(0);\n            _setPendingDateFilter(0);\n            _setDateFilter(date);\n\n            //\n            setStatus(Status.LOADING);\n            const json: IResponse = await requestSearchNews(keyword, 0, false, sortType, date);\n            setData(json.data);\n            setTotalCount(json.totalCount);\n            setLoadedStatus(json.data.length, json.totalCount)\n        } catch (e) {\n            setStatus(Status.ERROR)\n        }\n    };\n\n    const setLoadedStatus = (updatedDataLength: number, totalCount: number) => {\n        if (updatedDataLength === totalCount && totalCount !== 0) {\n            setStatus(Status.LOADED_NO_MORE)\n        } else if (totalCount === 0) {\n            setStatus(Status.LOADED_EMPTY)\n        } else {\n            setStatus((Status.LOADED_NORMAL))\n        }\n    };\n\n    useEffect(() => {\n        newSearch();\n    }, [keyword]);\n\n    return {\n        status,\n        data,\n        frequencyData,\n        sortType,\n        totalCount,\n        pendingDateFilter,\n        dateFilter,\n        toggleSort,\n        loadMore,\n        setPendingDateFilter,\n        setDateFilter,\n    };\n};\n\nexport default useSearchNews","export default function getDateString(num: number) {\n    const date = new Date(num);\n    return `${date.getUTCFullYear()}/${date.getUTCMonth() + 1}/${date.getUTCDate()}`\n}","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {Box} from \"@material-ui/core\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport getDateString from \"../utilities/get-date-string\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        margin: theme.spacing(1, 0)\n    }\n}));\n\ninterface ResultsCountMessageProps {\n    count: number,\n    keyword: string,\n    currentLength: number,\n    dateFilter: number\n}\n\nconst ResultsCountMessage: React.FC<ResultsCountMessageProps> = ({count, keyword, currentLength, dateFilter}) => {\n    const article = count === 1 ? 'article' : 'articles';\n    const classes = useStyles();\n\n    const dateFilterMessage = dateFilter ? ` on ${getDateString(dateFilter)}` : '';\n\n    return (\n        <Typography variant=\"body1\" component=\"div\" className={classes.root}>\n            <Box fontWeight={700} textAlign={'center'}>\n                {`${count} news ${article} found related to \"${keyword}\"${dateFilterMessage}, displaying 1 - ${currentLength}`}\n            </Box>\n        </Typography>\n    )\n};\n\nexport default ResultsCountMessage","import React from \"react\";\nimport Skeleton from '@material-ui/lab/Skeleton';\n\ninterface LoadingMessageProps {\n\n}\n\nconst LoadingMessage: React.FC<LoadingMessageProps> = () => {\n    return (\n        <Skeleton variant=\"rect\" width={'100%'} height={200} animation=\"wave\"/>\n    )\n};\n\nexport default LoadingMessage","import Typography from \"@material-ui/core/Typography\";\nimport {Box} from \"@material-ui/core\";\nimport React from \"react\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport Button from \"@material-ui/core/Button\";\n\ninterface LoadMoreMessageProps {\n    onClick: () => void\n}\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        margin: theme.spacing(5, 0),\n        width: 300\n    }\n}));\n\nconst LoadMoreMessage: React.FC<LoadMoreMessageProps> = ({onClick}) => {\n    const classes = useStyles();\n\n    return (\n        <Button variant=\"contained\" disableElevation color=\"secondary\" onClick={onClick} className={classes.root}>\n            Load more\n        </Button>\n    )\n};\n\nexport default LoadMoreMessage","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {Box} from \"@material-ui/core\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport Divider from \"@material-ui/core/Divider\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        margin: theme.spacing(2, 0)\n    }\n}));\n\ninterface GenericMessageProps {\n    message: string,\n    divider?: boolean\n}\n\nconst GenericMessage: React.FC<GenericMessageProps> = ({message, divider}) => {\n    const classes = useStyles();\n\n    return (\n        <>\n            <Typography variant=\"body1\" component=\"div\" className={classes.root}>\n                <Box fontWeight={700} textAlign={'center'}>\n                    {message}\n                </Box>\n            </Typography>\n            { divider && <Divider style={{width: '100%'}}/> }\n        </>\n    )\n};\n\nexport default GenericMessage","import React, {useMemo} from \"react\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport {createStyles} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => createStyles({\n    highlight: {\n        backgroundColor: theme.palette.secondary.light,\n    }\n}));\n\ninterface HighlightedContentProps {\n    content: string,\n    keyword: string\n}\n\nconst HighlightedContent: React.FC<HighlightedContentProps> = ({content, keyword}) => {\n\n    const classes = useStyles();\n\n    const contentArray = useMemo(() => {\n        const escapedKeyword = keyword.replace(/[.*+\\-?^${}()|[\\]\\\\]/g, '\\\\$&'); // $& means the whole matched string\n        const re= new RegExp('('+escapedKeyword+')', 'gi');\n        return content.split(re);\n    }, [content, keyword]);\n\n    return (\n        <>\n            {contentArray.map((content, i) => {\n                const isKeyword = i % 2 === 1;\n                return isKeyword ?\n                    <span className={classes.highlight} key={i}>{ content }</span> :\n                    <span key={i}>{ content }</span>\n            })}\n        </>\n    )\n};\n\nexport default HighlightedContent","import React, {useEffect, useRef, useState} from \"react\";\nimport {Box, makeStyles} from \"@material-ui/core\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport HighlightedContent from \"./highlighted-content\";\nimport {ISearchedArticle} from \"./requests/response-types\";\n\nconst useGetHeight = () => {\n    const [cardHeight, setCardHeight] = useState(0);\n    const heightRef = useRef<HTMLDivElement>(null);\n\n    useEffect(() => {\n        if (heightRef.current) {\n            const cardHeight = heightRef.current.getBoundingClientRect().height;\n            setCardHeight(cardHeight)\n        }\n    }, [heightRef]);\n\n    return {\n        cardHeight,\n        heightRef\n    }\n};\n\nconst useStyles = makeStyles((theme) => ({\n    cardRoot: {\n        width: '100%',\n        margin: theme.spacing(2, 0),\n    },\n    cardActionArea: {\n        width: '100%',\n        height: '100%',\n        '& a': {\n            width: '100%',\n            height: '100%',\n            display: 'flex',\n            flexDirection: 'row',\n            alignItems: 'center',\n            justifyContent: 'center',\n            '&:visited, &:link': {\n                textDecoration: 'inherit',\n                color: 'inherit',\n                cursor: 'pointer'\n            }\n        }\n    },\n    cardMedia: {\n        width: '20%',\n        height: '100%'\n    },\n    imageContain: {\n        backgroundSize: 'contain',\n        backgroundColor: theme.palette.primary.main\n    },\n    cardContent: {\n        width: '80%',\n        height: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n    }\n}));\n\ninterface SearchedArticleCardProps {\n    article: ISearchedArticle,\n    keyword: string\n}\n\nconst SearchedArticleCard: React.FC<SearchedArticleCardProps> = ({article, keyword}) => {\n    const classes = useStyles();\n    \n    const {cardHeight, heightRef} = useGetHeight();\n    \n    return (\n        <Card className={classes.cardRoot} style={{height: cardHeight ? `${cardHeight}px` : 'auto'}}>\n            <CardActionArea className={classes.cardActionArea}>\n                <a href={article.url} target='_blank' rel=\"noopener noreferrer\">\n                    {\n                        article.urlToImage ?\n                            <CardMedia\n                                component=\"img\"\n                                alt={article.title}\n                                className={classes.cardMedia}\n                                image={article.urlToImage}\n                                title={article.title}\n                            /> :\n                            <CardMedia\n                                className={`${classes.cardMedia} ${classes.imageContain}`}\n                                image={process.env.PUBLIC_URL + '/xiaoxihome-news.jpg'}\n                                title={'No image'}\n                            />\n                    }\n                    <CardContent className={classes.cardContent} ref={heightRef}>\n                        <Typography variant=\"body1\" component=\"h2\">\n                            <Box fontWeight={700}>\n                                <HighlightedContent content={article.title} keyword={keyword}/>\n                            </Box>\n                        </Typography>\n                        <Typography variant=\"body2\" component=\"div\" color=\"textSecondary\">\n                            <Box fontWeight={700}>\n                                {\n                                    new Date(article.publishedAt).toDateString()\n                                }\n                            </Box>\n                        </Typography>\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                            <HighlightedContent content={article.content.replace(/\\[\\+[0-9]+\\schars\\]/ig, '')} keyword={keyword}/>\n                        </Typography>\n                    </CardContent>\n                </a>\n            </CardActionArea>\n        </Card>\n    )\n};\n\nexport default SearchedArticleCard","import React, {useEffect, useState} from \"react\";\nimport {IconButton} from \"@material-ui/core\";\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Fade from \"@material-ui/core/Fade\";\n// @ts-ignore\nimport  smoothscroll from 'smoothscroll-polyfill';\n\n// kick off the polyfill!\nsmoothscroll.polyfill();\n\nconst useActivateByScrollY = () => {\n    const [isActive, setIsActive] = useState(false);\n\n    const handleScroll = () => {\n        if (window.scrollY > window.innerHeight && !isActive) {\n            setIsActive(true);\n        } else if (window.scrollY < window.innerHeight && isActive) {\n            setIsActive(false);\n        }\n    };\n\n    useEffect(() => {\n        document.addEventListener('scroll', handleScroll);\n\n        return () => {\n            document.removeEventListener('scroll', handleScroll);\n        }\n    }, [isActive]);\n\n    return isActive\n};\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        position: 'fixed',\n        zIndex: theme.zIndex.modal,\n        bottom: '50px',\n        right: '50px',\n        backgroundColor: theme.palette.secondary.main,\n        color: '#FFF',\n        transition: theme.transitions.create('background-color opacity'),\n        transform: 'rotate(-90deg)',\n        '&:hover': {\n            backgroundColor: theme.palette.secondary.light,\n        },\n        [theme.breakpoints.down('md')]: {\n            bottom: '15px',\n            right: '15px',\n        }\n    }\n}));\n\ninterface ScrollToTopButtonProps {\n\n}\n\nconst ScrollToTopButton: React.FC<ScrollToTopButtonProps> = () => {\n\n    const classes = useStyles();\n\n    const isActive = useActivateByScrollY();\n    const scrollToTop = () => {\n        window.scroll({ top: 0, left: 0, behavior: 'smooth' });\n    };\n\n    return (\n        <Fade in={isActive}>\n            <Tooltip title=\"Scroll to Top\" className={classes.root}>\n                <IconButton aria-label=\"Scroll to Top\" onClick={scrollToTop}>\n                    <PlayArrowIcon />\n                </IconButton>\n            </Tooltip>\n        </Fade>\n    )\n};\n\nexport default ScrollToTopButton","import {Theme} from \"@material-ui/core\";\nimport * as d3 from \"d3\";\nimport getDateString from \"../components/articles/searched-articles/utilities/get-date-string\";\n\nclass FrequencyChartD3 {\n    dataArray: {\n        bin: number[],\n        frequency: number[]\n    };\n\n    auxArray: {\n        binDate: string[],\n        barTransitionDelay: number[]\n    };\n\n    params: {\n        lightColor: string,\n        darkColor: string,\n        primaryColor: string,\n        backgroundColor: string,\n        TRANSITION_DELAY: number,\n        BAR_TRANSITION_DURATION: number,\n        maxFrequency: number,\n        binLength: number,\n        argWidth: number,\n        selector: string\n    };\n\n    dimension: {\n        svgWidth: number,\n        svgHeight: number,\n        m: {t: number, r: number, b: number, l: number},\n        chartWidth: number,\n        chartHeight: number,\n        chartX: number,\n        chartY: number\n    };\n\n    scales: {\n        x: d3.ScaleBand<string>,\n        y: d3.ScaleLinear<number, number>\n    };\n\n    svg: d3.Selection<SVGSVGElement, unknown, HTMLElement, any>;\n\n    references: {\n        svg: d3.Selection<SVGSVGElement, unknown, HTMLElement, any>,\n        bars: d3.Selection<SVGRectElement, number, SVGGElement, unknown>,\n        axisX: d3.Selection<SVGGElement, unknown, HTMLElement, any>,\n        axisY: d3.Selection<SVGGElement, unknown, HTMLElement, any>,\n        axisXHoverDate: d3.Selection<SVGGElement, unknown, HTMLElement, any>,\n        axisXHoverFrequency: d3.Selection<SVGGElement, unknown, HTMLElement, any>,\n        axisYHover: d3.Selection<SVGGElement, unknown, HTMLElement, any>,\n        hoverDetection: d3.Selection<SVGRectElement, number, SVGGElement, unknown>,\n    };\n\n    axis: {\n        x: d3.Axis<string>,\n        y: d3.Axis<number | {valueOf(): number;}>,\n        xHoverDate: d3.Axis<string>,\n        xHoverFrequency: d3.Axis<string>,\n        yHover: d3.Axis<number | {valueOf(): number;}>,\n    };\n\n    constructor(theme: Theme, bin: number[], frequency: number[], width: number, selector: string) {\n        this.dataArray = {\n            bin,\n            frequency\n        };\n        this.auxArray = {\n            binDate: this.getBinDateArray(bin),\n            barTransitionDelay: this.getBarTransitionDelayArray(500, frequency)\n        };\n        this.params = {\n            lightColor: theme.palette.secondary.light,\n            darkColor: theme.palette.secondary.dark,\n            primaryColor: theme.palette.primary.light,\n            backgroundColor: '#EEE',\n            TRANSITION_DELAY: 500,\n            BAR_TRANSITION_DURATION: 2000,\n            maxFrequency: Math.max.apply(Math, this.dataArray.frequency),\n            binLength: this.dataArray.bin.length,\n            argWidth: width,\n            selector\n        };\n        this.dimension = this.getDimensions(width);\n        this.svg = d3.select(`#${this.params.selector}`).append('svg');\n        this.references = {\n            svg: this.svg,\n            bars: this.svg\n                .append('g')\n                .selectAll('rect').data(this.dataArray.frequency)\n                .enter().append('rect'),\n            axisX: this.svg.append('g'),\n            axisY: this.svg.append('g'),\n            axisXHoverDate: this.svg.append('g'),\n            axisXHoverFrequency: this.svg.append('g'),\n            axisYHover: this.svg.append('g'),\n            hoverDetection: this.svg\n                .append('g')\n                .selectAll('rect').data(this.dataArray.frequency)\n                .enter().append('rect'),\n        };\n        this.scales = {\n            x: d3.scaleBand()\n                .domain(this.dataArray.frequency.map((_, i) => i.toString()))\n                .range([0, this.dimension.chartWidth]),\n            y: d3.scaleLinear()\n                .domain([0, this.params.maxFrequency])\n                .range([this.dimension.chartHeight, 0])\n        };\n        this.axis = {\n            x: d3.axisBottom(this.scales.x),\n            y: d3.axisLeft(this.scales.y),\n            xHoverDate: d3.axisBottom(this.scales.x),\n            xHoverFrequency: d3.axisBottom(this.scales.x),\n            yHover: d3.axisLeft(this.scales.y)\n        };\n        this.setHoverDetectionEventHandlers = this.setHoverDetectionEventHandlers.bind(this);\n    }\n\n    getBinDateArray(binArray: number[]) {\n        return binArray.map(getDateString)\n    }\n\n    getBarTransitionDelayArray(transitionDelay: number, frequencyDataArray: number[]) {\n        const array = [];\n        let delay = transitionDelay;\n        let step = 20;\n        for (let i=0; i<frequencyDataArray.length; i++) {\n            if (frequencyDataArray[i] === 0) {\n                array.push(delay)\n            } else {\n                array.push(delay+=step);\n            }\n        }\n        return array\n    }\n\n    getDimensions(width: number) {\n        const svgWidth = width;\n        const svgHeight = Math.min(Math.round(svgWidth / 3), 200);\n        const m = {t: 10, r: 30, b: 30, l: 30}; // margin\n        const chartWidth = svgWidth - m.l - m.r;\n        const chartHeight = svgHeight - m.t - m.b;\n        const chartX = m.l;\n        const chartY = m.t;\n\n        return {\n            svgWidth,\n            svgHeight,\n            m,\n            chartWidth,\n            chartHeight,\n            chartX,\n            chartY\n        }\n    }\n\n    setSvg() {\n        this.references.svg\n            .attr('width', this.dimension.svgWidth)\n            .attr('height', this.dimension.svgHeight)\n            .style('background', this.params.backgroundColor);\n\n    }\n\n    setBars() {\n        const barWidth = this.scales.x.bandwidth();\n        const barHeight = (d: number) => this.dimension.chartHeight - this.scales.y(d);\n        const barX = (d: number, i: number) => this.dimension.chartX + (this.scales.x(i.toString()) || 0);\n        const barY = (d: number) => this.dimension.chartY + this.dimension.chartHeight - barHeight(d);\n\n        this.references.bars\n            .style('fill', this.params.lightColor)\n            .style('opacity', 0.8)\n            .attr('width', barWidth)\n            .attr('height', 0)\n            .attr('x', barX)\n            .attr('y', this.dimension.chartY + this.dimension.chartHeight);\n\n        this.references.bars\n            .transition()\n            .attr('height', barHeight)\n            .attr('y', barY)\n            .delay((d: number, i: number) => this.auxArray.barTransitionDelay[i])\n            .duration(this.params.BAR_TRANSITION_DURATION)\n            .ease(d3.easeElastic);\n    }\n\n    setAxisX() {\n        this.axis.x\n            .tickSizeOuter(0)\n            .tickFormat((d, i) => this.auxArray.binDate[parseInt(d)])\n            .tickValues([0, Math.floor(this.params.binLength * 0.25), Math.floor(this.params.binLength * 0.5), Math.floor(this.params.binLength * 0.75), this.params.binLength - 1].map(_=>`${_}`));\n        this.references.axisX\n            .style('transform', `translate(${-0.5*this.dimension.svgWidth}px, ${this.dimension.svgHeight + this.dimension.chartY}px)`)\n            .style('opacity', 0)\n            .style('color', this.params.darkColor);\n\n        this.references.axisX.transition()\n            .style('opacity', 1)\n            .style('transform', `translate(${this.dimension.chartX}px, ${this.dimension.chartHeight + this.dimension.chartY}px)`)\n            .delay(this.params.TRANSITION_DELAY)\n            .duration(1000)\n            .ease(d3.easeElastic);\n\n        this.axis.x(this.references.axisX);\n    }\n\n    setAxisY() {\n        this.axis.y\n            .tickSizeOuter(0)\n            .tickFormat(d3.format(\"d\"))\n            .tickValues([0, Math.floor(this.params.maxFrequency * 0.5), this.params.maxFrequency]);\n        this.references.axisY\n            .style('transform', `translate(${this.dimension.chartX}px, ${this.dimension.chartHeight}px)`)\n            .style('opacity', 0)\n            .style('color', this.params.darkColor);\n\n        this.references.axisY.transition()\n            .style('opacity', 1)\n            .style('transform', `translate(${this.dimension.chartX}px, ${this.dimension.chartY}px)`)\n            .delay(this.params.TRANSITION_DELAY)\n            .duration(1000)\n            .ease(d3.easeElastic);\n\n        this.axis.y(this.references.axisY);\n    }\n\n    setAxisXHoverDate() {\n        this.references.axisXHoverDate.style('opacity', 0)\n            .style('transform', `translate(${this.dimension.chartX}px, ${this.dimension.chartHeight + this.dimension.chartY}px)`);\n        this.axis.xHoverDate\n            .tickFormat((d) => this.auxArray.binDate[parseInt(d)]);\n    }\n\n    setAxisXHoverFrequency() {\n        this.references.axisXHoverFrequency.style('opacity', 0);\n        this.axis.xHoverFrequency\n            .tickFormat((d) => `${this.dataArray.frequency[parseInt(d)]}`)\n            .tickSize(0)\n            .tickPadding(-9);\n    }\n\n    setAxisYHover() {\n        this.references.axisYHover.style('opacity', 0)\n            .style('transform', `translate(${this.dimension.chartX}px, ${this.dimension.chartY}px)`);\n        this.axis.yHover\n            .tickFormat(d3.format(\"d\"))\n            .tickSizeInner(-this.dimension.chartWidth-6)\n            .tickSizeOuter(0)\n            .tickPadding(9);\n    }\n\n    setHoverDetection() {\n        const barWidth = this.scales.x.bandwidth();\n        const barX = (d: number, i: number) => this.dimension.chartX + (this.scales.x(i.toString()) || 0);\n\n        this.references.hoverDetection\n            .style('opacity', 0)\n            .attr('width', barWidth)\n            .attr('height', this.dimension.svgHeight)\n            .attr('x', barX)\n            .attr('y', 0);\n\n        this.setHoverDetectionEventHandlers()\n    }\n\n    setHoverDetectionEventHandlers() {\n        this.references.hoverDetection\n            .on('mouseover', (d, i) => {\n                this.axis.yHover.tickValues([d]);\n                this.axis.yHover(this.references.axisYHover);\n\n                this.references.axisYHover\n                    .selectAll(\".tick line\")\n                    .style('transform', `translate(-6px, 0)`)\n                    .style('color', this.params.primaryColor);\n                this.references.axisYHover.selectAll(\".domain\").remove();\n                this.references.axisYHover.style('opacity', 1);\n\n                const gridTextBox = this.references.axisYHover.select<SVGTextElement>('text').node()?.getBBox();\n                if (gridTextBox) {\n                    this.references.axisYHover.selectAll('g.tick').insert('rect',\n                        ':first-child')\n                        .attr('width', gridTextBox.width)\n                        .attr('height', gridTextBox.height)\n                        .attr('x', gridTextBox.x)\n                        .attr('y', gridTextBox.y)\n                        .style('fill', this.params.backgroundColor);\n                }\n\n                this.axis.xHoverDate\n                    .tickValues([`${i}`]);\n                this.axis.xHoverDate(this.references.axisXHoverDate);\n                this.references.axisXHoverDate.selectAll(\".domain\").remove();\n                this.references.axisXHoverDate.style('opacity', 1);\n\n                const hoverDateTextBox = this.references.axisXHoverDate.select<SVGTextElement>('text').node()?.getBBox();\n                if (hoverDateTextBox) {\n                    this.references.axisXHoverDate.selectAll('g.tick').insert('rect',\n                        ':first-child')\n                        .attr('width', hoverDateTextBox.width*1.2)\n                        .attr('height', hoverDateTextBox.height)\n                        .attr('x', hoverDateTextBox.x-0.1*hoverDateTextBox.width)\n                        .attr('y', hoverDateTextBox.y)\n                        .style('fill', this.params.backgroundColor);\n                }\n\n                this.axis.xHoverFrequency\n                    .tickValues([`${i}`]);\n                this.axis.xHoverFrequency(this.references.axisXHoverFrequency);\n                this.references.axisXHoverFrequency.selectAll(\".domain\").remove();\n                this.references.axisXHoverFrequency\n                    .style('transform', `translate(${this.dimension.chartX}px, ${this.scales.y(d) + this.dimension.chartY}px)`)\n                    .style('opacity', 1);\n\n                const bar = this.references.bars.filter((d, index) => index === i);\n                bar.style('fill', this.params.primaryColor);\n            })\n            .on('mouseout', (d, i) => {\n                this.references.axisYHover.style('opacity', 0);\n                this.references.axisXHoverFrequency.style('opacity', 0);\n                this.references.axisXHoverDate.style('opacity', 0);\n\n                this.references.bars.filter((d, index) => index === i)\n                    .style('fill', this.params.lightColor);\n\n            })\n    }\n\n    bindSetDate(setDate: (date: number) => void) {\n        this.references.hoverDetection\n            .on('click', (d, i) => {\n                setDate(this.dataArray.bin[i])\n            })\n    }\n\n    draw() {\n        this.setSvg();\n        this.setBars();\n        this.setAxisX();\n        this.setAxisY();\n        this.setAxisXHoverDate();\n        this.setAxisXHoverFrequency();\n        this.setAxisYHover();\n        this.setHoverDetection();\n    }\n\n    main() {\n        this.draw();\n    }\n}\n\nexport default FrequencyChartD3","import React, {Dispatch, SetStateAction, useEffect, useMemo, useRef} from \"react\";\nimport {makeStyles} from \"@material-ui/core\";\nimport { useTheme } from '@material-ui/core/styles';\nimport FrequencyChartD3 from \"../../../../d3-charts/frequency-chart-d3\";\nimport {IResponse} from \"../requests/response-types\";\n\nconst id = 'keyword-frequency-chart';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        width: '100%'\n    }\n}));\n\ninterface KeywordFrequencyProps {\n    bin: IResponse['series'],\n    frequency: IResponse['frequency'],\n    setDate: (date: number) => void,\n}\n\nconst KeywordFrequency: React.FC<KeywordFrequencyProps> = ({bin, frequency, setDate}) => {\n    const wrapperRef = useRef<HTMLDivElement>(null);\n    const classes = useStyles();\n    const theme = useTheme();\n\n    useEffect(() => {\n\n        if (!wrapperRef.current) return;\n\n        const chart = new FrequencyChartD3(\n            theme,\n            bin.map(ISOString => (new Date(ISOString)).getTime()),\n            frequency.slice(),\n            wrapperRef.current.getBoundingClientRect().width,\n            id\n        );\n        chart.main();\n        chart.bindSetDate(setDate);\n\n    }, [wrapperRef, bin, frequency]);\n\n    return (\n        <div ref={wrapperRef} className={classes.root} id={id}>\n\n        </div>\n    )\n};\n\nexport default KeywordFrequency","import React, {useState} from \"react\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport SortTypes from \"./sort-types\";\nimport {MenuItem} from \"@material-ui/core\";\n\nconst capitalizeString = (string: string) => {\n    const lowercase = string.toLowerCase();\n    return lowercase.charAt(0).toUpperCase() + lowercase.slice(1);\n\n};\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        minWidth: 200\n    },\n    resetFontSize: {\n        fontSize: theme.typography.fontSize\n    }\n}));\n\nexport interface SortPanelProps{\n    toggleSort: (sortType: SortTypes) => void,\n    sortType: SortTypes\n}\n\nconst SortPanel: React.FC<SortPanelProps> = ({toggleSort, sortType}) => {\n    const classes = useStyles();\n\n    const handleChange = (e: any) => {\n        const newType = e.target.value;\n        if (newType === sortType) return;\n\n        toggleSort(newType);\n    };\n\n    return (\n        <FormControl className={classes.root} color={\"secondary\"}>\n            <InputLabel htmlFor=\"searched-article-sort\">Sort by</InputLabel>\n            <Select\n                value={sortType}\n                onChange={handleChange}\n                inputProps={{\n                    name: 'sort',\n                    id: 'searched-article-sort',\n                }}\n                className={classes.resetFontSize}\n            >\n                <MenuItem value={SortTypes.relevance} className={classes.resetFontSize}>{capitalizeString(SortTypes.relevance)}</MenuItem>\n                <MenuItem value={SortTypes.date} className={classes.resetFontSize}>{capitalizeString(SortTypes.date)}</MenuItem>\n            </Select>\n        </FormControl>\n    )\n};\n\nexport default SortPanel","import React from \"react\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport {Chip} from \"@material-ui/core\";\nimport getDateString from \"../utilities/get-date-string\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport CancelIcon from '@material-ui/icons/Cancel';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        minWidth: 200,\n        borderRadius: 0,\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'center',\n        position: 'relative'\n    },\n    cancelIcon: {\n        position: 'absolute',\n        right: 5\n    }\n}));\n\nexport interface FilterByDateProps{\n    pendingDateFilter: number\n    dateFilter: number,\n    setDateFilter: (date: number) => void,\n}\n\nconst FilterByDate: React.FC<FilterByDateProps> = ({pendingDateFilter, dateFilter, setDateFilter}) => {\n    const classes = useStyles();\n\n    let chip;\n    if (dateFilter) {\n        chip = (\n            <Chip\n                label={`${getDateString(dateFilter)}`}\n                onDelete={() => setDateFilter(0)}\n                classes={{\n                    root: classes.root,\n                }}\n                color={\"secondary\"}\n                deleteIcon={<CancelIcon className={classes.cancelIcon}/>}\n            />\n        )\n    } else if (pendingDateFilter) {\n        chip = (\n            <Chip\n                label={`${getDateString(pendingDateFilter)}`}\n                onClick={() => setDateFilter(pendingDateFilter)}\n                className={classes.root}\n                variant=\"outlined\"\n                color={\"secondary\"}\n            />\n        )\n    } else {\n        chip = (\n            <Chip\n                label={'Use chart to set date'}\n                variant=\"outlined\"\n                disabled\n                className={classes.root}\n            />\n        )\n    }\n\n    return (\n        <>\n            <InputLabel shrink>Filter by date:</InputLabel>\n            {chip}\n        </>\n    )\n};\n\nexport default FilterByDate","import React from \"react\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport SortPanel, {SortPanelProps} from \"./sort-panel\";\nimport FilterByDate, {FilterByDateProps} from \"./filter-by-date\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'flex-end',\n        justifyContent: 'center',\n        [theme.breakpoints.down('md')]: {\n            flexDirection: 'column',\n            alignItems: 'center',\n        }\n    },\n    itemWrapper: {\n        padding: theme.spacing(2),\n        [theme.breakpoints.down('md')]: {\n            padding: theme.spacing(1),\n        }\n    }\n}));\n\ninterface FiltersProps extends SortPanelProps, FilterByDateProps {\n\n}\n\nconst Filters: React.FC<FiltersProps> = ({toggleSort, sortType, pendingDateFilter, dateFilter, setDateFilter}) => {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.itemWrapper}>\n                <SortPanel toggleSort={toggleSort} sortType={sortType}/>\n            </div>\n            <div className={classes.itemWrapper}>\n                <FilterByDate pendingDateFilter={pendingDateFilter} dateFilter={dateFilter} setDateFilter={setDateFilter} />\n            </div>\n        </div>\n    )\n};\n\nexport default Filters","import {Theme} from \"@material-ui/core\";\nimport {CSSProperties} from \"react\";\n\nexport const pageRoot = (theme: Theme): CSSProperties => ({\n    width: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    padding: theme.spacing(2, 0, 15, 0)\n});\n\nexport const page1000WidthWrapper = (theme: Theme): CSSProperties => ({\n    width: '1000px',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    padding: theme.spacing(2),\n    [theme.breakpoints.down('sm')]: {\n        width: '100%'\n    }\n});","import React, {useEffect, useState} from \"react\";\nimport {makeStyles} from \"@material-ui/core\";\nimport useSearchNews from \"./requests/use-search-news\";\nimport Status from \"./utilities/status\";\nimport ResultsCountMessage from \"./message-components/result-count-message\";\nimport LoadingMessage from \"./message-components/loading-message\";\nimport LoadMoreMessage from \"./message-components/load-more-message\";\nimport GenericMessage from \"./message-components/generic-message\";\nimport SearchedArticleCard from \"./searched-article-card\";\nimport ScrollToTopButton from \"./utilities/scroll-to-top-button\";\nimport KeywordFrequency from \"./frequency-chart/keyword-frequency\";\nimport Filters from \"./filters/filters\";\nimport getDateString from \"./utilities/get-date-string\";\nimport {ISearchedArticle, IFrequencyData} from \"./requests/response-types\";\nimport {page1000WidthWrapper, pageRoot} from \"../../../styles/styles\";\n\nconst useShowChartAndFilters = (data: ISearchedArticle[], frequencyData: IFrequencyData | null, keyword: string) => {\n    // reset when new keyword is searched\n    // show chart and filter if initial search found some data\n    // sequential searches on same keyword caused by applied filters\n    // keep chart and filter visible after initial search is made\n\n    const [foundDataOnKeyword, setFoundDataOnKeyword] = useState(false);\n\n    useEffect(() => {\n        if (data.length > 0 && frequencyData) {\n            setFoundDataOnKeyword(true)\n        }\n    }, [data, frequencyData]);\n\n    useEffect(() => {\n        setFoundDataOnKeyword(false)\n    }, [keyword]);\n\n    return foundDataOnKeyword\n};\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        ...pageRoot(theme)\n    },\n    widthWrapper: {\n        ...page1000WidthWrapper(theme)\n    },\n    cardRoot: {\n        width: '100%',\n        margin: theme.spacing(2, 0),\n    },\n    cardActionArea: {\n        width: '100%',\n        height: '100%',\n        '& a': {\n            width: '100%',\n            height: '100%',\n            display: 'flex',\n            flexDirection: 'row',\n            alignItems: 'center',\n            justifyContent: 'center',\n            '&:visited, &:link': {\n                textDecoration: 'inherit',\n                color: 'inherit',\n                cursor: 'pointer'\n            }\n        }\n    },\n    cardMedia: {\n        width: '20%',\n        height: '100%'\n    },\n    cardContent: {\n        width: '80%',\n        height: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n    }\n}));\n\ninterface SearchedArticlesProps {\n    keyword: string\n}\n\nconst SearchedArticles: React.FC<SearchedArticlesProps> = ({keyword}) => {\n\n    const {\n        data,\n        frequencyData,\n        status,\n        sortType,\n        totalCount,\n        pendingDateFilter,\n        dateFilter,\n        setPendingDateFilter,\n        setDateFilter,\n        loadMore,\n        toggleSort\n    } = useSearchNews(keyword);\n    const classes = useStyles();\n\n    const hasData = data.length > 0;\n\n    const notFoundMessage =`No news article related to \"${keyword}\"${dateFilter ? ' on ' + getDateString(dateFilter) : ''} was found`;\n    const endOfResultMessage = 'End of results';\n    const errorMessage = 'Server error please try later';\n\n    const showChartAndFilters = useShowChartAndFilters(data, frequencyData, keyword);\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.widthWrapper}>\n                { showChartAndFilters && frequencyData && <KeywordFrequency bin={frequencyData.bin} frequency={frequencyData.frequency} setDate={setPendingDateFilter}/>}\n                { showChartAndFilters && <Filters sortType={sortType} toggleSort={toggleSort} pendingDateFilter={pendingDateFilter} dateFilter={dateFilter} setDateFilter={setDateFilter}/> }\n                { hasData && <ResultsCountMessage count={totalCount} keyword={keyword} currentLength={data.length} dateFilter={dateFilter}/> }\n                { status === Status.LOADED_EMPTY && <GenericMessage message={notFoundMessage}/>}\n                { status === Status.ERROR && <GenericMessage message={errorMessage}/>}\n                {\n                    hasData &&\n                        data.map((article) =>\n                            <SearchedArticleCard article={article} keyword={keyword} key={article._id}/>\n                        )\n                }\n                { status === Status.LOADING && <LoadingMessage/> }\n                { status === Status.LOADED_NORMAL && <LoadMoreMessage onClick={loadMore}/> }\n                { status === Status.LOADED_NO_MORE && <GenericMessage message={endOfResultMessage} divider/>}\n            </div>\n\n            <ScrollToTopButton />\n        </div>\n    )\n};\n\nexport default SearchedArticles","import {State} from \"./redux/state\";\nimport React, {useEffect, useState} from \"react\";\nimport {Box, makeStyles} from \"@material-ui/core\";\nimport {categories, Category} from \"./redux/actions/category\";\nimport ArticlesContainer from \"./containers/articles-container\";\nimport Attribution from \"./components/attribution\";\nimport CopyLinkSnackBarContainer from \"./containers/copy-link-snackbar-container\";\nimport {fetchArticles} from \"./redux/actions/articles\";\nimport {connect} from \"react-redux\";\nimport Analytics from \"./components/analytics/analytics\";\nimport HeaderContainer from \"./containers/header-container\";\nimport Topic from \"./components/topic/topic\";\nimport SearchedArticles from \"./components/articles/searched-articles/searched-articles\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100vw',\n        maxWidth: '100%',\n        // minHeight: '100vh',\n        // overflowX: 'hidden',\n        // paddingBottom: '10px',\n        // overflowX is causing y-axis scroll problem, pb do the hack,\n        position: 'relative'\n    },\n    attribution: {\n        position: 'absolute',\n        zIndex: theme.zIndex.appBar,\n        left: 10,\n        bottom: 10\n    }\n}));\n\ninterface InnerAppProps extends Pick<State, 'category' | 'articles'> {\n    fetchArticlesAfterMount: () => void,\n    keyword: string\n}\n\nfunction InnerApp(props: InnerAppProps) {\n    const classes = useStyles();\n    const [minHeight, setMinHeight] = useState(window.innerHeight);\n    useEffect(() => {\n        props.fetchArticlesAfterMount()\n    }, []);\n\n    const main = () => {\n        let component;\n        switch (props.category) {\n            case Category.ANALYTICS:\n                component = <Analytics />;\n                break;\n            case Category.SEARCH:\n                component = <SearchedArticles keyword={props.keyword} key={props.keyword}/>;\n                break;\n            case Category.TOPIC:\n                component = <Topic/>;\n                break;\n            default:\n                component = <ArticlesContainer articles={props.articles} />;\n        }\n\n        return component\n    };\n\n    return (\n        <Box className={classes.root} style={{minHeight: `${minHeight}px`}}>\n            <HeaderContainer/>\n            {\n                main()\n            }\n            <div className={classes.attribution}>\n                <Attribution />\n            </div>\n            <CopyLinkSnackBarContainer />\n        </Box>\n    )\n}\nfunction mapStateToProps(state: State) {\n    return {\n        category: state.category,\n        articles: state.articles,\n        keyword: state.searchKeyword\n    }\n}\nfunction mapDispatchToProps(dispatch: any) {\n    return {\n        fetchArticlesAfterMount: () => dispatch(fetchArticles(Category.HEADLINE))\n    }\n}\nconst InnerAppContainer = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(InnerApp);\n\nexport default InnerAppContainer;","import React from 'react';\nimport { Provider } from 'react-redux';\nimport configureStore from \"./redux/configureStore\";\nimport { CssBaseline } from \"@material-ui/core\";\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport theme from './theme';\nimport InnerAppContainer from \"./inner-app\";\n\n\nconst store = configureStore();\n\nfunction App() {\n    return (\n        <Provider store={store}>\n            <ThemeProvider theme={theme}>\n                <CssBaseline />\n                <InnerAppContainer />\n            </ThemeProvider>\n        </Provider>\n    )\n}\n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}