{"version":3,"sources":["redux/actions.ts","redux/reducers.ts","redux/configureStore.ts","components/header/header.tsx","tools/copy-to-clipboard.ts","tools/use-swipeable.ts","components/articles/articles.tsx","tools/use-lazy-load.ts","tools/get-publish-time.ts","components/attribution.tsx","components/copy-link-snackbar.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Categories","CategoryActions","ArticleActions","categories","setCategoryAndFetchArticles","category","dispatch","getState","type","SET_CATEGORY","setCategory","fetchArticles","CopyLinkSnackbarActions","NEWS_API","QUERY","REQUEST_ARTICLES","fetch","encodeURIComponent","then","res","json","errors","IS_ERROR","articles","RECEIVE_ARTICLES","slice","receiveArticles","data","getNews","initState","HEADLINE","isError","isFetching","isCopyLinkSnackbarActive","rootReducers","combineReducers","state","action","actions","Object","assign","CLOSE_SNACKBAR","OPEN_SNACKBAR","preloadedState","useStyles","makeStyles","theme","tab","flexShrink","flexGrow","color","palette","primary","contrastText","toolbar","textTransform","Header","props","classes","clickHandler","dispatcher","setCategoryIfNeeded","AppBar","position","Toolbar","Container","Typography","align","className","variant","component","Tabs","value","headers","indexOf","indicatorColor","textColor","scrollButtons","map","_","i","Tab","label","key","onClick","copyToClipboard","UseSwipeableDirections","string","el","document","createElement","setAttribute","style","left","body","appendChild","select","execCommand","removeChild","DEBOUNCER","useSwipeable","ref","threshholdPx","useState","x1","setX1","y1","setY1","NULL","direction","setDirection","dragDistance","setDragDistance","Date","now","touchMoveLastTriggered","setTouchMoveLastTriggered","touchStartHandler","e","changedTouches","clientX","clientY","touchMoveHandler","currentX","currentY","Math","abs","touchEndHandler","RIGHT","LEFT","useEffect","currentElement","current","addEventListener","removeEventListener","resetSwipeStatus","createStyles","wrapper","width","margin","breakpoints","down","calcHeight","lines","typography","fontSize","lineHeight","ellipsis","root","content","bottom","right","height","backgroundImage","zIndex","overFlowHidden","overflow","usePrimaryCardStyles","media","skeleton","title","source","articleContent","buttons","useSecondaryCardStyles","Buttons","CardActions","Link","href","url","target","rel","underline","Button","size","console","log","Article","useRef","isVisible","setIsVisible","scrollHandlerLastCalledAt","checkIsVisible","calledAt","rect","getBoundingClientRect","isBefore","top","isAfter","window","innerHeight","useLazyLoad","isMounted","setIsMounted","isTransitionAnimationNeeded","useMediaQuery","useTheme","isPrimaryCard","id","cardPrimaryClasses","cardSecondaryClasses","cardClasses","setTimeout","Grid","item","xs","md","Card","raised","urlToImage","CardMedia","alt","image","Skeleton","CardContent","gutterBottom","Box","fontWeight","author","date","timePast","getTime","minutes","floor","hours","days","months","years","getPublishTime","publishedAt","replace","Zoom","in","LoadedArticles","article","Articles","containerRef","currentCategory","currentIndex","length","minHeight","Array","from","maxWidth","transform","container","alignContent","justify","spacing","Attribution","mt","mb","mx","Chip","avatar","Avatar","clickable","successSnackBar","backgroundColor","green","CopyLinkSnackbar","closeHandlder","Snackbar","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","SnackbarContent","message","IconButton","aria-label","store","createStore","rootReducer","applyMiddleware","thunkMiddleware","overflowX","paddingBottom","InnerAppContainer","connect","createMuiTheme","main","secondary","responsiveFontSizes","h1","fontFamily","join","up","App","ThemeProvider","CssBaseline","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5af166ee.chunk.js","sourcesContent":["import CopyLinkSnackbar from \"../components/copy-link-snackbar\";\n\nexport enum Categories {\n    HEADLINE= `HEADLINE`,\n    BUSINESS= `BUSINESS`,\n    ENTERTAINMENT= `ENTERTAINMENT`,\n    HEALTH= `HEALTH`,\n    SCIENCE= `SCIENCE`,\n    SPORTS= `SPORTS`,\n    TECHNOLOGY= `TECHNOLOGY`,\n}\nexport const categories: Array<keyof typeof Categories> = [\n    `HEADLINE`, `BUSINESS`, `ENTERTAINMENT`, `HEALTH`, `SCIENCE`, `SPORTS`, `TECHNOLOGY`\n];\n\nexport interface ArticleType {\n    source: string,\n    author: string,\n    title: string,\n    description: string,\n    url: string,\n    urlToImage: string,\n    publishedAt: string,\n    content: string\n}\n\nexport enum CategoryActions {\n    SET_CATEGORY = 'SET_CATEGORY'\n}\n\nfunction setCategory(category: Categories) {\n    return {\n        type: CategoryActions.SET_CATEGORY,\n        category\n    }\n}\n\nfunction setCategoryAndFetchArticles(category: Categories) {\n    return (dispatch: any, getState: any) => {\n        dispatch(setCategory(category));\n        dispatch(fetchArticles(category));\n    };\n}\n\nexport function setNextCategory() {\n    return (dispatch: any, getState: any) => {\n        const currentCategory = getState().category;\n        const currentIndex = categories.indexOf(currentCategory);\n        const isLast = currentIndex === categories.length - 1;\n        if (isLast) {\n            dispatch(setCategoryAndFetchArticles(Categories[categories[0]]));\n        } else {\n            dispatch(setCategoryAndFetchArticles(Categories[categories[currentIndex + 1]]));\n        }\n    };\n}\n\nexport function setPreviousCategory() {\n    return (dispatch: any, getState: any) => {\n        const currentCategory = getState().category;\n        const currentIndex = categories.indexOf(currentCategory);\n        const isFirst = currentIndex === 0;\n        if (isFirst) {\n            dispatch(setCategoryAndFetchArticles(Categories[categories[categories.length - 1]]));\n        } else {\n            dispatch(setCategoryAndFetchArticles(Categories[categories[currentIndex - 1]]));\n        }\n    };\n}\n\nexport function setCategoryIfNeeded(category: Categories) {\n    return (dispatch: any, getState: any) => {\n        if (getState().category === category) return;\n        dispatch(setCategoryAndFetchArticles(category));\n    };\n}\n\nexport enum ArticleActions {\n    IS_ERROR = 'IS_ERROR',\n    REQUEST_ARTICLES = 'REQUEST_ARTICLES',\n    RECEIVE_ARTICLES = 'RECEIVE_ARTICLES'\n}\n\nfunction requestArticlesFailed() {\n    return {\n        type: ArticleActions.IS_ERROR\n    }\n}\n\nfunction requestArticles() {\n    return {\n        type: ArticleActions.REQUEST_ARTICLES\n    }\n}\n\nfunction receiveArticles(articles: any) {\n    return {\n        type: ArticleActions.RECEIVE_ARTICLES,\n        articles: articles.slice()\n    }\n}\n\nconst NEWS_API = 'https://www.xiaoxihome.com/api/news?query=';\n// const NEWS_API = 'http://localhost:5000/api/news?query=';\n\nexport function fetchArticles(category: keyof typeof Categories) {\n    const QUERY = `\n        {\n            getNews(category: ${category}) {\n                source,\n                author,\n                title,\n                description,\n                url,\n                urlToImage,\n                publishedAt,\n                content\n            }\n        }\n    `;\n\n    return (dispatch: any) => {\n        dispatch(requestArticles());\n        return fetch(NEWS_API + encodeURIComponent(QUERY))\n            .then(res => res.json())\n            .then(json => {\n                if (json.errors) {\n                    dispatch(requestArticlesFailed())\n                } else {\n                    dispatch(receiveArticles(json.data.getNews))\n                }\n            })\n    }\n}\n\nexport enum CopyLinkSnackbarActions {\n    CLOSE_SNACKBAR = 'CLOSE_SNACKBAR',\n    OPEN_SNACKBAR = 'OPEN_SNACKBAR'\n}\n\nexport function closeCopyLinkSnackBar() {\n    return {\n        type: CopyLinkSnackbarActions.CLOSE_SNACKBAR\n    }\n}\n\nexport function openCopyLinkSnackBar() {\n    console.log('called');\n    return {\n        type: CopyLinkSnackbarActions.OPEN_SNACKBAR\n    }\n}","import {ArticleType, ArticleActions, Categories, CategoryActions, CopyLinkSnackbarActions} from \"./actions\";\nimport { combineReducers } from \"redux\";\n\nexport interface InitState {\n    category: Categories,\n    articles: {\n        isError: boolean,\n        isFetching: boolean,\n        articles: Array<ArticleType>\n    },\n    isCopyLinkSnackbarActive: boolean\n}\n\nexport const initState = {\n    category: Categories.HEADLINE,\n    articles: {\n        isError: false,\n        isFetching: true,\n        articles: []\n    },\n    isCopyLinkSnackbarActive: false\n};\n\nfunction category (state = initState.category, action: {type: CategoryActions, category: Categories}) {\n    switch (action.type) {\n        case CategoryActions.SET_CATEGORY:\n            return Categories[action.category];\n        default:\n            return state\n    }\n}\n\nfunction articles(state = initState.articles, actions: any) {\n    switch(actions.type) {\n        case ArticleActions.IS_ERROR:\n            return Object.assign({}, state, {isError: true});\n        case ArticleActions.REQUEST_ARTICLES:\n            return Object.assign({}, state, {\n                isError: false,\n                isFetching: true\n            });\n        case ArticleActions.RECEIVE_ARTICLES:\n            return Object.assign({}, {\n                isError: false,\n                isFetching: false,\n                articles: actions.articles.slice()\n            });\n        default:\n            return state\n    }\n}\n\nfunction isCopyLinkSnackbarActive(state = initState.isCopyLinkSnackbarActive, actions: any) {\n    switch(actions.type) {\n        case CopyLinkSnackbarActions.CLOSE_SNACKBAR:\n            return false;\n        case CopyLinkSnackbarActions.OPEN_SNACKBAR:\n            return true;\n        default:\n            return state\n    }\n}\n\nconst rootReducers = combineReducers({\n    category,\n    articles,\n    isCopyLinkSnackbarActive\n});\n\nexport default rootReducers;","import { createStore, applyMiddleware } from 'redux'\nimport thunkMiddleware from 'redux-thunk'\nimport rootReducer, {initState} from './reducers'\n// import { createLogger } from 'redux-logger'\n// const loggerMiddleware = createLogger();\n\nconst preloadedState = initState;\nexport default function configureStore() {\n    return createStore(\n        rootReducer,\n        preloadedState,\n        applyMiddleware(thunkMiddleware)\n        // applyMiddleware(thunkMiddleware, loggerMiddleware)\n    )\n}","import React from \"react\";\nimport {Categories, fetchArticles, setCategoryIfNeeded} from \"../../redux/actions\";\nimport {AppBar, Container, makeStyles, Tab, Tabs, Theme, Toolbar, Typography,} from \"@material-ui/core\";\n\n\nconst useStyles = makeStyles((theme: Theme) => ({\n    tab: {\n        flexShrink: 0,\n        flexGrow: 1,\n        color: theme.palette.primary.contrastText\n    },\n    toolbar: {\n        textTransform: 'uppercase'\n    }\n}));\n\ninterface HeaderProps {\n    headers: Array<keyof typeof Categories>,\n    dispatcher: any,\n    category: Categories\n}\n\nfunction Header(props: HeaderProps) {\n    const classes = useStyles();\n    const clickHandler = (category: Categories) => {\n        props.dispatcher(setCategoryIfNeeded(category));\n    };\n\n    return (\n        <AppBar color=\"primary\" position={'static'}>\n            <Toolbar>\n                <Container>\n                    <Typography align={\"center\"} className={classes.toolbar} variant={\"h1\"} component={'h1'}>\n                        News Canada\n                    </Typography>\n                </Container>\n            </Toolbar>\n                <Tabs\n                    value={props.headers.indexOf(props.category)}\n                    indicatorColor=\"secondary\"\n                    textColor=\"secondary\"\n                    variant=\"scrollable\"\n                    scrollButtons=\"auto\"\n                >\n                    {\n                        props.headers.map((_, i) => <Tab label={_} key={i} className={classes.tab} onClick={() => clickHandler(Categories[_])}/>)\n                    }\n                </Tabs>\n        </AppBar>\n    )\n}\n\nexport default Header;","function copyToClipboard(string: string) {\n    const el = document.createElement('textarea');\n    el.value = string;\n    el.setAttribute('readonly', '');\n    el.style.position = 'absolute';\n    el.style.left = '-9999px';\n    document.body.appendChild(el);\n    el.select();\n    document.execCommand('copy');\n    document.body.removeChild(el);\n}\n\nexport default copyToClipboard;","import {RefObject, useEffect, useState} from \"react\";\n\nexport enum UseSwipeableDirections {\n    NULL= 'NULL',\n    LEFT = 'LEFT',\n    RIGHT = 'RIGHT'\n}\n\nconst DEBOUNCER = 20;\n\nfunction useSwipeable(ref: RefObject<HTMLInputElement>, threshholdPx: number) {\n    const [x1, setX1] = useState(0);\n    const [y1, setY1] = useState(0);\n    const [direction, setDirection] = useState(UseSwipeableDirections.NULL);\n    const [dragDistance, setDragDistance] = useState(0);\n    const [touchMoveLastTriggered, setTouchMoveLastTriggered] = useState(Date.now());\n\n    function touchStartHandler(e: TouchEvent) {\n        setX1(e.changedTouches[0].clientX);\n        setY1(e.changedTouches[0].clientY)\n    }\n\n    function touchMoveHandler(e: TouchEvent) {\n        const now = Date.now();\n        if (now - touchMoveLastTriggered < DEBOUNCER) return;\n        const currentX = e.changedTouches[0].clientX;\n        const currentY = e.changedTouches[0].clientY;\n        if (Math.abs(currentX - x1) > Math.abs(currentY - y1)) {\n            setDragDistance(e.changedTouches[0].clientX - x1)\n        }\n        setTouchMoveLastTriggered(now);\n    }\n\n    function touchEndHandler(e: TouchEvent) {\n        const currentX = e.changedTouches[0].clientX;\n        const currentY = e.changedTouches[0].clientY;\n        if (Math.abs(currentX - x1) > Math.abs(currentY - y1) && Math.abs(currentX - x1) > threshholdPx) {\n            setDirection(currentX > x1 ? UseSwipeableDirections.RIGHT : UseSwipeableDirections.LEFT);\n        }\n        setDragDistance(0);\n    }\n\n    function resetSwipeStatus() {\n        setDirection(UseSwipeableDirections.NULL);\n    }\n\n    useEffect(() => {\n        const currentElement = ref.current;\n        if (!currentElement) return;\n        currentElement.addEventListener('touchstart', touchStartHandler);\n        currentElement.addEventListener('touchend', touchEndHandler);\n        currentElement.addEventListener('touchmove', touchMoveHandler);\n\n        return () => {\n            currentElement.removeEventListener('touchstart', touchStartHandler);\n            currentElement.removeEventListener('touchend', touchEndHandler);\n            currentElement.removeEventListener('touchmove', touchMoveHandler);\n        }\n    });\n\n    return {\n        direction,\n        dragDistance,\n        resetSwipeStatus\n    }\n}\n\nexport default useSwipeable","import React, {CSSProperties, useEffect, useRef, useState} from \"react\";\nimport {\n    Box,\n    Button,\n    Card,\n    CardActions,\n    CardContent,\n    CardMedia,\n    createStyles,\n    Grid,\n    IconButton,\n    Link,\n    makeStyles,\n    Snackbar,\n    SnackbarContent,\n    Theme,\n    Typography,\n    useMediaQuery,\n    useTheme,\n    Zoom,\n} from \"@material-ui/core\";\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport {InitState} from \"../../redux/reducers\";\nimport {ArticleType, openCopyLinkSnackBar, setNextCategory, setPreviousCategory} from \"../../redux/actions\";\nimport useLazyLoad from \"../../tools/use-lazy-load\";\nimport getPublishTime from \"../../tools/get-publish-time\";\nimport copyToClipboard from \"../../tools/copy-to-clipboard\";\nimport {ThemeStyle} from \"@material-ui/core/styles/createTypography\";\nimport useSwipeable, {UseSwipeableDirections} from \"../../tools/use-swipeable\";\n\nconst useStyles = makeStyles((theme) => createStyles({\n    wrapper: {\n        width: 'calc(100% - 40px)',\n        margin: '20px',\n    },\n    [theme.breakpoints.down(\"sm\")]: {\n        wrapper: {\n            width: 'calc(100% - 16px)',\n            margin: '8px'\n        },\n    },\n}));\n\nfunction calcHeight(lines: number, variant: ThemeStyle, theme: Theme): CSSProperties['height'] {\n    return `calc(${lines} * ${theme.typography[variant].fontSize} * ${theme.typography[variant].lineHeight})`;\n}\n\nfunction ellipsis(variant: ThemeStyle, theme: Theme) {\n    return createStyles({\n        root: {\n            position: 'relative',\n            '&:after': {\n                content: \"''\",\n                position: 'absolute',\n                bottom: 0,\n                right: 0,\n                width: '20%',\n                height: calcHeight(1, variant, theme),\n                backgroundImage: 'linear-gradient(to right, rgba(255, 255, 255, 0) , rgba(255, 255, 255, 1))',\n                zIndex: 10\n            },\n        }\n    })\n}\n\nconst overFlowHidden: CSSProperties = {\n    width: '100%',\n    overflow: 'hidden',\n    position: 'relative'\n};\n\nconst usePrimaryCardStyles = makeStyles((theme) => createStyles({\n    media: {\n        height: '550px',\n        ...overFlowHidden,\n    },\n    skeleton: {\n        height: '550px',\n        ...overFlowHidden,\n    },\n    title: {\n        height: calcHeight(1, 'body1', theme),\n        ...ellipsis('body1', theme).root,\n        ...overFlowHidden,\n    },\n    source: {\n        height: calcHeight(1, 'body2', theme),\n        ...overFlowHidden,\n    },\n    articleContent: {\n        height: calcHeight(2, 'body2', theme),\n        ...ellipsis('body2', theme).root,\n        ...overFlowHidden,\n    },\n    buttons: {\n        ...overFlowHidden,\n    },\n    [theme.breakpoints.down(\"sm\")]: {\n        media: {\n            height: '200px',\n        },\n        skeleton: {\n            height: '200px',\n        },\n    }\n}));\n\n\n\nconst useSecondaryCardStyles = makeStyles((theme) => createStyles({\n    media: {\n        height: '200px',\n        ...overFlowHidden,\n    },\n    skeleton: {\n        height: '200px',\n        ...overFlowHidden,\n    },\n    title: {\n        height: calcHeight(2, 'body1', theme),\n        ...ellipsis('body1', theme).root,\n        ...overFlowHidden,\n    },\n    source: {\n        height: calcHeight(1, 'body2', theme),\n        ...overFlowHidden,\n    },\n    articleContent: {\n        height: calcHeight(3, 'body2', theme),\n        ...ellipsis('body2', theme).root,\n        ...overFlowHidden,\n    },\n    buttons: {\n        ...overFlowHidden,\n    },\n    [theme.breakpoints.down(\"sm\")]: {\n\n    }\n}));\n\ninterface ButtonsProps {\n    url: string,\n    className: string,\n    dispatcher: any\n}\n\n\nfunction Buttons(props: ButtonsProps) {\n\n    function copyLinkHandler() {\n        copyToClipboard(props.url);\n        props.dispatcher(openCopyLinkSnackBar())\n    }\n\n    return (\n        <CardActions className={props.className}>\n            <Link href={props.url} target={'_blank'} rel=\"noopener\" underline={\"none\"}>\n                <Button size=\"small\" color=\"primary\">\n                    Learn more\n                </Button>\n            </Link>\n            <Button size=\"small\" color=\"primary\" onClick={copyLinkHandler}>Share</Button>\n        </CardActions>\n    )\n}\n\ninterface ArticleProps extends ArticleType {\n    id: number,\n    dispatcher: any\n}\n\nfunction Article(props: ArticleProps) {\n    const ref = useRef(null);\n    const isVisible = useLazyLoad(ref);\n    const [isMounted, setIsMounted] = useState(false);\n    const isTransitionAnimationNeeded = !useMediaQuery(useTheme().breakpoints.down('sm'));\n\n    const isPrimaryCard = props.id === 0 || props.id === 1;\n    const cardPrimaryClasses = usePrimaryCardStyles();\n    const cardSecondaryClasses = useSecondaryCardStyles();\n    const cardClasses = isPrimaryCard ? cardPrimaryClasses : cardSecondaryClasses;\n\n    useEffect(() => {\n        if (isTransitionAnimationNeeded) {\n            setTimeout(() =>setIsMounted(true), 225)\n            // Zoom transition 225ms\n        }\n    }, []);\n\n    const content = (\n        <Grid\n            item\n            xs={12}\n            md={isPrimaryCard ? 6 : 3}\n            ref={ref}\n        >\n            <Card raised>\n                {\n                    isVisible && props.urlToImage?\n                        <CardMedia\n                            component=\"img\"\n                            alt={props.title}\n                            className={cardClasses.media}\n                            image={props.urlToImage}\n                            title={props.title}\n                        /> :\n                        <Skeleton variant={\"rect\"} className={cardClasses.skeleton} />\n                }\n\n                <CardContent>\n                    <Typography gutterBottom variant=\"body1\" component=\"h2\" className={cardClasses.title}>\n                        <Box fontWeight={700}>\n                            { props.title }\n                        </Box>\n                    </Typography>\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" className={cardClasses.source}>\n                        <Box component={'span'} fontWeight={700}>\n                            { props.source ? props.source + ' - ' : props.author ? props.author + ' - ' : '' }\n                            { getPublishTime(new Date(props.publishedAt)) }\n                        </Box>\n                    </Typography>\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" className={cardClasses.articleContent}>\n                        { props.content && props.content.replace(/\\[\\+[0-9]+\\schars\\]/ig, '') }\n                    </Typography>\n                </CardContent>\n                <Buttons url={props.url} className={cardClasses.buttons} dispatcher={props.dispatcher}/>\n            </Card>\n        </Grid>\n    );\n\n    return isTransitionAnimationNeeded ? (\n        <Zoom in={!isMounted ? true : isVisible}>\n            { content }\n        </Zoom>\n    ) : content;\n}\n\ninterface LoadedArticlesProps {\n    articles: Array<ArticleType>,\n    dispatcher: any\n}\n\nfunction LoadedArticles(props: LoadedArticlesProps) {\n    return (\n        <>\n            {\n                props.articles.map((article, i) => {\n                    return (\n                        <Article {...article} key={i} id={i} dispatcher={props.dispatcher}/>\n                    )\n                })\n            }\n        </>\n    )\n}\n\ninterface ArticlesProps extends Pick<InitState, 'articles'> {\n    dispatcher: any,\n}\n\nfunction Articles(props: ArticlesProps) {\n    const classes = useStyles();\n    const containerRef = useRef(null);\n    const {\n        direction,\n        dragDistance,\n        resetSwipeStatus\n    } = useSwipeable(containerRef, 50);\n\n    useEffect(() => {\n        if (direction === UseSwipeableDirections.RIGHT) {\n            props.dispatcher(setPreviousCategory())\n        } else if (direction === UseSwipeableDirections.LEFT) {\n            props.dispatcher(setNextCategory())\n        }\n        return () => {\n            resetSwipeStatus();\n        }\n    }, [direction]);\n\n    let content;\n    if (props.articles.isError) {\n        content = (\n            <div style={{\n                width: '100%',\n                minHeight: '100vh'\n            }}>\n                error\n            </div>\n        )\n    } else if (props.articles.isFetching) {\n        content = (\n            <>\n                {\n                    Array.from(Array(10), (_, i) => {\n                        return (\n                            <Grid item key={i}>\n                                <Box width={500} height={300} maxWidth={'100%'}>\n                                    <Skeleton variant={\"rect\"} width={500} height={200}/>\n                                    <Skeleton width={500}/>\n                                    <Skeleton width={500}/>\n                                </Box>\n                            </Grid>\n                        )\n                    })\n                }\n            </>\n        )\n    } else {\n        content = <LoadedArticles articles={props.articles.articles} dispatcher={props.dispatcher}/>\n    }\n\n    return (\n        <div style={{\n            width: '100%',\n            transform: `translateX(${dragDistance}px)`,\n            // it affects snackbar fixed behavior\n            // left: `${dragDistance}px`,\n            // position: 'relative'\n        }}>\n            <Box className={classes.wrapper}>\n                <Grid container direction={\"row\"} alignContent={\"center\"} justify={\"center\"} spacing={2} ref={containerRef}>\n                    { content }\n                </Grid>\n            </Box>\n        </div>\n    )\n}\n\nexport default Articles;","import React, {useEffect, useState} from \"react\";\n\nexport default function useLazyLoad(ref: React.RefObject<HTMLInputElement>) {\n    const [isVisible, setIsVisible] = useState(false);\n    let scrollHandlerLastCalledAt = Date.now() - 1000;\n\n    function checkIsVisible() {\n        const calledAt = Date.now();\n        if (calledAt - scrollHandlerLastCalledAt < 20) {\n            return\n        } else {\n            scrollHandlerLastCalledAt = calledAt\n        }\n        if (!ref.current) return;\n\n        const rect = ref.current.getBoundingClientRect();\n        const isBefore = rect.top + rect.height < 0;\n        const isAfter = rect.top > window.innerHeight;\n        if (!isBefore && !isAfter) setIsVisible(true);\n    }\n\n    useEffect(() => {\n        if (isVisible) return;\n        checkIsVisible();\n        document.addEventListener('scroll', checkIsVisible);\n        return () => {\n            document.removeEventListener('scroll', checkIsVisible);\n        }\n    });\n\n    return isVisible\n}","export default function getPublishTime(date: Date): string{\n    const timePast = Date.now() - date.getTime();\n    if (timePast < 0) {\n        return 'now'\n    }\n    const minutes = Math.floor(timePast / (60 * 1000));\n    if (minutes <= 59) {\n        return `${minutes} ${minutes === 1 ? 'minute' : 'minutes'} ago`\n    }\n    const hours = Math.floor(timePast / (60 * 60 * 1000));\n    if (hours <= 23) {\n        return `${hours} ${hours === 1 ? 'hour' : 'hours'} ago`\n    }\n    const days = Math.floor(timePast / (24 * 60 * 60 * 1000));\n    if (days <= 30) {\n        return `${days} ${days === 1 ? 'day' : 'days'} ago`\n    }\n    const months = Math.floor(timePast / (30 * 24 * 60 * 60 * 1000));\n    if (months <= 12) {\n        return `${months} ${months === 1 ? 'month' : 'months'} ago`\n    }\n    const years = Math.floor(timePast / (365 * 24 * 60 * 60 * 1000));\n    return `${years} ${years === 1 ? 'year' : 'years'} ago`\n}","import React from \"react\";\nimport {Avatar, Box, Chip, Grid, Link} from \"@material-ui/core\";\n\nfunction Attribution() {\n    return (\n        <Box mt={10} mb={2} mx={2}>\n            <Grid container direction={'row'} spacing={2}>\n                <Grid item>\n                    <Link href={'https://www.xiaoxihome.com/'} target={'_blank'} rel=\"noopener\" underline={\"none\"}>\n                        <Chip\n                            avatar={<Avatar>X</Avatar>}\n                            label=\"🔧 with ❤️ by XiaoxiHome\"\n                            color=\"primary\"\n                            clickable\n                        />\n                    </Link>\n                </Grid>\n                <Grid item>\n                    <Link href={'https://newsapi.org/'} target={'_blank'} rel=\"noopener\" underline={\"none\"}>\n                        <Chip\n                            avatar={<Avatar>N</Avatar>}\n                            label=\"News data courtesy of NewsAPI.org\"\n                            color=\"secondary\"\n                            clickable\n                        />\n                    </Link>\n                </Grid>\n            </Grid>\n        </Box>\n    )\n}\n\nexport default Attribution;","import React from \"react\";\nimport {\n    createStyles,\n    IconButton,\n    Snackbar,\n    SnackbarContent,\n} from \"@material-ui/core\";\nimport Close from '@material-ui/icons/Close';\nimport {green} from '@material-ui/core/colors';\nimport {closeCopyLinkSnackBar} from \"../redux/actions\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\n\nconst useStyles = makeStyles(() => createStyles({\n    successSnackBar: {\n        backgroundColor: green[600]\n    },\n}));\n\ninterface CopyLinkSnackbarProps {\n    dispatcher: any,\n    isCopyLinkSnackbarActive: boolean\n}\n\nfunction CopyLinkSnackbar(props: CopyLinkSnackbarProps) {\n    const classes = useStyles();\n\n    function closeHandlder() {\n        props.dispatcher(closeCopyLinkSnackBar())\n    }\n\n    return (\n        <Snackbar\n            anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'center',\n            }}\n            open={props.isCopyLinkSnackbarActive}\n            autoHideDuration={3000}\n            onClose={closeHandlder}\n        >\n            <SnackbarContent\n                className={classes.successSnackBar}\n                message={\n                    <span id=\"client-snackbar\">\n                        Link copied to clipboard\n                    </span>\n                }\n                action={[\n                        <IconButton key=\"close\" aria-label=\"close\" color=\"inherit\" onClick={closeHandlder}>\n                    <Close/>\n                    </IconButton>,\n            ]}\n            />\n    </Snackbar>\n    )\n}\n\nexport default CopyLinkSnackbar;","import React, {useEffect} from 'react';\nimport {connect, Provider} from 'react-redux';\nimport configureStore from \"./redux/configureStore\";\nimport {InitState} from \"./redux/reducers\";\nimport {categories, Categories, fetchArticles} from \"./redux/actions\";\nimport {Box, createStyles, CssBaseline, makeStyles} from \"@material-ui/core\";\nimport {\n    createMuiTheme,\n    responsiveFontSizes,\n    ThemeProvider,\n} from '@material-ui/core/styles';\nimport Header from \"./components/header/header\";\nimport Articles from \"./components/articles/articles\";\nimport Attribution from \"./components/attribution\";\nimport CopyLinkSnackbar from \"./components/copy-link-snackbar\";\n\n\nconst store = configureStore();\n\nconst useStyles = makeStyles((theme) => createStyles({\n    root: {\n        width: '100vw',\n        maxWidth: '100%',\n        minHeight: '100vh',\n        overflowX: 'hidden',\n        paddingBottom: '10px',\n        // overflowX is causing y-axis scroll problem, pb do the hack\n    }\n}));\n\ninterface InnerAppProps extends InitState{\n    dispatch: any,\n}\n\nfunction InnerApp(props: InnerAppProps) {\n    const classes = useStyles();\n    useEffect(() => {\n        props.dispatch(fetchArticles(Categories.HEADLINE))\n    }, []);\n\n    console.log(props);\n    return (\n        <Box className={classes.root}>\n            <Header headers={categories} dispatcher={props.dispatch} category={props.category}/>\n            <Articles articles={props.articles} dispatcher={props.dispatch}/>\n            <Attribution />\n            <CopyLinkSnackbar dispatcher={props.dispatch} isCopyLinkSnackbarActive={props.isCopyLinkSnackbarActive}/>\n        </Box>\n    )\n}\nfunction mapStateToProps(state: InitState) {\n    return state\n}\nconst InnerAppContainer = connect(mapStateToProps)(InnerApp);\nlet theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: '#333333',\n            contrastText: '#fff',\n        },\n        secondary: {\n            main: '#1EB980',\n            contrastText: '#fff',\n        },\n    },\n});\ntheme = responsiveFontSizes(theme);\ntheme.typography.h1 = {\n    fontFamily: [\n        'Anton',\n        'sans-serif',\n    ].join(','),\n    fontWeight: 400,\n    fontSize: '2rem',\n    [theme.breakpoints.up('md')]: {\n        fontSize: '2.5rem',\n    },\n    fontStyle: \"normal\",\n    color: \"inherit\"\n};\n\nfunction App() {\n    return (\n        <Provider store={store}>\n            <ThemeProvider theme={theme}>\n                <CssBaseline />\n                <InnerAppContainer />\n            </ThemeProvider>\n        </Provider>\n    )\n}\n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}